{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./src/js/modules/system.player.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/modules/tools.js","webpack:///./node_modules/stb-component/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./src/js/modules/exit.timeshift.js","webpack:///./src/js/modules/ui/spinner.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/cjs-iso-639/index.js","webpack:///./src/js/modules/ui/equalizer.js","webpack:///./src/js/modules/infoWidget.js","webpack:///./src/js/modules/menu.constructor.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/array-find-index/index.js","webpack:///./src/js/modules/advertising/core.js","webpack:///./src/js/modules/advertising/player.js","webpack:///./src/js/modules/intent.js","webpack:///./src/js/modules/pip.intent.js","webpack:///./src/js/modules/settings/video.options.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./src/js/modules/player-debugger.js","webpack:////home/harry/appGit/magcore-my-fork/node_modules/cjs-polyfills/lib/array.find.index.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/modules/environment.js","webpack:///./src/js/platforms/mag/stbPlayerManager.js","webpack:///./src/js/platforms/mag/stbDisplayManager.js","webpack:///./src/js/platforms/mag/stbAudioManager.js","webpack:///./src/js/pages/main.js","webpack:///./src/js/modules/ui/player.panel.js","webpack:///./node_modules/spa-component-progress-bar/index.js","webpack:///./node_modules/spa-component-grid/index.js","webpack:///./src/js/modules/ui/player.buttons.grid.render.js","webpack:///./src/js/modules/menu.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/langs/data.js","webpack:///./src/js/platforms/mag/init.js","webpack:///./src/js/modules/advertising/api.js","webpack:///./src/js/modules/advertising/advertising.class.js","webpack:///./src/js/modules/advertising/progress.canvas.js","webpack:///./src/js/modules/advertising/title.js","webpack:///./node_modules/cjs-format/index.js","webpack:///./src/js/modules/types.js","webpack:///./src/js/modules/intent.modal.menu.js","webpack:///./node_modules/spa-component-widget/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./src/js/modules/ts.listeners.js","webpack:///./src/js/pages/clear.js","webpack:///./node_modules/stb-component-panel/index.js","webpack:///./node_modules/spa-component-panel/index.js","webpack:///./src/js/modules/ui/exit.modal.js","webpack:///./src/js/pages/settings.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./src/js/modules/settings/modal.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/modules/settings/sound.options.js","webpack:///./src/js/modules/settings/display.options.js","webpack:///./src/js/pages/advertising.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./node_modules/spa-component-button/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","counter","Component","config","self","this","visible","focusable","$node","$body","parent","children","propagate","document","createElement","className","id","add","hide","defaultEvents","events","forEach","eventName","addListener","apply","addEventListener","event","focus","emit","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","remove","activePage","activeComponent","blur","splice","indexOf","removeChild","data","activeItem","classList","show","callback","setTimeout","pipIntent","osdPipIntent","exitTS","tools","player","intents","playerManager","players","list","primaryPlayer","primaryIndex","PROXY","top","system","queryParameters","proxy","SINGLE","useSingleModeByDeviceModel","onTracksInfo","lastPrimaryIntent","audioTracks","subtitlesTracks","onContentInfo","videoInfo","onPlayEnd","onPlayStart","onPlayError","code","onDualMono","onTracksUpdate","tracks","setHandlers","playerLink","clearHandlers","setAudioSource","source","log","audioManager","clear","STATE_IDLE","STATE_OPENING","STATE_PLAYING","STATE_PAUSE","query","multicastProxy","intent","redefine","action","primary","resume","time","position","setAudioPid","uri","solution","loadExternalSubtitles","url","enableSubtitles","reset","pipPlayer","fullscreen","defineProperties","duration","val","state","aspect","aspectConversion","audioPID","subtitlesPID","volume","subtitlesEncoding","stbPlayer","preventCallback","result","playExtraString","metadata","context","playerId","surface","moveDown","audioLang","langs","pid","lang","viewport","setViewport","getRealViewPort","undefined","core","device","model","displayOnTop","moveTop","lastPlayUri","extra","playStr","window","lastCtx","error","pip","_player","idx","pipDataObject","swap","playerState","title","mime","coordinates","maximize","close","_intent","controls","parse","location","search","substring","route","pageTo","page","pageFrom","active","showPage","from","to","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","Array","slice","$parserAElement","resolutionMap","480","width","height","480i","480p","576","576i","576p","720","720p","720p60","1080","1080i","1080i60","1080p","1080p60","3840x2160p30","3840x2160p25","3840x2160p50","3840x2160p60","parseTime","secToParse","hour","min","sec","Math","floor","abs","checkUsb","usbs","JSON","gSTB","GetStorageInfo","mountPath","isReadOnly","getCodecImageName","codecType","metrics","codecs","1","2","3","4","5","6","7","8","vp","currentResolutionName","RDir","currentResolution","match","currentGraphic","screen","x","round","y","parseUriString","uriString","href","protocol","port","host","hostname","excludeList","preventMultiplePlayer","detectPipSupport","pipDisableModels","packageMap","removePipOnAudioMime","checkAppByPid","applicationPid","concat","taskManager","stack","findIndex","application","debug","disableSoundOptions","disableSpinnerAnimation","pipSupport","waitUntilPlayEvent","List","Layout","LayoutList","handlers","$noData","fixedData","$item","layout","inner","focusIndex","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","savePath","saveName","date","Date","day","getDate","mon","getMonth","year","getFullYear","getMinutes","getHours","getSeconds","playback","timeshift","currentPlayIntent","replace","onExit","EXIT_NOT_SAVE","EXIT_SAVE","path","save","EXIT_REQUEST_SAVE","timeout","$spinnerNode","getElementById","showAfter","milliseconds","clearTimeout","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","size","codes","2T","2B","local","slideIndex","timer","style","display","animate","dualMonoTimeout","$text","$icon","$dualMonoImg","src","pages","main","displayInfo","text","icon","showDualMono","systemPlayer","sendPipIntent","exitTs","aspects","0","buttons","gettext","currentAspect","settings","currentIntent","persistent","creator","reasonToggleView","subtitles","current","currentPID","StbComponentModal","Modal","$overlay","onkeydown","keydown","$header","link","rel","head","$focusItem","viewIndex","type","TYPE_VERTICAL","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","wheelDeltaX","currSize","onClick","render","blocked","realSize","maxCount","viewSize","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","arr","predicate","ctx","TypeError","len","api","setTitle","spinner","targets","video","lastWatch","startCode","playbackCode","skipPlaybackTimes","skipAppStartTimes","tv-channel","ADVERTISING_DELAY","playAds","target","osdToHide","osdStack","osd","packageName","applicationState","advertising","requiredPart","onRequiredWatch","done","checkIntent","previousState","runnerConfig","resource","getAd","CODE_APP_START","currentAd","Intent","drawProgress","setProgress","progressSec","progress","quarter","middle","thirdQuarter","start","setInterval","clearInterval","$title","equalizer","findIntentHandlers","reasonPip","menuElements","stopProgressTimer","body","tvChannel","playerPanel","showPauseButton","$rightText","$leftText","progressBar","max","startProgressTimer","getMenu","mainMenu","initButtons","nextChannel","prevChannel","next","prev","archive","showPlayButton","tmpIntent","setNewValue","rawValue","SetEnv","stringify","playerHardwareAcceleration","stbPlayerManager","hardwareAcceleration","getCurrentValue","GetEnv","varList","description","setValue","getValue","load","environment","language","setAttribute","plugins","getCoreInstance","platform","contextmenu","preventDefault","split","part","decodeURIComponent","params","encodeURIComponent","join","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","token","contains","toString","toggle","screenHeight","availHeight","availTop","availBottom","availWidth","availLeft","availRight","linkCSS","theme","message","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","responseText","onerror","ontimeout","open","send","meta","msgId","plural","evalResult","eval","env","playerCount","_timeShiftFolder","_audioPrimaryLanguage","_audioSecondaryLanguage","_subtitlesSecondaryLanguage","_subtitlesPrimaryLanguage","stbDisplayManager","_dolbyDigitalAudioMode","_enableSubtitles","_subtitlesColor","_subtitlesEncoding","_subtitlesFont","_subtitlesOffset","_subtitlesSize","_aspectConversion","_viewport","_clip","_fullscreen","_enableTeletext","_teletextVisible","_enablePopup","_visible","_teletextOpacity","_teletextViewport","_timeShiftMaxDuration","_timeShiftSlidingMode","_checkSSLCertificate","casParams","webCasParams","stbEvent","GetAudioPIDsEx","e","GetSubtitlePIDs","metadataInfo","GetMetadataInfo","getMediaInfo","GetVideoInfo","getVideoInfo","onTracksError","onRTPBreak","SetTopWin","clearStatistics","statistics","continuityErrors","decodingErrors","rtpErrors","drawSubtitle","ShowSubtitle","LoadExternalSubtitles","HLSInfo","clip","SetViewportEx","Play","Stop","Pause","Continue","rotate","angle","Rotate","onTimeShift","teletextTracks","setTeletextViewport","teletextCommand","command","TeletextCommand","defaultTeletextSubtitlesCharset","DefaultTtxSubCharset","forceTeletextSubtitlesCharset","ForceTtxSubCharset","timeShiftState","timeShiftStart","timeShiftStop","capabilities","autoFrameRate","teletext","GetMute","SetMute","GetVolume","SetVolume","GetAudioPID","SetAudioPID","dolbyDigitalAudioMode","SetAudioOperationalMode","SetSubtitles","GetSubtitlePID","SetSubtitlePID","subtitlesColor","SetSubtitlesColor","SetSubtitlesEncoding","subtitlesFont","SetSubtitlesFont","subtitlesOffset","SetSubtitlesOffs","subtitlesSize","SetSubtitlesSize","bufferLoad","GetBufferLoad","GetMediaLen","durationMs","GetMediaLenEx","GetPosTime","SetPosTime","positionMs","GetPosTimeEx","SetPosTimeEx","positionPercent","GetPosPercent","SetPosPercent","loop","SetLoop","speed","GetSpeed","SetSpeed","a","SetAspect","SetPIG","enableTeletext","SetTeletext","teletextVisible","TeletextShow","enablePopup","SetVideoControl","SetVideoState","teletextOpacity","TeletextTransparency","teletextPID","GetTeletextPID","SetTeletextPID","teletextViewport","timeShiftFolder","timeShift","SetTimeShiftFolder","timeShiftMaxDuration","SetMaxDuration","timeShiftSlidingMode","SetSlidingMode","speeds","audioPrimaryLanguage","SetAudioLangs","audioSecondaryLanguage","subtitlesPrimaryLanguage","SetSubtitleLangs","subtitlesSecondaryLanguage","player1","player2","autoFrameRateSource","fr24","fr50","fr60","setAutoFrameRate","bitMask","SetAutoFrameRate","parseInt","3DConversionModeSource","setMulticastProxy","SetMulticastProxyURL","EnableMulticastProxy","resetMulticastProxy","activateCAS","param","defaultParams","otherParams","serverAddress","SetCASParam","serverPort","companyName","opID","errorLevel","SetCASDescrambling","softDescrambling","iniFile","LoadCASIniFile","SetAdditionalCasParam","SetCASType","setCASParams","activateWebCAS","SetWebCASLogging","logging","SetupWebCAS","setWebCASParams","RTSP","endByAnnounce","endByGetParameter","endByRTP","endByTimeout","keepAlive","useUDP","setRTSP","flags","SetupRTSP","setBufferSize","SetBufferSize","3DConversionMode","Get3DConversionMode","Set3DConversionMode","checkSSLCertificate","SetCheckSSLCertificate","stbAudioOutput","stbAudioManager","playConfig","PlayerPanel","Menu","menuConstructor","exitTimeShift","types","modalActions","contentInfo","panelHide","serverTimeShiftRequest","serverTimeShiftBufferProgress","serverEpgUpdateCurrentProgram","localTimeShiftBufferProgress","localTimeShiftAutoStart","currentTime","contentType","isActive","startTime","timeoutDuration","intervals","remote","remoteTimer","pauseBlockingState","pauseBlockingTimeout","currentIndex","retryOnError","timeoutId","currentInterval","setCurrentProgress","epg","array","NOT_ACTIVE","PAUSED_NO_LINK","PAUSED_GET_LINK","PAUSED_GET_LINK_ERROR","PLAYING_FILE","PAUSE_FILE","currentState","realProgram","inited","realProgramUrl","realProgramInited","realProgramPaused","playerControl","$program","$mediaInfo","codec","$icons","PANEL_HIDE_TIMEOUT","durationDetected","curTime","setServerTimeShiftBufferProgress","now","bufferBar","onContentErrorNotify","notify","stream","updatePlayerControls","checkDuration","disable","$links","enabledCount","map","getEpg","getServerEpgHandler","findCurrentEpg","newTime","nextCheck","timeoutTime","epgIndex","nowTime","detectTotalDuration","audioTrack","currentSubtitleTrack","audioPid","track","getSubtitlesByPID","subtitleTracksUpdate","endOfFile","prefix","maxRewindTo","$progressbar","setPos","playInsteadRewindUri","hidePanel","PID","sub","playPauseHandler","currentProgram","getLink","commonPlaybackPause","serverTimeShiftPauseHandler","enable","activateTimeShift","manual","forcePause","forceResume","mountUsb","serverTimeShiftNextPrevEpg","curr","getUrl","nextPrevContent","resetInfo","nextPrevChannel","settingsAudio","correction","onPlaybackHideHandler","restoreSoundInPiP","onPlay","onRewind","onPrevNext","onChannels","retryPlaybackHandler","checkAbility","ALLOW_MANUAL","delay","content:info","playback:stop","tracks:update","content:dualMono","volumeCorrection","modalMenu","headless","panel","startPlay","SOURCES","INTENT","SYSTEM","onInfoPress","onNumberPress","number","String","fromCharCode","lastFocus","ProgressBar","Grid","buttonsRender","Player","$buttonsWrapper","$bufferBar","click:item","chM","chP","buttonsArray","button","$buttonIcon","ui","DEFAULT_COLOR","colorize","color","backgroundColor","$value","hex","lum","rgb","substr","colorLuminance","step","prevValue","cycleX","cycleY","focusX","focusY","fill","posX","posY","dX","dY","idxY","idxX","$row","$tbody","newData","draw","onItemClick","construct","$table","colSpan","rowSpan","insertRow","insertCell","sizeX","sizeY","translate","fresh","defaultTranslate","overflow","ch-","ch+","Page","isStandByPaused","hdmiEventReaction","paused","hdmi_event_delay","currentReq","AdClass","place","backend","request","response","ad","CODE_VIDEO_CLUB_START_PLAYBACK","CODE_VIDEO_CLUB_DURING_PLAYBACK","CODE_TV_START_PLAYBACK","CODE_TV_DURING_PLAYBACK","abort","sendGet","method","Advertising","tracking","campaign","firstQuartile","midpoint","thirdQuartile","complete","detectedColor","$canvas","getContext","positionX","positionY","onePercent","colorPickerBlock","valueColor","percent","clearRect","beginPath","arc","PI","strokeStyle","lineWidth","stroke","lineCap","getComputedStyle","format","total","args","AUDIO_TYPES","LANGUAGES","rus","eng","und","Widget","ModMes","lastInitData","widget","menuData","elem","handler","cyclic","Panel","showExitModal","exitWithConfirm","exitState","onclickCallback","lastActiveComponent","modal","optionsData","mainSet","menuList","settingsList","restoreEqualizer","PanelSet","ScrollArea","popup","makeItem","options","panels","getOptions","getFocusIndex","onShow","onHide","keydownHandler","$shadow","isArray","realHeight","viewHeight","topPosition","delta","ceil","offsetHeight","modalScroll","clickHandler","valueToSet","indexToFocus","element","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","isoLangs","currentPid","lastExternalSubtitle","getUri","external","externalSubtitles","externalIndex","encoding","Button","skipButton","clickDuration"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n/* eslint no-underscore-dangle:0*/\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    app = require('mag-app'),\n    exitTS = require('./exit.timeshift'),\n    tools = require('./tools'),\n    player = new Emitter(),\n    intents = {},\n    playerManager = app.playerManager,\n    players = app.playerManager.list,\n    primaryPlayer = app.playerManager.list[0],\n    primaryIndex = 0,\n    pipIntent,\n    osdPipIntent,\n\n    PROXY = (top.system && top.system.queryParameters && top.system.queryParameters.proxy) ? top.system.queryParameters.proxy : '',\n    SINGLE = app.playerManager.list.length === 1 || tools.useSingleModeByDeviceModel();\n\n\nplayer.STATE_IDLE = 0;\nplayer.STATE_OPENING = 1;\nplayer.STATE_PLAYING = 2;\nplayer.STATE_PAUSE = 3;\n\n\nif ( app.query.multicastProxy ) {\n    PROXY = app.query.multicastProxy;\n}\n\nfunction onTracksInfo () {\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('media:info', {\n            audioTracks: primaryPlayer.audioTracks,\n            subtitlesTracks: primaryPlayer.subtitlesTracks\n        });\n    }\n}\n\nfunction onContentInfo () {\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('content:info', {\n            videoInfo: primaryPlayer.videoInfo\n        });\n    }\n}\n\nfunction onPlayEnd () {\n\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('end', {});\n    }\n}\n\nfunction onPlayStart () {\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('start', {});\n    }\n}\n\nfunction onPlayError () {\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('error', {code: 5});\n    }\n}\n\nfunction onDualMono () {\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('content:dualMono', {});\n    }\n}\n\nfunction onTracksUpdate () {\n    if ( app.lastPrimaryIntent ) {\n        app.lastPrimaryIntent.emit('tracks:update', {tracks: primaryPlayer.subtitlesTracks});\n    }\n}\n\nfunction setHandlers ( playerLink ) {\n    playerLink.onPlayStart = onPlayStart;\n    playerLink.onPlayEnd = onPlayEnd;\n    playerLink.onPlayError = onPlayError;\n    playerLink.onTracksInfo = onTracksInfo;\n    playerLink.onTracksUpdate = onTracksUpdate;\n    playerLink.onContentInfo = onContentInfo;\n    playerLink.onDualMono = onDualMono;\n}\n\nfunction clearHandlers ( playerLink ) {\n    /* eslint no-empty-function:0*/\n    playerLink.onPlayStart = function () {};\n    playerLink.onPlayEnd = function () {};\n    playerLink.onPlayError = function () {};\n    playerLink.onTracksInfo = function () {};\n    playerLink.onContentInfo = function () {};\n    playerLink.onDualMono = function () {};\n    playerLink.onTracksUpdate = function () {};\n}\n\n/**\n * Set active audio source\n * Small wrapper around stbAudioManager\n *\n * @param {Object} source - source of audio\n */\nfunction setAudioSource ( source ) {\n    app.log('set audio to player #' + source.id);\n\n    // if our current audio output source is not that we set, then clear and set\n    if ( app.audioManager.list[0].list[0] !== source ) {\n        // clear all previous audio outputs\n        app.audioManager.list[0].clear();\n        app.audioManager.list[0].add(source);\n    }\n}\n\nplayer.intent = function ( intent, callback, redefine ) {\n    if ( intent  && intent.action &&  intents[intent.action] ) {\n        intents[intent.action](intent, callback, redefine);\n    }\n};\n\n// do some good magic\nsetHandlers(primaryPlayer);\nsetAudioSource(primaryPlayer);\n\nplayer.setAudioSource = setAudioSource;\n\nplayer.primary = {\n    stop: function () {\n        // some hack, need to fix\n        if ( !primaryPlayer ) {\n            return;\n        }\n        exitTS();\n        primaryPlayer.stop();\n    },\n    pause: function () {\n        primaryPlayer.pause();\n    },\n    resume: function () {\n        primaryPlayer.resume();\n    },\n    rewind: function ( time ) {\n        primaryPlayer.position += +time;\n    },\n    setAudioPid: function ( /*pid*/ ) {\n        // set audio pid\n        // TODO: impliment method\n    },\n    play: function ( config ) {\n        primaryPlayer.play({\n            uri: config.uri,\n            solution: config.solution || '',\n            position: config.position || 0\n        });\n    },\n    loadExternalSubtitles: function ( url ) {\n        primaryPlayer.loadExternalSubtitles(url);\n        player.primary.enableSubtitles = true;\n    }\n};\nplayer.reset = function () {\n    primaryPlayer = playerManager.list[0];\n    primaryIndex = 0;\n    app.lastPrimaryIntent = null;\n    app.pipPlayer = null;\n    setHandlers(primaryPlayer);\n    setAudioSource(primaryPlayer);\n    primaryPlayer.fullscreen = true;\n};\n\nObject.defineProperties(player.primary, {\n    duration: {\n        get: function () {\n            return primaryPlayer.duration;\n        },\n        set: function ( val ) {\n            primaryPlayer.duration = val;\n        }\n    },\n    position: {\n        get: function () {\n            return primaryPlayer.position;\n        },\n        set: function ( val ) {\n            primaryPlayer.position = val;\n        }\n    },\n    state: {\n        get: function () {\n            return primaryPlayer.state;\n        }\n    },\n    aspect: {\n        get: function () {\n            return primaryPlayer.aspectConversion;\n        },\n        set: function ( val ) {\n            primaryPlayer.aspectConversion = val;\n        }\n    },\n    audioPID: {\n        get: function () {\n            return primaryPlayer.audioPID;\n        },\n        set: function ( val ) {\n            primaryPlayer.audioPID = val;\n        }\n    },\n    audioTracks: {\n        get: function () {\n            return primaryPlayer.audioTracks;\n        }\n    },\n    subtitlesPID: {\n        get: function () {\n            return primaryPlayer.subtitlesPID;\n        },\n        set: function ( val ) {\n            primaryPlayer.subtitlesPID = val;\n            primaryPlayer.enableSubtitles = !!val;\n        }\n    },\n    subtitlesTracks: {\n        get: function () {\n\n            return primaryPlayer.subtitlesTracks;\n        },\n        set: function () {\n            // primaryPlayer.subtitlesPID = val;\n            // primaryPlayer.enableSubtitles = !!val;\n        }\n    },\n    enableSubtitles: {\n        get: function () {\n            return primaryPlayer.enableSubtitles;\n        },\n        set: function ( val ) {\n            primaryPlayer.enableSubtitles = !!val;\n        }\n    },\n    videoInfo: {\n        get: function () {\n            return primaryPlayer.videoInfo;\n        }\n    },\n    volume: {\n        get: function () {\n            return primaryPlayer.volume;\n        },\n        set: function ( val ) {\n            primaryPlayer.volume = +val;\n        }\n    }\n});\n\nObject.defineProperty(player, 'subtitlesEncoding', {\n    get: function () {\n        return playerManager.list[0].subtitlesEncoding;\n    },\n    set: function ( value ) {\n        playerManager.list.forEach(function ( stbPlayer ) {\n            stbPlayer.subtitlesEncoding = value;\n        });\n    }\n});\n\nintents.play = function ( intent, callback, redefine, preventCallback ) { /*eslint no-shadow:0*/\n    var result, player,\n        metadata = {},\n        solution,\n        playExtraString;\n\n\n    if ( intent.context ) {\n        player = players[intent.context.playerId];\n        result = intent.context;\n    } else {\n        player = primaryPlayer;\n        result = {\n            playerId: primaryIndex\n        };\n    }\n\n    if ( player === primaryPlayer ) {\n        app.lastPrimaryIntent = intent;\n    }\n    if ( !SINGLE ) { // eslint-disable-line\n        if ( app.pipPlayer ) {\n            setAudioSource(primaryPlayer);\n        }\n    } else if ( app.pipPlayer ) {\n        primaryPlayer = app.pipPlayer;\n        player = primaryPlayer;\n        primaryPlayer.fullscreen = true;\n        app.pipPlayer.surface.moveDown();\n        app.pipPlayer = null;\n        //osdPipIntent.close();  repaire this\n        app.log('emit exit event to pip intent');\n        // hack need to be repaire\n        osdPipIntent.emit('exit');\n    }\n    Object.defineProperties(metadata, {\n        position: {\n            get: function () {\n                return primaryPlayer.position;\n            }\n        },\n        duration: {\n            get: function () {\n                return primaryPlayer.duration;\n            }\n        },\n        audioLang: {\n            get: function () {\n                var langs = [],\n                    index;\n\n                for ( index = 0; index < primaryPlayer.audioTracks.length; index++ ) {\n                    if ( primaryPlayer.audioTracks[index].pid === primaryPlayer.audioPID ) {\n                        langs = primaryPlayer.audioTracks[index].lang;\n                        if ( langs.indexOf('und') > -1 ) {\n                            langs = [];\n                        }\n                    }\n                }\n\n                return langs;\n            }\n        }\n    });\n\n\n    intent.addListener('set:viewport', function ( viewport ) {\n        // set viewport\n        player.setViewport(tools.getRealViewPort(viewport));\n    });\n\n    intent.addListener('set:fullscreen', function () {\n        // set viewport\n        player.fullscreen = true;\n    });\n\n    if ( intent.data.viewport ) {\n        player.setViewport(tools.getRealViewPort(intent.data.viewport));\n    } else {\n        player.fullscreen = true;\n    }\n\n    if ( intent.data.aspect !== undefined ) {\n        player.aspectConversion = intent.data.aspect;\n    }\n\n    if ( core.device && (core.device.model === 'AndroidSTB' || core.device.model === 'emulator_stb') ) {\n        // do nothing, because we have bug in old android app versions\n        // in android builds we don't have pip, so we never need to move surface\n    } else if ( intent.data.displayOnTop ) {\n        // move surfaces\n        player.surface.moveTop();\n    } else {\n        player.surface.moveDown();\n    }\n\n    // // hack for mag254, bug #18219\n    // if ( core.plugins.playback && core.plugins.playback.audioLanguages  && core.plugins.playback.audioLanguages.length ) {\n    //     player.audioLanguages = core.plugins.playback.audioLanguages;\n    // }\n\n    if ( intent.data.uri ) {\n        app.lastPlayUri = intent.data.uri;\n        solution = intent.data.solution;\n\n        if ( redefine && redefine.solution ) {\n            solution = redefine.solution;\n        }\n        if ( intent.data.extra && intent.data.extra.length && PLATFORM === 'MAG' ) {\n            playExtraString = solution + ' ' + intent.data.uri;\n\n            if ( intent.data.position ) {\n                playExtraString += ' position:' + intent.data.position;\n            }\n            playExtraString += ' ' + intent.data.extra;\n            player.play({\n                playStr: playExtraString,\n                proxy: PROXY\n            });\n        } else {\n\n            // if ( PROXY ) {\n            //     PROXY = tools.parseUriString(PROXY);\n            //     // PROXY = PROXY.host + ':' + PROXY.port;\n            // }\n            player.play({\n                uri: intent.data.uri,\n                solution: solution,\n                position: intent.data.position || 0,\n                proxy: PROXY\n            });\n        }\n\n    }\n\n    app.log('player #' + player.id + ' start play');\n\n\n    result.metadata = metadata;\n\n    if ( callback && !preventCallback ) {\n        window.lastCtx = result;\n        callback(false, result);\n    }\n\n    return {\n        error: false,\n        context: result\n    };\n};\n\n\nintents.pip = function ( intent ) { /*eslint max-lines-per-function:0*/\n    var _player,\n        pipDataObject = {},\n        idx;\n\n    app.log('pip');\n\n    if ( !SINGLE ) { // eslint-disable-line\n        if ( app.pipPlayer ) {\n\n            if ( core.device && (core.device.model === 'MAG256' || core.device.model === 'MAG257') ) {\n                // for liege platform set viewport manually, because swap is broken - #20547\n                primaryPlayer.setViewport(app.pipPlayer.viewport);\n            } else {\n                playerManager.swap(app.pipPlayer, primaryPlayer);\n            }\n            app.pipPlayer.stop();\n            _player = app.pipPlayer;\n            app.pipPlayer = primaryPlayer;\n            primaryPlayer = _player;\n            pipIntent = app.lastPrimaryIntent;\n            app.lastPrimaryIntent = null;\n\n\n            //app.pipPlayer = primaryPlayer;\n            //primaryPlayer = players[0];\n            primaryIndex = 0;\n            setAudioSource(app.pipPlayer);\n            app.pipPlayer.surface.moveTop();\n            clearHandlers(app.pipPlayer);\n            setHandlers(primaryPlayer);\n        } else {\n            idx = primaryPlayer.id;\n\n            app.pipPlayer = primaryPlayer;\n\n            if ( idx ) {\n                primaryPlayer = players[0];\n                primaryIndex = 0;\n            } else {\n                primaryPlayer = players[1];\n                primaryIndex = 1;\n            }\n\n            // console.log('-4');\n            // primaryPlayer = players[1];\n            // primaryIndex = 1;\n            // app.pipPlayer = players[0];\n\n            app.log('pip player is #' + app.pipPlayer.id);\n            app.pipPlayer.surface.moveTop();\n            clearHandlers(app.pipPlayer);\n            setHandlers(primaryPlayer);\n            pipIntent = app.lastPrimaryIntent;\n            app.lastPrimaryIntent = null;\n        }\n    } else {\n        // only 1 player is available\n        app.pipPlayer = primaryPlayer;\n        app.pipPlayer.surface.moveTop();\n        pipIntent = app.lastPrimaryIntent;\n        primaryPlayer = null;\n    }\n\n\n    Object.defineProperties(pipDataObject, {\n        position: {\n            enumerable: true,\n            get: function () {\n                if ( app.pipPlayer ) {\n                    return app.pipPlayer.position;\n                }\n\n                return false;\n            }\n        },\n        duration: {\n            enumerable: true,\n            get: function () {\n                if ( app.pipPlayer ) {\n                    return app.pipPlayer.duration;\n                }\n\n                return false;\n            }\n        },\n        playerState: {\n            enumerable: true,\n            get: function () {\n                if ( app.pipPlayer ) {\n                    return app.pipPlayer.state;\n                }\n\n                return false;\n            }\n        }\n    });\n\n    pipDataObject.title = pipIntent.data.title || pipIntent.data.uri || '';\n\n    // console.log('pip player ' + app.pipPlayer.id);\n\n    osdPipIntent = core.intent({\n        action: 'pip',\n        mime: intent.mime,\n        data: pipDataObject,\n        events: {\n            viewport: function ( coordinates ) {\n                console.log('set vp');\n                console.log(coordinates);\n                app.pipPlayer.setViewport(coordinates);\n                console.log('after set vp');\n            },\n            pause: function () {\n                // pause callback\n                app.pipPlayer.pause();\n            },\n            resume: function () {\n                // continue playback after stop\n                app.pipPlayer.resume();\n\n            },\n            maximize: function () {\n                // set pip to fullscreen\n                debug.log('maximize system level', 'red');\n                if ( !SINGLE ) {\n                    app.log('maximize pip window');\n                    app.log('primary player was #' + primaryPlayer.id);\n                    exitTS();\n                    primaryPlayer.stop();\n                    primaryPlayer = app.pipPlayer;\n                    primaryIndex = 0;\n                    app.pipPlayer = null;\n                    if ( app.lastPrimaryIntent ) {\n                        app.lastPrimaryIntent.close();\n                    }\n                    app.lastPrimaryIntent = pipIntent;\n                    primaryPlayer.fullscreen = true;\n                    primaryPlayer.surface.moveDown();\n                    setAudioSource(primaryPlayer);\n                    setHandlers(primaryPlayer);\n                    app.log('primary player now is #' + primaryPlayer.id);\n                } else {\n                    // only 1 player is available\n                    primaryPlayer = app.pipPlayer;\n                    app.lastPrimaryIntent = pipIntent;\n                    primaryPlayer.fullscreen = true;\n                    primaryPlayer.surface.moveDown();\n                    app.pipPlayer = null;\n                }\n\n                if ( intent.events.maximize ) {\n                    intent.emit('maximize');\n                }\n            },\n            swap: function () {\n                var _player,\n                    _intent;\n\n                if ( SINGLE ) {\n                    return;\n                }\n\n                if (\n                    app.lastPrimaryIntent &&\n                    app.lastPrimaryIntent.data &&\n                    app.lastPrimaryIntent.data.controls &&\n                    app.lastPrimaryIntent.data.controls.pip === false\n                ) {\n                    // disable swap pip for intents that disable pip control button\n                    return;\n                }\n\n                if ( primaryPlayer.state !== 0 ) {\n                    // swap players\n                    _player = app.pipPlayer;\n                    app.pipPlayer = primaryPlayer;\n                    primaryPlayer = _player;\n                    playerManager.swap(app.pipPlayer, primaryPlayer);\n                    _intent = app.lastPrimaryIntent;\n                    app.lastPrimaryIntent = pipIntent;\n                    pipIntent = _intent;\n                    clearHandlers(app.pipPlayer);\n                    setHandlers(primaryPlayer);\n                    setAudioSource(primaryPlayer);\n                    osdPipIntent.data.mime = pipIntent.mime;\n                }\n\n                if ( intent.events.swap ) {\n                    intent.emit('swap');\n                }\n            },\n            stop: function () {\n                app.log('pip event stop');\n                // close btn click\n                app.pipPlayer.stop();\n                app.log('player #' + app.pipPlayer.id + ' stop');\n                // primaryIndex = 0;\n                app.pipPlayer.fullscreen = true;\n                app.pipPlayer.surface.moveDown();\n                app.pipPlayer = null;\n                // primaryPlayer = players[0];\n                // primaryPlayer.fullscreen = true;\n                if ( SINGLE || !primaryPlayer.state ) {\n                    primaryPlayer = players[0];\n                }\n\n                setAudioSource(primaryPlayer);\n                // primaryPlayer.surface.moveDown();\n                primaryIndex = primaryPlayer.id;\n                setHandlers(primaryPlayer);\n                app.pipIntent = null;\n            }\n        }\n    }, function (error, context) {\n        debug.log('my callback after pip', 'green');\n        debug.log(context, 'green');\n        debug.log(error, 'green');\n\n        /*primaryIndex = 1;\n        primaryPlayer = players[1];\n        app.pipPlayer = players[0];\n        app.pipPlayer.surface.moveTop();*/\n        //playerManager.setAudioSource(primaryPlayer);\n        //pipIntent = ctx;\n    });\n};\n\n\nif ( PLATFORM === 'MAG' ) {\n    require('../platforms/mag/init')(player);\n} else if ( PLATFORM === 'TIZEN' ) {\n    require('../platforms/tizen/init')(player);\n}\n\n\nmodule.exports = player;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app = require('mag-app'),\n    tools = {},\n    $parserAElement = document.createElement('a'),\n    resolutionMap = {\n        /* eslint-disable-next-line*/\n        '480': {width: 720, height: 480},\n        '480i': {width: 720, height: 480},\n        '480p': {width: 720, height: 480},\n\n        /* eslint-disable-next-line*/\n        '576': {width: 720, height: 576},\n        '576i': {width: 720, height: 576},\n        '576p': {width: 720, height: 576},\n\n        /* eslint-disable-next-line*/\n        '720': {width: 1280, height: 720},\n        '720p': {width: 1280, height: 720},\n        '720p60': {width: 1280, height: 720},\n\n        /* eslint-disable-next-line*/\n        '1080': {width: 1920, height: 1080},\n        '1080i': {width: 1920, height: 1080},\n        '1080i60': {width: 1920, height: 1080},\n        '1080p': {width: 1920, height: 1080},\n        '1080p60': {width: 1920, height: 1080},\n\n        '3840x2160p30': {width: 3840, height: 2160},\n        '3840x2160p25': {width: 3840, height: 2160},\n        '3840x2160p50': {width: 3840, height: 2160},\n        '3840x2160p60': {width: 3840, height: 2160}\n    };\n\n/*eslint id-length:0 no-mixed-operators:0*/\n\ntools.parseTime = function  ( secToParse ) {\n    var hour, min, sec;\n\n    if ( secToParse >= 0 ) {\n        hour = Math.floor(secToParse / 3600);\n        min = Math.floor((secToParse - hour * 3600) / 60);\n        sec = secToParse - hour * 3600 - min * 60;\n        if ( hour < 10 ) {\n            hour = '0' + hour;\n        }\n        if ( sec < 10 ) {\n            sec = '0' + sec;\n        }\n        if ( min < 10 ) {\n            min = '0' + min;\n        }\n    } else {\n        secToParse = Math.abs(secToParse);\n        hour = Math.floor(secToParse / 3600);\n        min = Math.floor((secToParse - hour * 3600) / 60);\n        sec = secToParse - hour * 3600 - min * 60;\n        if ( hour < 10 ) {\n            hour = '0' + hour;\n        }\n        if ( sec < 10 ) {\n            sec = '0' + sec;\n        }\n        if ( min < 10 ) {\n            min = '0' + min;\n        }\n        hour = '-' + hour;\n    }\n\n    return {hour: hour, min: min, sec: sec};\n};\n\n\ntools.checkUsb = function () {\n    /*eslint-disable*/\n    var usbs = JSON.parse(top.gSTB.GetStorageInfo('{}')).result || [],\n        index;\n\n    for ( index = 0; index < usbs.length; index++ ) {\n        if ( usbs[index].mountPath && usbs[index].isReadOnly === 0 ) {\n            return true;\n        }\n    }\n\n    return false;\n    /*eslint-enable*/\n};\n\n\ntools.getCodecImageName = function ( codecType ) {\n    var url = './img/',\n        height = app.metrics.height === 480 ? 576 : app.metrics.height,\n        codecs = {\n            1: 'mpeg2.png',\n            2: 'mp3.png',\n            3: 'dolby.png',\n            4: 'dolby.png',\n            5: 'pcm.png',\n            6: 'ogg.png',\n            7: 'dts.png',\n            8: 'dolby.png'\n        };\n\n    if ( codecType && codecs[codecType] ) {\n        url += height + '/codec/' + codecs[codecType];\n    } else {\n        url = '';\n    }\n\n    return url;\n};\n\n\ntools.getRealViewPort = function ( vp ) {\n    var currentResolutionName = top.gSTB.RDir('vmode'), // eslint-disable-line\n        currentResolution = resolutionMap[currentResolutionName]\n            || resolutionMap[currentResolutionName.match(/^(\\d)*/g)[0]],\n        currentGraphic = {\n            height: screen.height,\n            width: screen.width\n        },\n        result = {};\n\n    result.x = Math.round(vp.x * currentResolution.width / currentGraphic.width);\n    result.width = Math.round(vp.width * currentResolution.width / currentGraphic.width);\n    result.y = Math.round(vp.y * currentResolution.height / currentGraphic.height);\n    result.height = Math.round(vp.height * currentResolution.height / currentGraphic.height);\n\n    console.log(result, 'set processed viewport');\n\n    return result;\n};\n\n\ntools.parseUriString = function ( uriString ) {\n    $parserAElement.href = uriString;\n\n    return {\n        protocol: $parserAElement.protocol,\n        port: $parserAElement.port,\n        host: $parserAElement.hostname\n    };\n};\n\n\ntools.useSingleModeByDeviceModel = function () {\n    var excludeList = require('../config').preventMultiplePlayer || [];\n\n    if ( !core.device ) {\n        return false;\n    }\n\n    return excludeList.indexOf(core.device.model) > -1;\n};\n\n\ntools.detectPipSupport = function () {\n    var excludeList = app.config.pipDisableModels;\n\n    // We should disable pip if ministra use leanback launcher. it will be repaired in future. #fix 20140, #23941\n    if ( core.packageMap && core.packageMap[require('../../../../launcher-prime/package').name] ) {\n        return false;\n    }\n\n    if ( !core.device ) {\n        return true;\n    }\n\n    return excludeList.indexOf(core.device.model) === -1;\n};\n\n\ntools.removePipOnAudioMime = function ( intent ) {\n    if ( intent.mime === 'content/audio' && core.device && core.device.name === 'MAG256' ) {\n        if ( intent.data.controls ) {\n            intent.data.controls.pip = false;\n        } else {\n            intent.data.controls = {pip: false};\n        }\n\n        return true;\n    }\n\n    return false;\n};\n\n\ntools.checkAppByPid = function ( applicationPid ) {\n    // we need to copy top.core.taskManager.stack array because we use Array.findIndex polyfill and top frame may not have it\n    var stackCopy = [].concat(top.core.taskManager.stack);\n\n    return stackCopy.findIndex(function ( application ) {\n        return application.config.pid === applicationPid;\n    }) > -1;\n};\n\nmodule.exports = tools;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n\n    // enable system info about player activity\n    debug: true,\n\n    // force single player mode on this devices\n    preventMultiplePlayer: [],\n\n    // disable sound options in this models\n    disableSoundOptions: ['emulator_stb', 'emulator'],\n\n    pipDisableModels: [\n        'emulator',\n        'emulator_stb',\n        'AndroidAPP',\n        'AndroidSTB',\n        'MAG250',\n        'MAG322',\n        'MAG323',\n        'MAG324',\n        'MAG325',\n        'MAG275',\n        'MAG349',\n        'IM2100',\n        'IM2101',\n        'IM2100V',\n        'M2101',\n        'IM2101V',\n        'AuraHD4',\n        'IM2102'\n    ],\n\n    disableSpinnerAnimation: ['MAG256', 'MAG257', 'MAG250'],\n\n    // will be set in runtime\n    pipSupport: true,\n\n    // if we call play function and do not catch onPlayStart, onError or onPlayEnd events till this timeout happen we emit error event/ ms\n    waitUntilPlayEvent: 15000\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\nfunction replaceTitle ( str ) {\n    str = str || '';\n\n    return str.replace(/\\//g, '-').replace(/\\>/g, '-').replace(/</g, '-').replace(/\\|/g, '-') // eslint-disable-line\n        .replace(/\\?/g, '-').replace(/\\*/g, '-').replace(/\\\\/g, '-').replace(/\\:/g, '-'); // eslint-disable-line\n}\n\nmodule.exports = function ( /*config*/ ) {\n    var date = new Date(),\n        day = date.getDate(),\n        mon = date.getMonth() + 1,\n        year = date.getFullYear(),\n        min = date.getMinutes(),\n        hour = date.getHours(),\n        sec = date.getSeconds(),\n        name,\n        savePath,\n        saveName;\n\n    // config = config || {};\n\n    if ( !app.playback.timeshift.active ) {\n        return;\n    }\n\n    if ( app.lastPrimaryIntent && app.lastPrimaryIntent.data ) {\n        name = app.lastPrimaryIntent.data.title || app.lastPrimaryIntent.data.uri;\n    } else if ( app.currentPlayIntent && app.currentPlayIntent.data ) {\n        name = app.currentPlayIntent.data.title || app.currentPlayIntent.data.uri;\n    }\n\n    name = replaceTitle(name);\n\n    switch ( app.timeshift.onExit ) {\n        case app.timeshift.EXIT_NOT_SAVE:\n            app.timeshift.exit();\n            break;\n        case app.timeshift.EXIT_SAVE:\n            savePath = app.timeshift.path + '/' + name + '/' + year + '-' + (mon > 9 ? mon : '0' + mon) + '-' + (day > 9 ? day : '0' + day) + '/';\n            saveName = (hour > 9 ? hour : '0' + hour) + '-' + (min > 9 ? min : '0' + min) + '-' + (sec > 9 ? sec : '0' + sec);\n            console.log('exit timeshift and save' + savePath);\n\n\n            if ( app.timeshift.path && name ) {\n                app.timeshift.exit({\n                    save: {\n                        path: savePath,\n                        name: saveName\n                    }\n                });\n            } else {\n                app.timeshift.exit();\n            }\n            //\n            break;\n        case app.timeshift.EXIT_REQUEST_SAVE:\n\n            //\n            break;\n    }\n\n\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar config       = require('../../config'),\n    $spinnerNode = document.getElementById('spinner'),\n    timeout;\n\n/**\n * Preloader animation module\n */\nmodule.exports = {\n\n    /**\n     * Show preloader animation\n     */\n    show: function () {\n        // disable animation\n        if ( core && core.device && config.disableSpinnerAnimation.indexOf(core.device.model) > -1 ) {\n            return;\n        }\n        $spinnerNode.classList.add('on');\n    },\n\n    /**\n     * Shortcut to start spinner after time, need to prevent manually clear timeout\n     *\n     * @param {number} milliseconds - milliseconds to setTimeout to show\n     */\n    showAfter: function ( milliseconds ) {\n        var self = this;\n\n        clearTimeout(timeout);\n        timeout = setTimeout(self.show, milliseconds);\n    },\n\n    /**\n     * Hide preloader animation\n     */\n    hide: function () {\n        $spinnerNode.classList.remove('on');\n        clearTimeout(timeout);\n    }\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar langs = require('langs/data'),\n    codes = {\n        1:    {},\n        '2T': {},\n        '2B': {}\n    },\n    index, size, lang;\n\n\n// rework language data\nfor ( index = 0, size = langs.length; index < size; index++ ) {\n    lang = langs[index];\n\n    // link all tables with the same data\n    codes['1'][lang['1']] = codes['2T'][lang['2T']] = codes['2B'][lang['2B']] = [lang.name, lang.local];\n}\n\n// clear\nlangs = null;\n\n\n// public\nmodule.exports = codes;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nmodule.exports = {\n    $node: document.getElementById('equalizer'),\n    slideIndex: 0,\n    timer: null,\n    active: false,\n    show: function () {\n        var self = this;\n\n        clearTimeout(this.timeout);\n\n        this.active = true;\n        this.$node.style.display = 'block';\n        this.$node.children[this.slideIndex].style.display = 'block';\n        this.timeout = setTimeout(function animate () {\n            self.$node.children[self.slideIndex].style.display = 'none';\n            if ( self.slideIndex < 3 ) {\n                self.slideIndex++;\n            } else {\n                self.slideIndex = 0;\n            }\n            self.$node.children[self.slideIndex].style.display = 'block';\n            self.timeout = setTimeout(animate, 85);\n        }, 85);\n    },\n    hide: function () {\n        clearTimeout(this.timeout);\n        this.$node.style.display = 'none';\n        this.$node.children[this.slideIndex].style.display = 'none';\n        this.active = false;\n    },\n    pause: function () {\n        clearTimeout(this.timeout);\n    }\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app   = require('mag-app'),\n    $node = document.getElementById('info'),\n    $text = document.getElementById('infoText'),\n    $icon = document.getElementById('infoIcon'),\n    $dualMonoImg = document.getElementById('dualMono'),\n    visible = false,\n    DELAY = 5000,\n    timeout,\n    dualMonoTimeout;\n\n$dualMonoImg.src = 'img/' + ( app.metrics.height === 1080 ? 1080 : 720 ) + '/dualmono.png';\n\napp.addListener('route', function ( event ) {\n    if ( event.to === app.pages.main && visible ) {\n        $node.classList.remove('bg');\n    } else if ( event.to === app.pages.clear && visible ) {\n        $node.classList.add('bg');\n    }\n});\n\n/**\n * InfoWIdget caller\n */\nmodule.exports = {\n    /**\n     * Display info on infoWIdget\n     *\n     * @param {Object} config - configto display\n     * @param {string} [config.text] -  text to show\n     * @param {string} [config.icon] - icon to show\n     */\n    displayInfo: function ( config ) {\n        if ( app.activePage === app.pages.main ) {\n            $node.classList.remove('bg');\n        } else {\n            $node.classList.add('bg');\n        }\n        $node.classList.add('visible');\n        visible = true;\n        $text.innerText = config.text || '';\n        $icon.innerText = config.icon || '';\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            $node.classList.remove('visible');\n            $text.innerText = '';\n            $icon.innerText = '';\n            visible = false;\n        }, DELAY);\n\n    },\n    showDualMono: function () {\n        clearTimeout(dualMonoTimeout);\n        $dualMonoImg.classList.add('active');\n\n        dualMonoTimeout = setTimeout(function () {\n            $dualMonoImg.classList.remove('active');\n        }, DELAY);\n    }\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app           = require('mag-app'),\n    systemPlayer  = require('./system.player'),\n    checkAppByPid = require('./tools').checkAppByPid,\n    sendPipIntent = require('./pip.intent'),\n    displayInfo   = require('../modules/infoWidget').displayInfo,\n    exitTs        = require('./exit.timeshift'),\n    aspects = {\n        0: 'Original',\n        1: 'Letter box',\n        2: 'Pan&Scan',\n        3: 'combined',\n        4: 'enlarged',\n        5: 'optimal'\n    },\n    buttons = {};\n\n\n/**\n * Aspect change function\n */\nfunction nextAspect () {\n    var currentAspect = systemPlayer.primary.aspect;\n\n    if ( currentAspect < 5 ) {\n        currentAspect++;\n    } else {\n        currentAspect = 0;\n    }\n    systemPlayer.primary.aspect = currentAspect;\n    displayInfo({\n        text: aspects[currentAspect],\n        icon: 'H'\n    });\n}\n\n\n/**\n * Change subtitles\n */\nfunction subtitlesToggle () {\n    var title;\n\n    if ( !app.playback.subtitles.list.length ) {\n        return;\n    }\n\n    if ( systemPlayer.primary.enableSubtitles ) {\n        if ( app.playback.subtitles.index >= app.playback.subtitles.list.length - 1 ) {\n            // systemPlayer.primary.enableSubtitles = false;\n            app.playback.subtitles.index = null;\n            app.playback.subtitles.current = null;\n            systemPlayer.primary.subtitlesPID = null;\n            displayInfo({\n                text: 'Subtitles off',\n                icon: 'u'\n            });\n        } else {\n            app.playback.subtitles.index++;\n            app.playback.subtitles.current = app.playback.subtitles.list[app.playback.subtitles.index];\n            app.playback.subtitles.currentPID = app.playback.subtitles.current.pid;\n            title = 'Subtitles ';\n            if ( app.playback.subtitles.current && app.playback.subtitles.current.lang ) {\n                title += app.playback.subtitles.current.lang[0] || '';\n            } else {\n                title += app.playback.subtitles.current.pid ? 'track ' + app.playback.subtitles.current.pid : gettext('external');\n            }\n\n            displayInfo({\n                text: title,\n                icon: 'u'\n            });\n            systemPlayer.primary.subtitlesPID = app.playback.subtitles.currentPID;\n        }\n    } else if ( app.playback.subtitles.currentPID && app.playback.subtitles.index === null ) {\n        // systemPlayer.primary.enableSubtitles = true;\n        // cur = getSubtitlesByPID(app.playback.subtitles.currentPID);\n        app.playback.subtitles.index = 0;\n        app.playback.subtitles.current = app.playback.subtitles.list[0];\n        app.playback.subtitles.currentPID = app.playback.subtitles.list[0].pid;\n        title = 'Subtitles ';\n        if ( app.playback.subtitles.current && app.playback.subtitles.current.lang ) {\n            title += app.playback.subtitles.current.lang[0] || '';\n        } else {\n            title += app.playback.subtitles.current.pid ? 'track ' + app.playback.subtitles.current.pid : gettext('external');\n        }\n\n        displayInfo({\n            text: title,\n            icon: 'u'\n        });\n        systemPlayer.primary.subtitlesPID = app.playback.subtitles.currentPID;\n    }\n}\n\n/* Buttons */\nbuttons.pip = {\n    icon: 'theme-icon theme-icon-pip',\n    title: gettext('PiP'),\n    click: sendPipIntent\n};\n\nbuttons.aspect = {\n    icon: 'theme-icon theme-icon-aspect',\n    title: gettext('Aspect'),\n    click: nextAspect\n};\n\nbuttons.settings = {\n    icon: 'theme-icon theme-icon-settings',\n    title: gettext('Settings'),\n    click: function () {\n        app.route(app.pages.settings);\n    }\n};\n\nbuttons.list = {\n    icon: 'theme-icon theme-icon-menu',\n    title: gettext('List'),\n    click: function () {\n        if ( app.currentIntent && app.currentIntent.data.persistent && checkAppByPid(app.currentIntent.creator) ) {\n            app.currentIntent.show(app.currentIntent.creator, {reasonToggleView: true});\n            console.log('do not close intent, only show creator:)');\n        } else if ( app.currentIntent ) {\n            console.log('close INTENT:(');\n            app.currentIntent.close();\n            exitTs();\n            systemPlayer.primary.stop();\n            app.emit('close');\n        } else {\n            // in develop mode after livereload we do not have intent\n            app.emit('close');\n            exitTs();\n            systemPlayer.primary.stop();\n            core.call('hide');\n        }\n    }\n};\n\nbuttons.subtitles = {\n    icon: 'theme-icon theme-icon-subtitles',\n    title: gettext('Subtitles'),\n    click: subtitlesToggle\n};\n\n\nmodule.exports = function ( config, intent ) {\n    var menu = [],\n        focusIndex = 2;\n\n    config = config || {};\n\n    if ( intent && intent.data && intent.data.controls ) {\n        if ( intent.data.controls.pip !== false && app.config.pipSupport ) {\n            menu.push(buttons.pip);\n        }\n\n        if ( intent.data.controls.aspect !== false ) {\n            menu.push(buttons.aspect);\n        }\n\n        menu.push(buttons.list);\n\n        if ( intent.data.controls.settings !== false ) {\n            menu.push(buttons.settings);\n        }\n    } else if ( app.config.pipSupport ) {\n        // add pip button if supported\n        menu = [buttons.pip, buttons.aspect, buttons.list, buttons.settings];\n    } else {\n        menu = [buttons.aspect, buttons.list, buttons.settings];\n    }\n\n    if ( PLATFORM === 'MAG' ) {\n        if (\n            config.subtitles\n            || (intent && intent.data.controls && intent.data.controls.subtitles === true)\n        ) {\n            focusIndex = 3;\n            menu.push(buttons.subtitles);\n        }\n    } else if ( PLATFORM === 'TIZEN' ) {\n        focusIndex = 0;\n        menu = [buttons.list];\n    } else if ( PLATFORM === 'WEBOS' ) {\n        focusIndex = 0;\n        menu = [buttons.list];\n    } else if ( PLATFORM === 'SMARTTV' ) {\n        focusIndex = 0;\n        menu = [buttons.list];\n    }\n\n    if ( menu.indexOf(buttons.list) > -1 ) {\n        focusIndex = menu.indexOf(buttons.list);\n    }\n\n    return {\n        data: menu,\n        focusIndex: focusIndex\n    };\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar Emitter           = require('cjs-emitter'),\n    app               = require('mag-app'),\n    api               = require('./api'),\n    player            = require('./player'),\n    setTitle          = require('./title'),\n    spinner           = require('../ui/spinner'),\n    targets           = {\n        video: {\n            current: 0,\n            stack: [],\n            lastWatch: 0,\n            startCode: 202,\n            playbackCode: 203,\n            skipPlaybackTimes: 0,\n            skipAppStartTimes: 0\n        },\n        'tv-channel': {\n            current: 0,\n            stack: [],\n            lastWatch: 0,\n            startCode: 204,\n            playbackCode: 205,\n            skipPlaybackTimes: 0,\n            skipAppStartTimes: 0\n        }\n    },\n    main              = new Emitter(),\n    ADVERTISING_DELAY = 15;\n\n\n/**\n * Hide osd such as: osd-tv.\n */\nfunction hideSideOsd () {\n    var osdToHide = ['magcore-osd-tv'];\n\n    core.taskManager.osdStack.forEach(function ( osd ) {\n        if ( osdToHide.indexOf(osd.config.packageName) > -1 ) {\n            osd.core.call('hide');\n        }\n    });\n}\n\nfunction playAds ( target, callback ) {\n    spinner.show();\n    hideSideOsd();\n    if ( core.applicationState && !core.applicationState.visible ) {\n        core.call('show');\n        core.call('focus');\n    }\n\n    setTitle(target.current + 1, target.stack.length);\n    if ( app.activePage !== app.pages.advertising ) {\n        app.route(app.pages.advertising);\n    }\n\n    if ( target.stack[target.current].requiredPart ) {\n        target.stack[target.current].onRequiredWatch = function () {\n            // show skip button\n            main.emit('button:show', {target: target, done: callback});\n        };\n    }\n\n    player.play(target.stack[target.current], function () {\n        // hide skip button\n        target.current++;\n        if ( target.current >= target.stack.length ) {\n            // targets[target]\n            target.stack = [];\n            target.current = 0;\n            target.lastWatch = new Date();\n            // skipButton.hide();\n            main.emit('button:hide');\n            callback();\n        } else {\n            playAds(target, callback);\n        }\n    });\n}\n\n/**\n * Check incoming intent to get advertising.\n *\n * @param {Intent} intent - intent to check\n * @param {Function} done - done callback after check\n */\nmain.checkIntent = function ( intent, done ) {\n    var previousState = {\n            activePage: app.activePage,\n            visible: core.applicationState.visible\n        },\n        target;\n\n    function callback () {\n        if ( app.activePage !== previousState.activePage ) {\n            console.log(':ads: go back to previous page');\n            app.route(previousState.activePage);\n\n            if ( !previousState.visible ) {\n                // intent was silent or with context and player was in background mode, so we need to show previous app\n                intent.show(intent.creator);\n            }\n        }\n        done();\n    }\n\n    console.log(intent, 'advertising check');\n\n    if ( intent.runnerConfig.resource && intent.runnerConfig.resource in targets ) {\n        target = targets[intent.runnerConfig.resource];\n\n        console.log(target, 'advertising target');\n\n        // skip advertising for some times at start\n        if ( target.skipPlaybackTimes < 4 ) {\n            target.skipPlaybackTimes++;\n            callback();\n\n            return;\n        }\n    } else {\n        callback();\n\n        return;\n    }\n\n    // if we have some not finished ads try to continue watching\n    if ( target.stack.length ) {\n        playAds(target, function () {\n            // callback on end\n            callback();\n        });\n\n        return;\n    }\n\n    // check watch ads delay\n    if (  target.lastWatch && (new Date() - target.lastWatch < ADVERTISING_DELAY * 60 * 1000 ) ) {\n        // no need to watch ads\n        callback();\n\n        return;\n    }\n\n    api.getAd(target.startCode, function ( error, data ) {\n        if ( error || !data.length ) {\n            target.lastWatch = new Date();\n            callback();\n        } else {\n\n            // here we will show ads\n            target.current = 0;\n            target.stack = data;\n            playAds(target, function () {\n                callback();\n            });\n        }\n    });\n};\n\nmain.addListener('skip', function ( event ) {\n    var target   = event.target,\n        callback = event.done;\n\n    player.stop();\n    target.current++;\n    if ( target.current >= target.stack.length ) {\n        // targets[target]\n        target.stack = [];\n        target.current = 0;\n        target.lastWatch = new Date();\n        // skipButton.hide();\n        main.emit('button:hide');\n        callback();\n    } else {\n        playAds(target, callback);\n    }\n});\n\nfunction appStartHook ( event ) {\n    var target;\n\n    if ( event.app.resource && event.app.resource in targets ) {\n        target = targets[event.app.resource];\n\n        if ( target.skipAppStartTimes < 1 ) {\n            target.skipAppStartTimes++;\n            event.done();\n\n            return;\n        }\n\n        // if we have some not finished ads try to continue watching\n        if ( target.stack.length ) {\n            core.call('show');\n            core.call('focus');\n            playAds(target, function () {\n                core.call('blur');\n                core.call('hide');\n                event.done();\n            });\n\n            return;\n        }\n\n        // check watch ads delay\n        if ( target.lastWatch && (new Date() - target.lastWatch < ADVERTISING_DELAY * 60 * 1000 ) ) {\n            core.call('blur');\n            core.call('hide');\n            event.done();\n\n            return;\n        }\n\n        // this is one of our ads target, lets try to show ads\n        api.getAd(api.CODE_APP_START, function ( error, data ) {\n            if ( error || !data.length ) {\n                event.done();\n            } else {\n                core.call('show');\n                core.call('focus');\n                target.current = 0;\n                target.stack = data;\n                playAds(target, function () {\n                    core.call('blur');\n                    core.call('hide');\n                    event.done();\n                });\n            }\n        });\n    } else {\n        event.done();\n    }\n}\n\nwindow.system.addListener('run:app', appStartHook);\n\n\nmodule.exports = main;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/*eslint new-cap:0*/\n\nvar Intent = require('../intent'),\n    systemPlayer = require('../system.player'),\n    spinner      = require('../ui/spinner'),\n    drawProgress = require('./progress.canvas'),\n    currentAd,\n    timer,\n    player = {};\n\n\nfunction setProgress () {\n    var progressSec = systemPlayer.primary.position,\n        progress = progressSec / systemPlayer.primary.duration * 100;\n\n\n    if ( currentAd.onRequiredWatch && progressSec >= currentAd.requiredPart ) {\n        currentAd.onRequiredWatch();\n        currentAd.onRequiredWatch = null;\n    }\n\n    if ( progress >= 25 && currentAd.quarter ) {\n        currentAd.quarter();\n    }\n\n    if ( progress >= 50 && currentAd.middle ) {\n        currentAd.middle();\n    }\n\n    if ( progress >= 75 && currentAd.thirdQuarter ) {\n        currentAd.thirdQuarter();\n    }\n    drawProgress(progress);\n}\n\n/**\n * Start playing advertising\n *\n * @param {Object} config - config object\n * @param {Function} callback - callback  after watching video\n */\nplayer.play = function ( config, callback ) {\n    var url = config.url,\n        intent;\n\n    if ( DEVELOP ) {\n        url = 'http://www.w3schools.com/html/mov_bbb.mp4';\n    }\n\n    currentAd = config;\n\n    console.log('PLAY uri: ' + url);\n\n    intent = new Intent({\n        action: 'play',\n        data: {\n            uri: url\n        },\n        mime: 'advertising',\n        events: {\n            start: function () {\n                console.log('play advertising start event');\n                timer = setInterval(setProgress, 1000);\n                spinner.hide();\n            },\n            end: function () {\n                console.log('play advertising end event');\n                clearInterval(timer);\n                drawProgress.clear();\n                spinner.hide();\n                callback();\n            },\n            error: function () {\n                console.log('play advertising error event');\n                clearInterval(timer);\n                drawProgress.clear();\n                spinner.hide();\n                callback();\n            }\n        }\n    });\n\n    systemPlayer.intent(intent);\n};\n\nplayer.stop = function () {\n    systemPlayer.primary.stop();\n    drawProgress.clear();\n    clearInterval(timer);\n    // stop handlers\n};\n\n\nmodule.exports = player;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter');\n\nfunction Intent ( config ) {\n    var self = this;\n\n    config = config || {};\n\n\n    this.action = config.action;\n\n    /**\n     *\n     * @type {config.data|*}\n     */\n    this.data = config.data;\n\n    /**\n     * Context\n     */\n    this.context = config.context;\n\n\n    this.mime = config.mime;\n\n\n    Emitter.call(this, config);\n\n    if ( config.events ) {\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.events[eventName] = [config.events[eventName]];\n        });\n    }\n\n}\n\n\nIntent.prototype = Object.create(Emitter.prototype);\nIntent.prototype.constructor = Intent;\n\nmodule.exports = Intent;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app          = require('mag-app'),\n    tools        = require('./tools'),\n    $title       = document.getElementById('contentTitle'),\n    Intent       = require('./intent'),\n    systemPlayer = require('./system.player'),\n    equalizer    = require('./ui/equalizer'),\n    getMenu;\n\nfunction isOsdPipPresent () {\n\n    if ( !app.config.pipSupport ) {\n        return false;\n    }\n\n    // if some apps may process pip intent we should send it\n    return !!core.findIntentHandlers({action: 'pip'}).length;\n}\n\n\n/*eslint max-lines-per-function:0*/\nmodule.exports = function ( ) {\n\n    if (\n        app.lastPrimaryIntent &&\n        app.lastPrimaryIntent.data &&\n        app.lastPrimaryIntent.data.controls &&\n        app.lastPrimaryIntent.data.controls.pip === false\n    ) {\n        // disable swap pip for intents that disable pip control button\n        return;\n    }\n\n    // check if osd pip present to prevent side effects\n    if ( !isOsdPipPresent() ) {\n        return;\n    }\n\n    app.currentIntent.show(app.currentIntent.creator, {reasonPip: true});\n\n    app.pipIntent = app.currentPlayIntent;\n    systemPlayer.intent(new Intent({\n        action: 'pip',\n        mime: app.currentPlayIntent.mime,\n        events: {\n            maximize: function () {\n                var menuElements,\n                    time;\n\n                //core.call('show');\n                app.currentPlayIntent = app.pipIntent;\n                app.pipIntent = null;\n                app.currentIntent = app.currentPlayIntent;\n                $title.innerText = app.currentPlayIntent.data.title || app.currentPlayIntent.data.uri;\n                app.playback.stopProgressTimer();\n                time = systemPlayer.primary.duration;\n                console.log(time);\n                console.log(app.currentIntent, 'app.currentIntent');\n                if ( app.currentPlayIntent.mime === 'content/video') {\n                    document.body.classList.add('transparent');\n                    equalizer.hide();\n                } else if (app.currentPlayIntent.mime === 'content/audio') {\n                    document.body.classList.remove('transparent');\n                    equalizer.show();\n                } else {\n                    equalizer.hide();\n                    debug.log('player start to play without mime', 'blue');\n                }\n                if ( time && !(app.currentPlayIntent.data && app.currentPlayIntent.data.tvChannel) ) {\n\n                    app.playerPanel.progressBar.show();\n                    app.playerPanel.duration = time;\n                    app.playerPanel.progressBar.init({\n                        max: time\n                    });\n                    app.playback.startProgressTimer();\n                    time = tools.parseTime(time);\n                    app.playerPanel.$rightText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n                } else {\n                    // app.playerPanel.$playPauseBtn.innerText = 1;\n                    app.playerPanel.showPauseButton();\n                    app.playerPanel.$rightText.innerText = '';\n                    app.playerPanel.$leftText.innerText = '';\n                    app.playerPanel.progressBar.set(0);\n                    app.playerPanel.progressBar.hide();\n                }\n                app.playback.subtitles.list = systemPlayer.primary.subtitlesTracks;\n                getMenu      = require('./menu.constructor');\n\n                menuElements = getMenu({subtitles: app.playback.subtitles.list.length}, app.currentPlayIntent);\n\n                app.mainMenu.init({\n                    data: menuElements.data,\n                    size: menuElements.data.length,\n                    focusIndex: menuElements.focusIndex\n                });\n\n                // if (\n                //     app.lastPrimaryIntent &&\n                //     app.lastPrimaryIntent.data &&\n                //     app.lastPrimaryIntent.data.tvChannel &&\n                //     app.lastPrimaryIntent.data.tvChannel.archive\n                // ) {\n                //\n                // }\n                app.playerPanel.initButtons({\n                    nextChannel: app.currentIntent.events.nextChannel,\n                    prevChannel: app.currentIntent.events.prevChannel,\n                    next: app.currentIntent.events.next,\n                    prev: app.currentIntent.events.prev,\n                    forward: systemPlayer.primary.duration,\n                    rewind: systemPlayer.primary.duration,\n                    // add play pause btn if tv archive enabled\n                    play:\n                    (app.currentIntent && app.currentIntent.data.tvChannel && app.currentIntent && app.currentIntent.data.tvChannel.archive)\n                    || systemPlayer.primary.duration\n                });\n\n                require('./ui/spinner').hide();\n\n                if ( systemPlayer.primary.state === systemPlayer.STATE_PAUSE ) {\n                    app.playerPanel.showPlayButton();\n                    if ( equalizer.active ) {\n                        equalizer.pause();\n                    }\n                }\n            },\n            swap: function () {\n                var time,\n                    menuElements,\n                    tmpIntent;\n\n                tmpIntent = app.pipIntent;\n                app.pipIntent = app.currentPlayIntent;\n                app.currentPlayIntent = tmpIntent;\n                //\n                app.currentIntent = app.currentPlayIntent;\n                $title.innerText = app.currentPlayIntent.data.title || app.currentPlayIntent.data.uri;\n                app.playback.stopProgressTimer();\n                time = systemPlayer.primary.duration;\n                if ( app.currentPlayIntent.mime === 'content/video') {\n                    document.body.classList.add('transparent');\n                    if ( equalizer.active ) {\n                        equalizer.hide();\n                    }\n                } else if (app.currentPlayIntent.mime === 'content/audio') {\n                    document.body.classList.remove('transparent');\n                    equalizer.show();\n                } else {\n                    // hmm\n                }\n                if ( time ) {\n\n                    app.playback.duration = time;\n                    app.playerPanel.progressBar.init({\n                        max: time\n                    });\n                    app.playerPanel.progressBar.show();\n                    app.playback.startProgressTimer();\n                    time = tools.parseTime(time);\n                    app.playerPanel.$rightText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n                } else {\n                    // app.playerPanel.$playPauseBtn.innerText = 1;\n                    app.playerPanel.$rightText.innerText = '';\n                    app.playerPanel.$leftText.innerText = '';\n                    app.playerPanel.progressBar.set(0);\n                    app.playerPanel.progressBar.hide();\n                }\n                app.playback.subtitles.list = systemPlayer.primary.subtitlesTracks;\n\n                getMenu      = require('./menu.constructor');\n\n                menuElements = getMenu({subtitles: app.playback.subtitles.list.length});\n\n                app.mainMenu.init({\n                    data: menuElements.data,\n                    size: menuElements.data.length,\n                    focusIndex: menuElements.focusIndex\n                });\n\n                app.emit('swap');\n\n\n            }\n        }\n    }));\n    app.emit('close');\n    // core.call('hide');\n    app.pipIntent.emit('onPip');\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nfunction setNewValue ( rawValue ) {\n    var value = typeof rawValue === 'string' ? rawValue === 'true' : rawValue;\n\n    //console.log('new playerHardwareAcceleration value: ' + value);\n\n    window.parent.gSTB.SetEnv(JSON.stringify({ // eslint-disable-line\n        playerHardwareAcceleration: value\n    }));\n\n    window.parent.stbPlayerManager.list[0].hardwareAcceleration = value;\n\n    return value;\n}\n\nfunction getCurrentValue () {\n    var value = JSON.parse(window.parent.gSTB.GetEnv(JSON.stringify( // eslint-disable-line\n        {varList: ['playerHardwareAcceleration']}\n    ))).result.playerHardwareAcceleration;\n\n    value = typeof value === 'string' ? value === 'true' : value;\n    //console.log('old playerHardwareAcceleration value: ' + value);\n\n    return value;\n}\n\n\nmodule.exports = function () {\n    return [\n        {\n            type: 'checkBox',\n            items: [\n                {className: 'theme-icon theme-icon-hardware-acceleration'},\n                {value: gettext('Enable hardware acceleration')},\n                {className: 'theme-icon ' + (getCurrentValue() ? 'theme-icon-checkbox-active' : 'theme-icon-checkbox')}\n            ],\n            description: gettext('Enable or disable player hardware acceleration'),\n            setValue: function ( value, $node ) {\n                value = setNewValue(value);\n                // fix className\n                $node.children[0].children[2].className = 'theme-icon ' + (value ? 'theme-icon-checkbox-active' : 'theme-icon-checkbox');\n            },\n            getValue: function () {\n                return getCurrentValue();\n            }\n        }\n    ];\n};\n\nmodule.exports.setValue = function ( value ) {\n    setNewValue(value);\n};\n\nmodule.exports.getValue = function () {\n    return getCurrentValue();\n};\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\nrequire('./modules/player-debugger');\nrequire('cjs-polyfills/lib/array.find.index');\n\n// main application events\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language || 'en'}, function ( error ) {\n        var env = require('./modules/environment');\n\n        if ( error ) {\n            console.log(error);\n            console.log('ERROR LOADING LANGUAGE!!!!!!!!!!!!!!!!');\n        }\n        console.log('===========================================', '');\n        console.log('SYSTEM PLAYER START', '');\n\n        try {\n            console.log(JSON.stringify(env));\n        } catch ( error ) {\n            console.log(error);\n            console.log('wrong environment init');\n        }\n\n        if ( core.device ) {\n            document.body.setAttribute('device', core.device.model);\n        }\n\n        console.log('===========================================', '');\n\n        app.timeshift = core.plugins.timeshift || false;\n\n        app.config.pipSupport = require('./modules/tools').detectPipSupport();\n\n        app.pages = {\n            main: require('./pages/main'),\n            clear: require('./pages/clear'),\n            settings: require('./pages/settings'),\n            advertising: require('./pages/advertising')\n        };\n\n        // go to the main page when necessary\n        app.route(app.pages.main);\n        app.playerPanel.focus();\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n\nrequire('mag-app')\n    .log = function ( message ) {\n        if ( require('../config').debug ) {\n            console.log(message, ':player:');\n        }\n    };\n","'use strict';\n\nif ( !Array.prototype.findIndex ) {\n    Array.prototype.findIndex = function ( callback ) {\n        var size = this.length,\n            index = 0;\n\n        while ( index < size ) {\n            if ( callback(this[index], index, this) ) {\n                return index;\n            }\n\n            ++index;\n        }\n\n        return -1;\n    };\n}\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app = require('mag-app'),\n    env;\n\n\n// init environment for mag stb platform\nif ( PLATFORM === 'MAG' ) {\n    app.playerManager = require('../platforms/mag/stbPlayerManager');\n    app.audioManager = require('../platforms/mag/stbAudioManager');\n    env = {\n        platform: 'MAG',\n        playerCount: app.playerManager.list.length\n    };\n\n    app.audioManager.list[0].clear();\n    app.audioManager.list[0].add(app.playerManager.list[0]);\n\n} else if ( PLATFORM === 'TIZEN' ) {\n    app.playerManager = require('../platforms/tizen/playerManager');\n    app.audioManager = require('../platforms/audioManager-empty');\n    env = {\n        platform: 'TIZEN',\n        playerCount: 1\n    };\n} else if ( PLATFORM === 'WEBOS' ) {\n    app.playerManager = require('../platforms/webos/playerManager');\n    app.audioManager = require('../platforms/audioManager-empty');\n    env = {\n        platform: 'WEBOS',\n        playerCount: 1\n    };\n} else if ( PLATFORM === 'SMARTTV' ) {\n    app.playerManager = require('../platforms/smart-tv/playerManager');\n    app.audioManager = require('../platforms/audioManager-empty');\n    env = {\n        platform: 'SMART-TV',\n        playerCount: 1\n    };\n}\n\nmodule.exports = env;\n","/**\n * Mag set top box new api polyfill for stbPlayerManeger\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>\n */\n\n'use strict';\n\n// disable eslint\n/*eslint-disable*/\n\nvar stbPlayerManager,\n    stbPlayer = {},\n    gSTB = window.parent.gSTB,\n    stbDisplayManager = require('./stbDisplayManager'),\n    _dolbyDigitalAudioMode = 0,\n    _enableSubtitles = false,\n    _subtitlesColor = 0xffffff,\n    _subtitlesEncoding = 'UTF-8',\n    _subtitlesFont = '',\n    _subtitlesOffset = 0,\n    _subtitlesSize = 20,\n    _aspectConversion = 0,\n    _viewport = {\n        height: screen.height,\n        width: screen.width,\n        x: 0,\n        y: 0\n    },\n    _clip = {\n        height: 0,\n        save: false,\n        width: 0,\n        x: 0,\n        y: 0\n\n    },\n    _fullscreen = true,\n    _enableTeletext = false,\n    _teletextVisible = false,\n    _loop = false,\n    _enablePopup = true,\n    _visible = true,\n    _teletextOpacity = 0,\n    _teletextViewport = {\n        x:0, y:0, width:0, height: 0\n    },\n    _timeShiftFolder,\n    _timeShiftMaxDuration = 0,\n    _timeShiftSlidingMode = false,\n    _checkSSLCertificate = true,\n    _audioPrimaryLanguage,\n    _audioSecondaryLanguage,\n    _subtitlesSecondaryLanguage,\n    _subtitlesPrimaryLanguage,\n    casParams = {},\n    webCasParams = {}\n    ;\n\nif ( window.parent.stbPlayerManager ) {\n// if ( false ) {\n    module.exports = window.parent.stbPlayerManager;\n} else {\n    /**\n     * Stb event events\n     */\n    // hack for develop\n    if ( DEVELOP ) {\n        window.parent.stbEvent.events.media = [];\n    }\n    window.parent.stbEvent.addListener('media', function (event) {\n        switch ( event.code ) {\n            case 1:\n                // idle\n                stbPlayer.state = 0;\n                if ( stbPlayer.onPlayEnd ) { stbPlayer.onPlayEnd(); }\n                break;\n            case 2:\n                getMediaInfo();\n                if ( stbPlayer.onTracksInfo ) { stbPlayer.onTracksInfo(); }\n                break;\n            case 4:\n                // currently is playing\n                stbPlayer.state = 2;\n                if ( stbPlayer.onPlayStart ) { stbPlayer.onPlayStart(); }\n                break;\n            case 5:\n                // idle\n                stbPlayer.state = 0;\n                if ( stbPlayer.onPlayError ) { stbPlayer.onPlayError(); }\n                break;\n            case 6:\n                if ( stbPlayer.onDualMono ) { stbPlayer.onDualMono(); }\n                break;\n            case 7:\n                getVideoInfo();\n                if ( stbPlayer.onContentInfo ) { stbPlayer.onContentInfo(); }\n                break;\n            case 8:\n                if ( stbPlayer.onTracksError ) { stbPlayer.onTracksError(); }\n                break;\n            case 9:\n                if ( stbPlayer.onTracksUpdate ) { stbPlayer.onTracksUpdate(); }\n                break;\n            case 129:\n                if ( stbPlayer.onRTPBreak ) { stbPlayer.onRTPBreak(); }\n                break;\n            }\n    });\n\n\n    stbPlayer = {\n\n            /**\n             * A surface linked with this player.\n             *\n             * @type {stbSurface}\n             * @readonly\n             */\n            surface: {\n                moveTop: function () {\n                    gSTB.SetTopWin(1);\n                },\n                moveDown: function () {\n                    gSTB.SetTopWin(0);\n                }\n            },\n\n            /**\n             * Clear player statistics.\n             *\n             * @see stbPlayer.statistics}.\n             */\n            clearStatistics: function () {\n                this.statistics = {\n                    continuityErrors: 0,\n                    decodingErrors: 0,\n                    rtpErrors: 0\n                };\n            },\n\n\n            /**\n             * Get the list of audio tracks in the stream.\n             *\n             * This property should be accessed after the `event 2` occurs (see description of events).\n             *\n             * @type {audioTrackConfig[]}\n             * @readonly\n             *\n             * @example\n             * // 2 audio tracks in the stream:\n             * // Russian AC3 having PID 114 and English mp3 having PID 115\n             * [\n             *     {\n                     *         pid: 114,\n                     *         lang: ['rus', 'ru'],\n                     *         type: 3,\n                     *         title: 'Description'\n                     *     },\n             *     {\n                     *         pid: 115,\n                     *         lang: ['eng', ''],\n                     *         type: 2,\n                     *         title: 'Description'\n                     *     }\n             * ]\n             */\n            audioTracks: [],\n\n\n            /**\n             * Get the list of subtitles tracks in the stream.\n             *\n             * This property should be accessed after the `event 2` occurs (see description of events).\n             *\n             * @type {subtitlesTrackConfig[]}\n             * @readonly\n             *\n             * @example\n             * // 2 subtitles tracks in the stream:\n             * // Russian AC3 having PID 114 and English having PID 115\n             * [\n             *     {\n                     *         pid: 114,\n                     *         lang: ['rus', 'ru']\n                     *     },\n             *     {\n                     *         pid: 115,\n                     *         lang: ['eng', ''],\n                     *         teletextPage: 250,\n                     *         type: 'graphic' // or 'text'\n                     *     }\n             * ]\n             */\n            subtitlesTracks: [],\n\n\n            /**\n             * Show text string as a subtitle on screen.\n             *\n             * In case when `start` and `end` equal 0 or not set, text is shown on screen immediately until next {@link stbPlayer.printSubtitle} is called or 30 seconds elapsed.\n             *\n             * If this function was called then subtitles will work only via {@link stbPlayer.printSubtitle} until next call of {@link stbPlayer.play}.\n             *\n             * @param {string} text this text will be shown on screen as a subtitle\n             * @param {number} [start] string presentation start time in ms from start of current media\n             * @param {number} [end] string presentation end time in ms from start of current media\n             */\n            drawSubtitle: function ( text, start, end ) {\n                gSTB.ShowSubtitle(start, end, text);\n\n            },\n\n\n            /**\n             * Load text subtitles from external subtitle file of srt, sub, ass formats.\n             *\n             * If subtitles are loaded successfully then external subtitle track will be added to subtitle track list with number(PID) 0x2000.\n             *\n             * If any error occurs while loading subtitles then JS API user will receive `event 8` from List of the events used.\n             *\n             * @param {string} url external subtitles address\n             *\n             * can be a local URL: `/media/USB-.../subtitles.srt` and URL from HTTP server: `http://192.168.1.1/subtitles.srt`\n             */\n            loadExternalSubtitles: gSTB.LoadExternalSubtitles,\n\n\n            /**\n             * Current state of player.\n             *\n             *  Value | Description\n             * -------|-------------\n             *  0     | idle\n             *  1     | opening (between {@link stbPlayer.play} method call and `event 4`)\n             *  2     | currently is playing\n             *  3     | paused\n             *\n             * @type {number}\n             * @readonly\n             */\n            state: 0,\n\n\n            /**\n             * Get bitrate information of currently played HLS stream.\n             *\n             * Fields:\n             *\n             *  Name           | Description\n             * ----------------|-------------\n             *  currentBitrate | currently active bitrate\n             *  bitrateList    | list of all bitrates in a strem and can be empty (available only for Apple HLS streams)\n             *\n             * @type {Object}\n             *\n             * @example\n             * {\n                     *     currentBitrate: 533981,\n                     *     bitrateList: [323613, 533981, 755232, 1384811, 2020273]\n                     * }\n             */\n            HLSInfo: null,\n\n\n            /**\n             * Get metadata information stored in current content.\n             * For example, it can be data from ID3 tag from mp3 file.\n             *\n             * It's better to request this information after getting `event 2` from list of the events used.\n             *\n             * @type {Object}\n             *\n             * @example\n             * {\n                     *     album: \"album_1\",\n                     *     album_artist: \"artist_1\",\n                     *     artist: \"artist_1\",\n                     *     comment: \"\",\n                     *     composer: \"\",\n                     *     copyright: \"\",\n                     *     date: \"2000\",\n                     *     disc: \"\",\n                     *     encoder: \"\",\n                     *     encoded_by: \"\",\n                     *     filename: \"\",\n                     *     genre: \"\",\n                     *     language: \"\",\n                     *     performer: \"\",\n                     *     publisher: \"publisher_1\",\n                     *     title: \"track_9\",\n                     *     track: \"9\"\n                     * }\n             */\n            metadataInfo: null,\n\n\n            /**\n             * Get information about current video content.\n             *\n             * This property should be used after receiving `event 7` from list of the events used.\n             *\n             * Available fields:\n             *\n             *  Name          | Description\n             * ---------------|-------------\n             *  frameRate     | video frame rate\n             *  width         | encoded video width\n             *  height        | encoded video height\n             *  hPAR and vPAR | horizontal and vertical pixel aspect ratio coefficients <br> in example these params mean that movie aspect ratio is: (704*hPAR/vPAR)/576 = 1.333333333(3) = 4:3 for square pixels\n             *\n             * @type {Object}\n             *\n             * @example\n             * {\n                     *     frameRate: 25000,\n                     *     width: 704,\n                     *     height: 576,\n                     *     hPAR: 12,\n                     *     vPAR: 11\n                     * }\n             */\n            videoInfo: null,\n\n\n            /**\n             * Apply video surface position and size in pixels and clipping rectangle for input video.\n             *\n             * It's possible to set only some properties (not all of them at once).\n             *\n             * @see stbPlayer.viewport\n             * @see stbPlayer.clip\n             *\n             * @param {viewportConfig} viewport video surface position and size\n             * @param {clipConfig} [clip] optional clipping rectangle for input video\n             *\n             * @example\n             * // full setup\n             * stbPlayer.setViewport(\n             *     {\n                     *         x: 0,\n                     *         y: 0,\n                     *         width: 1280,\n                     *         height: 720\n                     *     },\n             *     {\n                     *         x: 10,\n                     *         y: 10,\n                     *         width: 1260,\n                     *         height: 700,\n                     *         save: true\n                     *     }\n             * );\n             *\n             * @example\n             * // partial setup\n             * // move video rectangle 100 px left\n             * stbPlayer.setViewport({x: 100});\n             * // resize video rectangle only horizontally\n             * stbPlayer.setViewport({width: 500});\n             */\n            setViewport: function ( viewport, clip ) {\n                //xSize, ySize, xPos, yPos, clipXSize, clipYSize, clipXPos, clipYPos, saveClip\n                clip = clip || {\n                        x:0,\n                        y:0,\n                        width:screen.width,\n                        height:screen.height\n                    };\n                gSTB.SetViewportEx(viewport.width, viewport.height, viewport.x, viewport.y, clip.width, clip.height, clip.x, clip.y);\n                _viewport = {\n                    width: viewport.width,\n                    height: viewport.height,\n                    x: viewport.x,\n                    y: viewport.y\n                };\n            },\n\n\n            /**\n             * Start playing the given media content.\n             *\n             * @param {playConfig} config content playback options\n             */\n            play: function ( config ) {\n                gSTB.Play((config.solution || 'auto') + ' ' + config.uri, config.proxy);\n\n                // opening (between {@link stbPlayer.play} method call and `event 4`)\n                stbPlayer.state = 1;\n            },\n\n\n            /**\n             * Stop playing.\n             *\n             * {@link stbPlayer.resume} shall begin playing from the beginning.\n             */\n            stop: function () {\n                gSTB.Stop();\n            },\n\n\n            /**\n             * Pause current playback.\n             *\n             * {@link stbPlayer.resume} continues playing from the current position.\n             */\n            pause: function () {\n                gSTB.Pause();\n                // paused\n                stbPlayer.state = 3;\n            },\n\n\n            /**\n             * Continue playing (after {@link stbPlayer.pause})\n             * or begin anew (after {@link stbPlayer.stop}).\n             */\n            resume: function () {\n                gSTB.Continue();\n                // currently is playing\n                stbPlayer.state = 2;\n            },\n\n\n            /**\n             * Rotate player but *works only for images.*\n             *\n             * @param {number} angle rotates the video window contents by the preset angle relative to the initial position\n             *\n             * allowed values: 0, 90, 180, 270.\n             */\n            rotate: function ( angle ) {\n                gSTB.Rotate(angle);\n            },\n\n\n            /**\n             * The player reached the end of the media content or detected a discontinuity of the stream.\n             *\n             * @see {@link stbEvent.onEvent} (event 1)\n             */\n            onPlayEnd: function () {},\n\n\n            /**\n             * Information on audio and video tracks of the media content is received.\n             * It's now possible to call {@link stbPlayer.audioTracks} etc.\n             *\n             * @see {@link stbEvent.onEvent} (event 2)\n             */\n            onTracksInfo: function () {},\n\n\n            /**\n             * The decoder has received info about the content and started to play.\n             * It's now possible to call {@link stbPlayer.videoInfo}.\n             *\n             * @see {@link stbEvent.onEvent} (event 7)\n             */\n            onContentInfo: function () {},\n\n\n            /**\n             * Video/audio playback has begun.\n             *\n             * @see {@link stbEvent.onEvent} (event 4)\n             */\n            onPlayStart: function () {},\n\n\n            /**\n             * Error when opening the content: content not found on the server or connection with the server was rejected.\n             *\n             * @see {@link stbEvent.onEvent} (event 5)\n             */\n            onPlayError: function () {},\n\n\n            /**\n             * Error occurred while loading external subtitles.\n             *\n             * @see {@link stbEvent.onEvent} (event 8)\n             */\n            onTracksError: function () {},\n\n\n            /**\n             * Detected DualMono AC-3 sound.\n             *\n             * @see {@link stbEvent.onEvent} (event 6)\n             */\n            onDualMono: function () {},\n\n\n            /**\n             * Found new teletext or subtitles in stream.\n             *\n             * @see {@link stbEvent.onEvent} (event 9)\n             */\n            onTracksUpdate: function () {},\n\n\n            /**\n             * Found new teletext or subtitles in stream.\n             *\n             * @see {@link stbEvent.onEvent} (event 129)\n             */\n            onRTPBreak: function () {},\n\n\n            /**\n             * TimeShift external protocol event.\n             *\n             * @see {@link timeShift}\n             * @see {@link stbEvent.onEvent} (event 36)\n             *\n             * @param {number} code TimeShift event code\n             *\n             *  Code | Description\n             * ------|-------------\n             *  1    | Start playing.\n             *  2    | Stop playing.\n             *  3    | SetSlidingMode(1), when playback was in timeshift mode on pause and current position differs from realtime position more that on maximum buffer duration of timeshift. If in pause mode event 3 appeared, then it is necessary to send resume.\n             *  4    | When timeshift buffer is full. After this event in SetSlidingMode(0) mode, new data are lost and navigation is available only in buffer or switch to real time mode (saving with resume is impossible). Event 4 while SetSlidingMode(1) means that timeshift buffer is full and old data will start to erase itself.\n             *  5    | Comes before 1 minute before buffer turns full (1 minute before event 4).\n             *  6    | Comes while playback if storage device is not available (data=1) or there is no free space (data=2). After this event playback will automaticly switch in real time.\n             *\n             * @param {string} data event specific info\n             */\n            onTimeShift: function ( code, data ) {}, // TODO\n\n\n            /**\n             * Get the list of teletext tracks in the stream.\n             *\n             * This property should be accessed after the `event 9` occurs (see description of events).\n             *\n             * @type {teletextTracksConfig[]}\n             * @readonly\n             *\n             * @example\n             * // 2 teletext tracks in the stream:\n             * // Russian AC3 having PID 114 and English having PID 115\n             * [\n             *     {\n                     *         pid: 114,\n                     *         lang: ['rus', 'ru']\n                     *     },\n             *     {\n                     *         pid: 115,\n                     *         lang: ['eng', '']\n                     *     }\n             * ]\n             */\n            teletextTracks: [],\n\n\n            /**\n             * Apply teletext viewport position and size.\n             *\n             * @param {viewportConfig} teletext viewport position and size\n             */\n            setTeletextViewport: function ( config ) {\n                gSTB.setTeletextViewport(config.width, config.height, config.x, config.y);\n                _teletextViewport = {\n                    width: config.width || _teletextViewport.width,\n                    height: config.height || _teletextViewport.height,\n                    x: config.x || _teletextViewport.x,\n                    y: config.y || _teletextViewport.y\n                }\n            },\n\n\n            /**\n             * Run teletext command.\n             *\n             * @param {number} command possible values:\n             *\n             *  Value | Description\n             * -------|-------------\n             *  0     | digit 0\n             *  1     | digit 1\n             *  2     | digit 2\n             *  3     | digit 3\n             *  4     | digit 4\n             *  5     | digit 5\n             *  6     | digit 6\n             *  7     | digit 7\n             *  8     | digit 8\n             *  9     | digit 9\n             *  10    | NextPage\n             *  11    | PrevPage\n             *  12    | NextSubpage\n             *  13    | PrevSubpage\n             *  14    | Red\n             *  15    | Yellow\n             *  16    | Blue\n             *  17    | Green\n             */\n            teletextCommand: function ( command ) {\n                gSTB.TeletextCommand(command);\n            },\n\n\n            /**\n             * Set the default encoding which will be used to display teletext channel if no such information in teletext stream.\n             *\n             * @param {teletextCharsetConfig} charset encoding for teletext channel\n             * @param {boolean} auto set encoding to auto mode, if true - `charset` param will be ignored\n             */\n            defaultTeletextSubtitlesCharset: gSTB.DefaultTtxSubCharset,\n\n\n            /**\n             * Set the encoding which will be forced to display teletext channel.\n             *\n             * @param {teletextCharsetConfig} charset encoding for teletext channel\n             * @param {boolean} auto set encoding to auto mode, if true - `charset` param will be ignored\n             */\n            forceTeletextSubtitlesCharset: gSTB.ForceTtxSubCharset,\n\n            /**\n             * TimeShift run-time state.\n             *\n             * @type {number} possible values:\n             *\n             *  Value | Description\n             * -------|-------------\n             *  0     | not active\n             *  1     | active\n             *  2     | error\n             */\n            timeShiftState: 0,\n\n            /**\n             * Enter TimeShift mode.\n             *\n             * In this mode trick mode commands like pause, resume, seek is allowed.\n             *\n             * @see timeShift.EnterTimeShift\n             */\n            timeShiftStart: function (  ) {},\n\n\n            /**\n             * Exit from TimeShift mode and return to real-time mode (with no arguments).\n             * Exit from TimeShift mode and save current TimeShift buffer via PVR (with `path` and `name` arguments).\n             * Exit from TimeShift, stop playback and save TimeShift buffer via PVR with possibility to continue recording (with all arguments).\n             *\n             * @see timeShift.ExitTimeShift\n             * @see timeShift.ExitTimeShiftAndSave\n             * @see timeShift.ExitTimeShiftAndSaveDuration\n             *\n             * @param {string} [path] path to location where recording will be saved\n             * @param {string} [name] name of the recording\n             * @param {number} [duration] in second for how log PVR should continue to save stream into specified recording task\n             */\n            timeShiftStop: function ( path, name, duration ) {\n                /*if ( arguments.length === 0 ) {\n                 timeShift.ExitTimeShift();\n                 } else if ( arguments.length === 2 ) {\n                 timeShift.ExitTimeShiftAndSave(path, name);\n                 }*/\n            }\n\n        };\n\n    Object.defineProperties(stbPlayer, {\n        /**\n         * Get run-time player capabilities.\n         *\n         * @type {capabilitiesConfig}\n         * @readonly\n         */\n        'capabilities': {\n            value:{\n                audio: true,\n                autoFrameRate: true,\n                subtitles: true,\n                teletext: true,\n                video: true\n            }\n        },\n\n\n        /**\n         * Get player statistics.\n         *\n         * @see stbPlayer.clearStatistics\n         *\n         * @type {statisticsConfig}\n         * @readonly\n         *\n         * @example\n         * // output video decoding error count\n         * console.log(stbPlayer.statistics.decodingErrors);\n         */\n        'statistics': {\n            value:{\n                continuityErrors: 0,\n                decodingErrors: 0,\n                rtpErrors: 0\n            }\n        },\n\n\n        /**\n         * Mute state of audio output.\n         *\n         * This is a combination of master mute state (see {@link stbAudioOutput.mute}) and local player state.\n         *\n         * After the cycle of switching off/on with this property the volume level remains unchanged.\n         *\n         * @type {boolean}\n         */\n        'mute': {\n            get: function () {\n                return gSTB.GetMute();\n            },\n            set: function ( val ) {\n                gSTB.SetMute(!!val);\n            }\n        },\n\n\n        /**\n         * Current volume level in percents (0 - no sound, 100 - maximal level).\n         *\n         * This is a combination of master volume level (see {@link stbAudioOutput.volume}) and local player volume level.\n         *\n         * @type {number}\n         */\n        'volume': {\n            get: function () {\n                return gSTB.GetVolume();\n            },\n            set: function ( val ) {\n                gSTB.SetVolume(+val);\n            }\n        },\n\n\n        /**\n         * Number (PID) of the current audio track [0..0x1fff].\n         *\n         * This property should be accessed after the `event 2` occurs (see description of events).\n         *\n         * On set if a specified track is absent the sound is disabled.\n         *\n         * The list of all audio tracks determined by the player can be received with {@link stbPlayer.audioTracks}.\n         *\n         * @type {number}\n         */\n        'audioPID': {\n            get: function () {\n                return gSTB.GetAudioPID();\n            },\n            set: function ( val ) {\n                gSTB.SetAudioPID(val);\n            }\n        },\n\n\n        /**\n         * Operational Mode for DolbyDigital audio.\n         *\n         * Affects only DolbyDigital audio.\n         *\n         * Possible values:\n         *\n         *  Value | Description\n         * -------|-------------\n         *  0     | RF mode\n         *  1     | Line mode\n         *  2     | Custom0\n         *  3     | Custom1\n         *\n         * @type {number}\n         */\n        'dolbyDigitalAudioMode': {\n            set: function ( val ) {\n                gSTB.SetAudioOperationalMode(+val);\n                _dolbyDigitalAudioMode = +val;\n            },\n            get: function () {\n                return _dolbyDigitalAudioMode;\n            }\n        },\n\n\n        /**\n         * Activate/deactivate subtitles output.\n         *\n         * For MAG100 subtitles are displayed only in full screen mode.\n         *\n         * @type {boolean}\n         */\n        'enableSubtitles': {\n            get: function () {\n                return _enableSubtitles;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitles(!!val);\n                _enableSubtitles = !!val;\n            }\n        },\n\n\n        /**\n         * Number (PID) of the current subtitles track [0..0x1fff].\n         *\n         * This property should be accessed after the `event 2` occurs (see description of events).\n         *\n         * The list of all subtitles track determined by the player can be received with {@link stbPlayer.subtitlesTracks}.\n         *\n         * @type {number}\n         */\n        'subtitlesPID': {\n            get: function () {\n                return gSTB.GetSubtitlePID();\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitlePID(val);\n            }\n        },\n\n\n        /**\n         * Subtitles color in RGB format.\n         *\n         * @type {number}\n         * @default 0xffffff\n         *\n         * @example\n         * // set red color for text subtitles\n         * stbPlayer.subtitlesColor = 0xff0000;\n         */\n        'subtitlesColor': {\n            get: function () {\n                return _subtitlesColor;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitlesColor(val);\n                _subtitlesColor = val;\n            }\n        },\n\n\n        /**\n         * Encoding which will be used to display external subtitles.\n         *\n         * For example: \"utf-8\", \"cp1250\", \"cp1251\", ..., \"cp1258\", \"iso8859-1\", ..., \"iso8859-16\"\n         *\n         * @type {string}\n         * @default UTF-8\n         */\n        'subtitlesEncoding': {\n            get: function () {\n                return _subtitlesEncoding;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitlesEncoding(val);\n                _subtitlesEncoding = val;\n            }\n        },\n\n\n        /**\n         * Font filename for displaying text subtitles.\n         *\n         * For example: '/home/default/arial.ttf'.\n         *\n         * @type {string}\n         */\n        'subtitlesFont': {\n            get: function () {\n                return _subtitlesFont;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitlesFont(val);\n                _subtitlesFont = val;\n            }\n        },\n\n\n        /**\n         * Horizontal offset for displaying text subtitles.\n         *\n         * @type {number}\n         */\n        'subtitlesOffset': {\n            get: function () {\n                return _subtitlesOffset;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitlesOffs(val);\n                _subtitlesOffset = val;\n            }\n        },\n\n\n        /**\n         * Size of text subtitles (in pixels).\n         *\n         * @type {number}\n         * @default 20\n         */\n        'subtitlesSize': {\n            get: function () {\n                return _subtitlesSize;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitlesSize(+val);\n                _subtitlesSize = +val;\n            }\n        },\n\n\n        /**\n         * Get the current buffer loading in percents [0..100].\n         *\n         * It makes sense to call this function only with the following solutions:\n         * **ffmpeg**, **ffrt**, **ffrt2**, **ffrt3**, **fm**, **file**\n         * after getting `event 2` and before complete buffer filling or before getting `event 4`.\n         *\n         * @type {number}\n         * @readonly\n         */\n        'bufferLoad': {\n            get: function () {\n                return gSTB.GetBufferLoad();\n            }\n        },\n\n\n        /**\n         * Total length of the current content in seconds.\n         *\n         * @type {number}\n         */\n        'duration': {\n            get: function () {\n                return gSTB.GetMediaLen();\n            }\n        },\n\n\n        /**\n         * Total length of the current content in milliseconds.\n         *\n         * @type {number}\n         */\n        'durationMs': {\n            get: function () {\n                return gSTB.GetMediaLenEx();\n            }\n        },\n\n\n        /**\n         * Current media position from the beginning of content in seconds.\n         *\n         * @type {number}\n         */\n        'position': {\n            get: function () {\n                return gSTB.GetPosTime();\n            },\n            set: function ( val ) {\n                gSTB.SetPosTime(val);\n            }\n        },\n\n\n        /**\n         * Current media position from the beginning of content in milliseconds.\n         *\n         * @type {number}\n         */\n        'positionMs': {\n            get: function () {\n                return gSTB.GetPosTimeEx();\n            },\n            set: function ( val ) {\n                gSTB.SetPosTimeEx(val);\n            }\n        },\n\n\n        /**\n         * Current media position from the beginning of content in percents with fraction part.\n         *\n         * @type {number}\n         *\n         * @example\n         * // position is 50% and a half of a percent\n         * 50.5\n         */\n        'positionPercent': {\n            get: function () {\n                return gSTB.GetPosPercent();\n            },\n            set: function ( val ) {\n                gSTB.SetPosPercent(val);\n            }\n        },\n\n\n        /**\n         * Playback repeat mode.\n         *\n         * @type {boolean}\n         */\n        'loop': {\n            get: function () {\n                return _loop;\n            },\n            set: function ( val ) {\n                gSTB.SetLoop(val);\n            }\n        },\n\n\n        /**\n         * Current speed of playing.\n         *\n         * @type {number} possible values:\n         *\n         *  Value | Description\n         * -------|-------------\n         *  0.25  | quarter speed\n         *  0.5   | half speed\n         *  1     | normal\n         *  2     | 2x\n         *  4     | 4x\n         *  8     | 8x\n         *  12    | 12x\n         *  16    | 16x\n         *  32    | 32x\n         *  64    | 64x\n         *  -0.25 | backward quarter speed\n         *  -0.5  | backward half speed\n         *  -1    | backward normal\n         *  -2    | backward 2x\n         *  -4    | backward 4x\n         *  -8    | backward 8x\n         *  -12   | backward 12x\n         *  -16   | backward 16x\n         *  -32   | backward 32x\n         *  -64   | backward 64x\n         */\n        'speed': {\n            get: function () {\n                return gSTB.GetSpeed();\n            },\n            set: function ( val ) {\n                gSTB.SetSpeed(val);\n            }\n        },\n\n\n        /**\n         * Video format conversion.\n         *\n         *  Value | Description\n         * -------|-------------\n         *  0     | as it is (video is stretched for the whole screen)\n         *  1     | Letter box mode (video is proportionally enlarged to the size of the screen along the larger edge)\n         *  2     | Pan&Scan mode (video is proportionally enlarged to the screen size along the lesser edge)\n         *  3     | combined mode (intermediate between Letter Box Box and Pan&Scan)\n         *  4     | enlarged mode\n         *  5     | optimal mode\n         *\n         * Player uses this property only in fullscreen mode (see {@link stbPlayer.pig} and {@link stbPlayer.setPIG}).\n         *\n         * @type {number}\n         */\n        'aspectConversion': {\n            get: function () {\n                return _aspectConversion;\n            },\n            set: function ( val ) {\n                var a = '0x' + val + '0';\n                gSTB.SetAspect(a);\n                _aspectConversion = val;\n            }\n        },\n\n\n        /**\n         * Get video surface position and size.\n         *\n         * @see stbPlayer.setViewport\n         *\n         * @type {viewportConfig}\n         * @readonly\n         */\n        'viewport': {\n            get: function () {\n                return _viewport;\n            }\n        },\n\n\n        /**\n         * Get clipping rectangle for input video.\n         *\n         * @see stbPlayer.setViewport\n         *\n         * @type {clipConfig}\n         * @readonly\n         */\n        'clip': {\n            get: function () {\n                return _clip;\n            }\n        },\n\n        /**\n         * Video window state (show the video in the specified rectangle or fullscreen).\n         *\n         * Works only to switch from non-fullscreen mode to fullscreen.\n         *\n         * @type {boolean}\n         */\n        'fullscreen': {\n            get: function () {\n                return _fullscreen;\n            },\n            set: function ( val ) {\n                if ( val === true ) {\n                    gSTB.SetPIG(1,0,0,0);\n                    _fullscreen = true;\n                    _viewport = {\n                        x:0,\n                        y:0,\n                        width: stbDisplayManager.list[0].width,\n                        height: stbDisplayManager.list[0].height\n                    };\n                }\n            }\n         },\n\n\n        /**\n         * Enable/disable teletext.\n         *\n         * @type {boolean}\n         * @default false\n         */\n        'enableTeletext': {\n            get: function () {\n                return _enableTeletext;\n            },\n            set: function ( val ) {\n                gSTB.SetTeletext(val);\n                _enableTeletext = val;\n            }\n        },\n\n        /**\n         * Show/hide teletext.\n         *\n         * @type {boolean}\n         * @default false\n         */\n        teletextVisible: {\n            get: function () {\n                return _teletextVisible;\n            },\n            set: function ( val ) {\n                gSTB.TeletextShow(val);\n                _teletextVisible = val;\n            }\n        },\n        /**\n         * Video window control mode.\n         *\n         * If `true` the device automatically switches on the video window at the beginning of playing and switches it off when stops.\n         * Otherwise API user should use {@link stbPlayer.visible} for instructing whether to show the video window or not.\n         *\n         * @type {boolean}\n         */\n        enablePopup: {\n            get: function () {\n                return _enablePopup;\n            },\n            set: function ( val ) {\n                val = !!val;\n\n                if ( val ) {\n                    gSTB.SetVideoControl(0);\n                } else {\n                    gSTB.SetVideoControl(1);\n                }\n                _enablePopup = val;\n            }\n        },\n\n\n        /**\n         * Video window visibility.\n         *\n         * If `true` video window is displayed (in case the stream is present).\n         *\n         * Valid only if user control had been allowed with {@link stbPlayer.enablePopup}.\n         *\n         * @type {boolean}\n         */\n        visible: {\n            get: function () {\n                return _visible;\n            },\n            set: function ( val ) {\n                val = !!val;\n                _visible = val;\n                gSTB.SetVideoState(val);\n            }\n        },\n        /**\n         * Setup opacity level for teletext [0 .. 1].\n         *\n         * @type {number}\n         * @default 1\n         *\n         * @example\n         * // normal teletext\n         * stbPlayer.teletextOpacity = 1;\n         *\n         * // almost transparent teletext\n         * stbPlayer.teletextOpacity = 0.1;\n         */\n        teletextOpacity: {\n            get: function () {\n                return _teletextOpacity;\n            },\n            set: function ( val ) {\n                val = +val;\n                if ( val >= 0 && val <= 255 ) {\n                    gSTB.TeletextTransparency(val);\n                    _teletextOpacity = val;\n                }\n            }\n        },\n\n\n        /**\n         * Number (PID) of the current teletext track [0..0x1fff].\n         *\n         * This property should be accessed after the `event 9` occurs (see description of events).\n         *\n         * The list of all subtitles track determined by the player can be received with {@link stbPlayer.teletextTracks}.\n         *\n         * @type {number}\n         */\n        teletextPID: {\n            get: function () {\n                return gSTB.GetTeletextPID();\n            },\n            set: function ( val ) {\n                gSTB.SetTeletextPID(val);\n            }\n        },\n\n        /**\n         * Get teletext viewport position and size.\n         *\n         * @type {viewportConfig}\n         * @readonly\n         */\n        teletextViewport: {\n            get: function () {\n                return _teletextViewport;\n            }\n        },\n\n        /**\n         * Set path to folder where TimeShift files will be located.\n         *\n         * @see timeShift.SetTimeShiftFolder\n         *\n         * @type {string}\n         */\n        timeShiftFolder: {\n            get: function () {\n                return _timeShiftFolder;\n            },\n            set: function ( val ) {\n                timeShift.SetTimeShiftFolder( val );\n                _timeShiftFolder = val;\n            }\n        },\n\n\n        /**\n         * Set maximum size of TimeShift window in seconds.\n         *\n         * @see timeShift.SetMaxDuration\n         *\n         * @type {number}\n         */\n        timeShiftMaxDuration: {\n            get: function () {\n                return _timeShiftMaxDuration;\n            },\n            set: function ( val ) {\n                timeShift.SetMaxDuration(val);\n                _timeShiftMaxDuration = val;\n            }\n        },\n\n\n        /**\n         * Set sliding TimeShift mode which defines what happens after reaching the left boundary of TimeShift buffer in paused mode.\n         *\n         * By default sliding mode is disabled on start of each playback.\n         *\n         * @see timeShift.SetSlidingMode\n         *\n         * @type {boolean} possible values:\n         *\n         *  Value | Description\n         * -------|-------------\n         *  true  | Slide TimeShift buffer after overflow in paused mode. <br> `Event 36 (0x24)` will appear with code 3 in arguments. After that buffer continues writing to right boundary and drop all data from left boundary in paused mode.\n         *  false | Do not slide after buffer overflow in pause mode. <br> `Event 36 (0x24)` will appear with code 4 in arguments. From this point we can play or seek inside current TimeShift buffer but right boundary will never grow until we switch into real-time mode.\n         *\n         * @default false\n         */\n        timeShiftSlidingMode: {\n            get: function () {\n                return _timeShiftSlidingMode;\n            },\n            set: function ( val ) {\n                val = !!val;\n                timeShift.SetSlidingMode(val);\n                _timeShiftSlidingMode = val;\n            }\n        },\n        /**\n         * All available playing speed values for current media.\n         * Collected with some delay after playback start.\n         *\n         * @type {number[]}\n         * @readonly\n         */\n        speeds: {\n            get: function () {\n                return [0, 0.5, 0.25, 1, 2, 4, 8, 12, 16, 32, 64];\n            }\n        },\n\n\n        audioPrimaryLanguage: {\n            get: function () {\n                return _audioPrimaryLanguage;\n            },\n            set: function ( val ) {\n                gSTB.SetAudioLangs(val, _audioSecondaryLanguage);\n                _audioPrimaryLanguage = val;\n            }\n        },\n        audioSecondaryLanguage: {\n            get: function () {\n                return _audioSecondaryLanguage;\n            },\n            set: function ( val ) {\n                gSTB.SetAudioLangs(_audioPrimaryLanguage, val);\n                _audioSecondaryLanguage = val;\n            }\n        },\n        subtitlesPrimaryLanguage: {\n            get: function () {\n                return _subtitlesPrimaryLanguage;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitleLangs(val, _subtitlesSecondaryLanguage);\n                _subtitlesPrimaryLanguage = val;\n            }\n        },\n        subtitlesSecondaryLanguage: {\n            get: function () {\n                return _subtitlesSecondaryLanguage;\n            },\n            set: function ( val ) {\n                gSTB.SetSubtitleLangs(_subtitlesPrimaryLanguage, val);\n                _subtitlesSecondaryLanguage = val;\n            }\n        }\n    });\n\n\n    stbPlayerManager = {\n\n        /**\n         * Get array of all available stbPlayer instances in the system.\n         *\n         * @type {stbPlayer[]}\n         * @readonly\n         *\n         * @example\n         * // get player #0 instance\n         * // and play some vide content\n         * stbPlayerManager.list[0].play({...});\n         * // is equivalent to legacy call\n         * gSTB.Play(...);\n         *\n         * @example\n         * // play video in another player\n         * stbPlayerManager.list[1].play({...});\n         */\n        list: [stbPlayer],\n\n\n        /**\n         * Restore the default players state.\n         */\n        reset: function () {},\n\n\n        /**\n         * Switch two given players.\n         * Affects geometry, sound, teletext and subtitles output.\n         * Works only in case valid stbPlayer instances are provided.\n         *\n         * @param {stbPlayer} player1 first player instance to swap\n         * @param {stbPlayer} player2 second player instance to swap\n         *\n         * @return {boolean} operation status\n         *\n         * @example\n         * var p0 = stbPlayerManager.list[0],\n         *     p1 = stbPlayerManager.list[1];\n         *\n         * // these two calls are equivalent\n         * stbPlayerManager.swap(p0, p1);\n         * stbPlayerManager.swap(p1, p0);\n         */\n        swap: function ( player1, player2 ) {},\n\n\n        /**\n         * Link to the player to be the default source of frame rate info.\n         *\n         * On set does not change value in case of a wrong given link.\n         *\n         * @type {stbPlayer}\n         */\n        autoFrameRateSource: stbPlayer,\n\n\n        /**\n         * Get current auto frame rate mode\n         * that controls automatic switching frame rate mode of HDMI video output according to a content frame rate.\n         *\n         * @see stbPlayerManager.setAutoFrameRate\n         *\n         * @type {frameRateConfig}\n         * @readonly\n         */\n        autoFrameRate: {\n            fr24: false,\n            fr50: false,\n            fr60: false\n        },\n\n\n        /**\n         * Apply options to automatically switch frame rate of HDMI video output according to a content frame rate.\n         *\n         * Auto frame rate switching works with `ffmpeg`, `file`, `ffrt2`, `ffrt3` solutions (if player has managed to detect frame rate of content)\n         * and only on HDMI output in the following modes: 720p-50/60, 1080i-50/60 and 1080p-50/60. In 720p-50/60 modes player can switch only to 720p-50/60 modes.\n         *\n         * After stopping playback video output switches back to original frame rate.\n         *\n         * Warning: Not every TV supports 1080p-24 video mode.\n         *\n         * @see stbPlayerManager.autoFrameRate\n         *\n         * @param {frameRateConfig} config parameters to set\n         *\n         * @return {boolean} operation status\n         *\n         * @example\n         * // enable switching to frame rates 24,50 and 60\n         * stbPlayerManager.setAutoFrameRate({\n                     *     fr24: true,\n                     *     fr50: true,\n                     *     fr60: true\n                     * });\n         *\n         * // disable auto frame rate switching\n         * stbPlayerManager.setAutoFrameRate({\n                     *     fr24: false,\n                     *     fr50: false,\n                     *     fr60: false\n                     * });\n         */\n        setAutoFrameRate: function ( config ) {\n            var bitMask = (config.fr60 ? '1' : '0') + (config.fr50 ? '1' : '0') + (config.fr24 ? '1' : '0');\n\n            config = config || {};\n\n            this.autoFrameRate.fr24 = config.fr24 || false;\n            this.autoFrameRate.fr50 = config.fr24 || false;\n            this.autoFrameRate.fr60 = config.fr24 || false;\n            console.log(parseInt(bitMask, 2));\n            gSTB.SetAutoFrameRate(parseInt(bitMask, 2));\n\n        },\n\n\n        /**\n         * Link to the player to be the default source of 3D converstion mode info.\n         *\n         * On set does not change value in case of a wrong given link.\n         *\n         * @type {stbPlayer}\n         */\n        '3DConversionModeSource': stbPlayer,\n\n\n        /**\n         * Get multicast current web proxy configuration.\n         *\n         * If multicast proxy configuration is set and multicast proxy enabled then any multicast `rtp://` or `udp://` stream\n         * will be played back via multicast proxy e.i. instead of `rtp://239.1.1.1:1234`\n         * player play the following stream: `[proxy_addr]/rtp/239.1.1.1:1234`.\n         *\n         * @see stbPlayerManager.setMulticastProxy\n         * @see stbPlayerManager.resetMulticastProxy\n         *\n         * @type {proxyConfig}\n         * @readonly\n         *\n         * @example\n         * 'http://user1:pass1@16.16.16.16:3128'\n         */\n        multicastProxy: '',\n\n\n        /**\n         * Set multicast proxy configuration.\n         *\n         * Use {@link stbPlayerManager.multicastProxy} to get current proxy config options.\n         *\n         * @see stbPlayerManager.multicastProxy\n         * @see stbPlayerManager.resetMulticastProxy\n         *\n         * @param {proxyConfig} proxy configuration options string\n         *\n         * @return {boolean} operation status\n         *\n         * @example\n         * if ( stbPlayerManager.setMulticastProxy('http://16.16.16.16:3128') ) {\n                     *     // proxy is applied and activated\n                     * }\n         */\n        setMulticastProxy: function ( proxy ) {\n            gSTB.SetMulticastProxyURL(proxy);\n            this.multicastProxy = proxy;\n            gSTB.EnableMulticastProxy(true);\n        },\n\n\n        /**\n         * Disable sending all multicast requests through proxy.\n         *\n         * @see stbPlayerManager.multicastProxy\n         * @see stbPlayerManager.setMulticastProxy\n         */\n        resetMulticastProxy: function () {\n            gSTB.EnableMulticastProxy(false);\n        },\n\n\n        /**\n         * Activate CAS with provided options.\n         * {@link stbPlayerManager.setCASParams} should be called beforehand.\n         *\n         * @return {boolean} operation status\n         *\n         * @example\n         * // set config options\n         * stbPlayerManager.setCASParams({ ... });\n         *\n         * // activate\n         * if ( !stbPlayerManager.activateCAS() ) {\n                     *     console.log('CAS is not activated!');\n                     * }\n         */\n        activateCAS: function () {\n            var defaultParams = ['serverAddress', 'serverPort', 'companyName', 'opID', 'errorLevel', 'softDescrambling', 'iniFile'],\n                otherParams = {},\n                param;\n\n            if ( casParams.serverAddress ) {\n                gSTB.SetCASParam(casParams.serverAddress, casParams.serverPort, casParams.companyName, casParams.opID, casParams.errorLevel);\n            }\n\n            gSTB.SetCASDescrambling(casParams.softDescrambling ? 1 : 0);\n\n            if ( casParams.iniFile ) {\n                gSTB.LoadCASIniFile(casParams.iniFile);\n            }\n\n            for ( param in casParams ) {\n                if (defaultParams.indexOf(param) < 0 ) {\n                    otherParams[param] = casParams[param];\n                }\n            }\n\n            Object.keys(otherParams).forEach(function (param) {\n                gSTB.SetAdditionalCasParam(param, otherParams[param]);\n            })\n\n            gSTB.SetCASType(casParams.type);\n        },\n\n\n        /**\n         * Set CAS server parameters.\n         *\n         * Call of the function can be done many times but becomes effective only if made before {@link stbPlayerManager.activateCAS}.\n         *\n         * @param {Object} params CAS parameters to set\n         *\n         * There is a set of predefined properties and it's also possible to specify some additional parameters.\n         *\n         * @param {number} params.type mandatory Conditional Access System type\n         *\n         * Should be set once after browser start. Possible type values:\n         *\n         *  Value | Description\n         * -------|-------------\n         *  0     | not set\n         *  1     | Verimatrix\n         *  2     | SecureMedia\n         *  4-10  | custom CAS plugin with corresponding number\n         *\n         * @param {string} params.serverAddress CAS server address\n         * @param {number} params.serverPort CAS server port\n         * @param {string} params.companyName name of the company under which this operator is registered on CAS server\n         * @param {number} params.operatorId operator identifier used by STB (if operator ID is equal to -1, the value is not updated)\n         * @param {number} params.errorLevel level of error (0 – minimal level, if error level equals -1 it is not updated)\n         * @param {string} params.iniFile address of the settings file in the root file system\n         *\n         * See instruction on adjusting CAS Verimatrix in the supplement.\n         *\n         * @param {boolean} [params.softDescrambling=true] hard or soft mode of descrambling\n         *\n         * At present  the use of this property is reasonable only for CAS Verimatrix.\n         *\n         * Depending on the mode set, the player can descramble only the streams scrambled by the following algorithm:\n         *\n         * - Soft mode: RC4, AES\n         * - Hard mode: AES, DVB-CSA\n         *\n         * This mode is set only once after the start of the portal.\n         *\n         * @return {boolean} operation status\n         *\n         * @example\n         * // set primary config options\n         * stbPlayerManager.setCASParams({\n                     *     type: 1,\n                     *     serverAddress: 'some_server',\n                     *     serverPort: 9999\n                     * });\n         *\n         * // set additional config options\n         * // can be merged with the first setCASParams call\n         * stbPlayerManager.setCASParams({\n                     *     errorLevel: 1,\n                     *     softDescrambling: true,\n                     *     additionalParameter1: 'value1',\n                     *     additionalParameter2: 'value2'\n                     * });\n         *\n         * // activate CAS with provided options\n         * stbPlayerManager.activateCAS();\n         */\n        setCASParams: function ( params ) {\n            var param;\n            params = params || {};\n            for ( param in params ) {\n                casParams[param] = params[param];\n            }\n        },\n\n\n        /**\n         * Activate Web CAS with provided options.\n         * {@link stbPlayerManager.setWebCASParams} should be called beforehand.\n         *\n         * @return {boolean} operation status\n         *\n         * @example\n         * // set config options\n         * stbPlayerManager.setWebCASParams({ ... });\n         *\n         * // activate\n         * if ( !stbPlayerManager.activateWebCAS() ) {\n                     *     console.log('Web CAS is not activated!');\n                     * }\n         */\n        activateWebCAS: function () {\n            gSTB.SetWebCASLogging(webCasParams.logging);\n            gSTB.SetupWebCAS(webCasParams.serverAddress, webCasParams.companyName);\n\n        },\n\n\n        /**\n         * Set Web CAS server parameters.\n         *\n         * Call of the function can be done many times but becomes effective only if made before {@link stbPlayerManager.activateWebCAS}.\n         *\n         * @param {Object} params Web CAS parameters to set\n         * @param {string} params.serverAddress Web CAS server address (e.g. \"verimatrix.com\")\n         * @param {string} [params.companyName] name of the company under which this operator is registered on CAS server\n         * @param {boolean} params.logging enable/disable logging to file (turned off by default)\n         *\n         * File `/ram/data/vrweb_client.log` is used to store log data.\n         * It's possible to read it with `gSTB.RDir('tempfile read vrweb_client.log')`.\n         *\n         * @return {boolean} operation status\n         */\n        setWebCASParams: function ( params ) {\n            params = params || {};\n\n            webCasParams.serverAddress = params.serverAddress;\n            webCasParams.companyName   = params.companyName;\n            webCasParams.logging       = params.logging;\n        },\n\n\n        /**\n         * Get RTSP configuration.\n         *\n         * @type {RTSPConfig}\n         * @readonly\n         */\n        RTSP: {\n            endByAnnounce: false,\n            endByGetParameter: false,\n            endByRTP: false,\n            endByTimeout: false,\n            keepAlive: true,\n            type: 0,\n            useUDP: false\n        },\n\n\n        /**\n         * Set client to STB.\n         *\n         * @param {RTSPConfig} config RTSP configuration options\n         *\n         * @return {boolean} operation status\n         */\n        setRTSP: function ( config ) {\n            var type, flags;\n\n            config = config || {};\n\n            flags = (config.useUDP ? '1' : '0') + (config.endByRTP ? '1' : '0') + (config.endByTimeout? '1' : '0') + (config.endByGetParameter ? '1' : '0')\n            + (config.endByAnnounce ? '1' : '0') + (config.keepAlive ? '1' : '0');\n\n            flags = parseInt(flags, 2);\n\n            type = config.type || 0;\n\n            gSTB.SetupRTSP(type, flags);\n        },\n\n\n        /**\n         * Set input buffer size for buffering support.\n         *\n         * Buffering works only with the following solutions: **ffmpeg**, **ffrt**, **ffrt2**, **ffrt3**, **fm**, **file**.\n         *\n         * After start of playback with mentioned above solution the following stages take place:\n         *\n         * - opening content for playback\n         * - determining content information (raised `event 2` from List of the events used)\n         * - input buffer filling stage\n         * - after complete buffer filling stream data go to decoding\n         * - decoded data go to outputs (raised `event 4` from List of the events used)\n         *\n         * @param {number} sizeInMs maximum buffer size in ms\n         * @param {number} sizeInBytes maximum buffer size in bytes\n         *\n         * used **ONLY** to limit maximum amount of allocated memory but not as the primary buffer size\n         *\n         * @return {boolean} operation status\n         */\n        setBufferSize: gSTB.SetBufferSize\n    };\n\n    Object.defineProperties(stbPlayerManager, {\n        /**\n         * Current 3D conversion mode.\n         *\n         * Possible values:\n         *\n         *  Value | Description\n         * -------|-------------\n         *  0     | Treat video as normal 2D video. Default mode. In case of top-bottom or side-by-side 3D video player displays both stereo views so TV can reproduce 3D video (with half resolution). If TV is 3D capable and video contains information about 3D then TV will be automatically switched to 3D mode.\n         *  1     | Treat video as 3D video in top-bottom(over-under) format with half resolution of each stereo view. In that mode player will stretch top half of the video into fullscreen according to specified aspect.\n         *  2     | Treat video as 3D video in top-bottom(over-under) format with full resolution of each stereo view. In that mode player will stretch top half of the video into fullscreen according to specified aspect. The difference between STB_3D_MODE_TOP and STB_3D_MODE_TOP_HALF is that STB_SetAspect with other than auto mode gives different behaviour and in case of resulting video will be Full resolution HD.\n         *  3     | Treat video as 3D video in side-by-side format with half resolution of each stereo view. In that mode player will stretch left half of the video into fullscreen according to specified aspect.\n         *  4     | Same as STB_3D_MODE_FULL but without automatic TV switch to 3D.\n         *\n         * @type {number}\n         */\n        '3DConversionMode': {\n            get: function () {\n                return gSTB.Get3DConversionMode();\n            },\n            set: function ( val ) {\n                gSTB.Set3DConversionMode(val);\n            }\n        },\n\n\n        /**\n         * Enable or disable SSL certificate checking while playing back HTTPS streams.\n         *\n         * @type {boolean}\n         *\n         * @default true\n         */\n        checkSSLCertificate: {\n            get: function () {\n                return _checkSSLCertificate;\n            },\n            set: function ( val ) {\n                val = !!val;\n                gSTB.SetCheckSSLCertificate(val ? 1 : 0);\n                _checkSSLCertificate = val;\n            }\n        }\n    });\n    module.exports = stbPlayerManager;\n}\n\n\n/**\n * Get audio and subtitles tracks after event 2 fired\n */\nfunction getMediaInfo () {\n    // audio tracks\n    try {\n        stbPlayer.audioTracks = JSON.parse(gSTB.GetAudioPIDsEx().replace(/pid:/g, '\\\"pid\\\":').replace(/lang:/g, '\\\"lang\\\":').replace(/type:/g, '\\\"type\\\":').replace(/title:/g, '\\\"title\\\":').replace(/'/g,'\"').replace(/,\"\"/g, ''));\n    } catch (e) { stbPlayer.audioTracks = []; }\n\n    // subtitles tracks\n    try {\n        stbPlayer.subtitlesTracks = JSON.parse(gSTB.GetSubtitlePIDs().replace(/pid:/g, '\\\"pid\\\":').replace(/lang:/g, '\\\"lang\\\":').replace(/,\"\"/g, ''));\n    } catch (e) { stbPlayer.subtitlesTracks = []; }\n\n    // get metadata info\n    try {\n        stbPlayer.metadataInfo = JSON.parse(gSTB.GetMetadataInfo());\n    } catch (e) { stbPlayer.metadataInfo = null; }\n}\n\n\n/**\n * Get video info after event 7 fired\n */\nfunction getVideoInfo () {\n    try {\n        debug.log('/////////////////////////', 'red');\n        debug.inspect(gSTB.GetVideoInfo());\n        stbPlayer.videoInfo = JSON.parse(\n            gSTB.GetVideoInfo().replace(/frameRate:/g, '\\\"frameRate\\\":')\n                .replace(/pictureWidth:/g, '\\\"width\\\":').replace(/pictureHeight:/g, '\\\"height\\\":')\n                .replace(/hPAR:/g, '\\\"hPAR\\\":').replace(/vPAR:/g, '\\\"vPAR\\\":')\n        );\n    } catch (e) { stbPlayer.videoInfo = null; }\n}\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/*eslint-disable*/\n\nvar VIDEO_MODE,\n    display,\n    width,\n    height;\n\nif ( window.parent.stbDisplayManager ) {\n    module.exports = window.parent.stbDisplayManager;\n} else {\n    VIDEO_MODE = window.parent.gSTB.RDir('vmode');\n    switch ( VIDEO_MODE ) {\n        case '1080i':\n        case '1080i60':\n        case '1080p':\n        case '1080p60':\n            width = 1920;\n            height = 1080;\n            break;\n    }\n    display = {\n        width: screen.width,\n        height: screen.height\n    };\n\n    module.exports = {\n        list: [display]\n    }\n}\n","/**\n * Mag set top box new api polyfill for stbAudioManager\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/*eslint-disable*/\n\nvar gSTB = window.parent.gSTB,\n    stbAudioOutput;\n\nif ( window.parent.stbAudioManager ) {\n    module.exports = window.parent.stbAudioManager;\n} else {\n    stbAudioOutput = {\n        /**\n         * An object linked with this audio output.\n         *\n         * By default player #0 is linked with audio output #0.\n         *\n         * @type {stbPlayer[]}\n         *\n         * @example\n         * // get audio output #1 instance\n         * var output = stbAudioManager.list[1];\n         * // get audio source #0\n         * output.list[0];\n         */\n        list: [],\n\n\n        add: function ( source ) {},\n\n\n        remove: function ( source ) {},\n\n\n        clear: function () {}\n    };\n\n    Object.defineProperties(stbAudioOutput, {\n        /**\n         * Master mute state of audio output.\n         *\n         * After the cycle of switching off/on with this property the volume level remains unchanged.\n         *\n         * @type {boolean}\n         */\n        mute: {\n            get: function () {\n                return !!gSTB.GetMute();\n            },\n            set: function ( value ) {\n                gSTB.SetMute(!!value);\n            }\n        },\n\n        /**\n         * Master volume level in percents (0 - no sound, 100 - maximal level).\n         *\n         * @type {number}\n         */\n        volume: {\n            get: function () {\n                return gSTB.GetVolume();\n            },\n            set: function ( value ) {\n                gSTB.SetVolume(+value);\n            }\n        }\n    });\n\n    module.exports = {\n        /**\n         * Get array of all available stbAudioOutput instances in the system.\n         *\n         * @type {stbAudioOutput[]}\n         * @readonly\n         *\n         * @example\n         * // get audio output #1 instance\n         * var output = stbAudioManager.list[1];\n         * // and link it with a player\n         * output.source = stbPlayerManager.list[1];\n         */\n        list: [stbAudioOutput]\n    };\n}\n","/**\n * Main page\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar PlayerPanel = require('../modules/ui/player.panel'),\n    Menu = require('../modules/menu'),\n\n    app = require('mag-app'),\n    page = new (require('stb-component-page'))({$node: document.getElementById('pMain')}),\n    keys = require('stb-keys'),\n    findIndex = require('array-find-index'),\n    tools  = require('../modules/tools'),\n    langs  = window.langs = require('cjs-iso-639'),\n    systemPlayer = require('../modules/system.player'),\n    equalizer = require('../modules/ui/equalizer'),\n    spinner  = require('../modules/ui/spinner'),\n    advertising = require('../modules/advertising/core'),\n    displayInfo = require('../modules/infoWidget').displayInfo,\n    sendPipIntent = require('../modules/pip.intent'),\n    menuConstructor = require('../modules/menu.constructor'),\n    exitTimeShift = require('../modules/exit.timeshift'),\n    types = require('../modules/types'),\n    modalActions = require('../modules/intent.modal.menu'),\n\n    timer = {\n        progress: null,\n        contentInfo: null,\n        panelHide: null,\n        serverTimeShiftRequest: null,\n        serverTimeShiftBufferProgress: null,\n        serverEpgUpdateCurrentProgram: null,\n        localTimeShiftBufferProgress: null,\n        localTimeShiftAutoStart: null\n\n    },\n    playback = {\n        duration: 0,\n        currentTime: 0,\n        contentType: null,\n        capabilities: {\n            timeshift: false\n        },\n        rewind: {\n            isActive: false,\n            startTime: 0,\n            time: 0,\n            timeout: null,\n            timeoutDuration: 800,\n            intervals: [0, 0, 10],\n            // direction to rewind (true/ false)\n            mode: null,\n            // is rewind called from clear page\n            remote: false,\n            // timer to go back to clear page\n            remoteTimer: null,\n            // block call pause after rewind on TIZEN platform\n            pauseBlockingState: false,\n            pauseBlockingTimeout: null\n        },\n        subtitles: {\n            index: null,\n            currentIndex: null,\n            currentPID: null,\n            list: []\n        },\n        audioTracks: {\n            list: [],\n            current: null\n        },\n        retryOnError: {\n            timeoutId: null,\n            intervals: [5000, 5000, 10000, 15000, 30000],\n            currentInterval: 0\n        },\n        startProgressTimer: function () {\n            setCurrentProgress();\n            clearInterval(timer.progress);\n            timer.progress = setInterval(setCurrentProgress, 1000);\n        },\n        stopProgressTimer: function () {\n            clearInterval(timer.progress);\n        },\n        tv: {\n            epg: {\n                array: [],\n                currentIndex: 0\n            },\n            archive: {\n                state: {\n                    NOT_ACTIVE: 0,\n                    PAUSED_NO_LINK: 1,\n                    PAUSED_GET_LINK: 2,\n                    PAUSED_GET_LINK_ERROR: 3,\n                    PLAYING_FILE: 4,\n                    PAUSE_FILE: 5\n                },\n                active: false,\n                currentState: 0,\n                array: [],\n                currentIndex: 0,\n                realProgram: false,\n                inited: false,\n                realProgramUrl: '',\n                realProgramInited: false,\n                realProgramPaused: false\n            }\n        },\n        timeshift: {\n            active: false,\n            duration: 0\n        }\n    },\n    playerControl = {\n        play: false,\n        rewind: false,\n        forward: false,\n        next: false,\n        prev: false,\n        nextChannel: false,\n        prevChannel: false\n    },\n    $title = document.getElementById('contentTitle'),\n    $program = document.getElementById('contentProgramTitle'),\n    $mediaInfo = {\n        codec: document.getElementById('codecInfo'),\n        lang: document.getElementById('langInfo')\n    },\n    $icons = {\n        timeshift: document.getElementById('iconTS')\n    },\n\n    PANEL_HIDE_TIMEOUT = 5,\n    // hack for platforms that detect duration on hls streams\n    durationDetected = false,\n    menuElements = menuConstructor(),\n    playConfig,\n    mainMenu;\n\n/* eslint no-use-before-define:0 */\n/* eslint no-underscore-dangle:0 */\n/* eslint max-lines:0 */\n\n\n/**\n * Set current progress timeout handler\n */\nfunction setCurrentProgress () {\n    var curTime,\n        time = systemPlayer.primary.position;\n\n    playback.currentTime = systemPlayer.primary.position;\n    if ( playback.timeshift.active ) {\n        curTime = systemPlayer.primary.position;\n        if ( systemPlayer.primary.position > systemPlayer.primary.duration ) {\n            curTime = 0;\n        }\n        time = curTime - playback.timeshift.duration;\n    } else if ( playback.tv.archive.active &&  playback.tv.archive.realProgram ) {\n        // currentProgram = playback.tv.epg.array[playback.tv.archive.currentIndex];\n        // // time = parseInt(+new Date() / 1000 - currentProgram.start, 10);\n    }\n    app.playerPanel.progressBar.set(time);\n\n    time = tools.parseTime(time);\n    app.playerPanel.$leftText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n}\n\n\nfunction setServerTimeShiftBufferProgress () {\n    var realTime = parseInt(Date.now() / 1000, 10),\n        current = realTime - playback.tv.epg.array[playback.tv.archive.currentIndex].start;\n\n    app.playerPanel.bufferBar.set(current);\n}\n\n\nfunction localTimeShiftBufferProgress () {\n    app.playerPanel.bufferBar.set(playback.timeshift.duration++);\n}\n\n\nfunction onContentErrorNotify () {\n    var intent = app.lastPrimaryIntent;\n\n    spinner.hide();\n    core.notify({\n        title: gettext('Error playing content') + ': ' + (intent.data.title || intent.data.uri),\n        icon: 'alert',\n        type: 'error',\n        timeout: 3000\n    });\n\n    // if we will retry playing bad stream we should show preloader before real calling play\n    if ( intent.data.stream && intent.data.retryOnError ) {\n        spinner.showAfter(3000);\n    }\n\n    if ( equalizer.active ) {\n        equalizer.hide();\n    }\n}\n\n\n/*eslint complexity:0 max-lines-per-function:0*/\nfunction startPlay ( intent, callback ) {\n    /*eslint max-statements:0*/\n    function retryPlaybackHandler () {\n        clearTimeout(playback.retryOnError.timeoutId);\n        console.log('retry playback after ' + playback.retryOnError.intervals[playback.retryOnError.currentInterval]);\n\n        playback.retryOnError.timeoutId = setTimeout(function () {\n            console.log('retry playback on error');\n            // need to get new channel url if we play tv channel\n            if ( intent.data.tvChannel ) {\n                // async callback\n                intent.data.tvChannel.getUrl(function (error, data) {\n                    if ( !error && data && data.url ) {\n                        intent.data.uri = data.url;\n                        systemPlayer.intent(intent, callback, playConfig, true);\n                    }\n                });\n            } else {\n                // sync play\n                systemPlayer.intent(intent, callback, playConfig);\n            }\n\n        }, playback.retryOnError.intervals[playback.retryOnError.currentInterval]);\n\n        if ( playback.retryOnError.currentInterval < playback.retryOnError.intervals.length - 1 ) {\n            playback.retryOnError.currentInterval++;\n        }\n    }\n\n    if ( !intent.data ) {\n        callback(true, null);\n\n        return;\n    }\n\n    console.log(intent, ':intent:');\n    console.log('Play:> ' + intent.data.uri);\n\n    durationDetected = false;\n    spinner.show();\n    tools.removePipOnAudioMime(intent);\n    resetInfo(intent);\n    $program.innerText = '';\n\n    clearTimeout(timer.localTimeShiftAutoStart);\n    clearInterval(timer.serverTimeShiftRequest);\n\n    playback.contentType = null;\n    playConfig = {};\n    playback.audioTracks.list = [];\n    playback.subtitles.list = [];\n\n    playback.capabilities = {\n        timeshift: false\n    };\n    playback.audioTracks.current = null;\n    app.currentPlayIntent = intent;\n    playback.tv.archive.active = false;\n    playback.tv.archive.realProgram = false;\n    playback.tv.archive.currentState = 0;\n    playback.timeshift.active = false;\n    $icons.timeshift.classList.remove('visible');\n    // make link to current intent\n    app.currentIntent = intent;\n    clearTimeout(timer.serverEpgUpdateCurrentProgram);\n\n    if ( intent.data.tvChannel ) {\n        playback.capabilities.timeshift = intent.data.tvChannel['local_timeshift'] && ( app.timeshift && app.timeshift.checkAbility(intent.data));\n\n    } else if ( app.timeshift && app.timeshift.checkAbility && app.timeshift.ALLOW_MANUAL ) {\n        playback.capabilities.timeshift = app.timeshift.checkAbility(intent.data);\n    }\n    if ( app.timeshift.enable && app.playback.capabilities.timeshift ) {\n        playConfig.solution = 'extTimeShift';\n\n        intent.once('start', function () {\n            if ( app.timeshift.enable && app.timeshift.delay ) {\n                timer.localTimeShiftAutoStart = setTimeout(activateTimeShift, app.timeshift.delay);\n\n            }\n        });\n    }\n\n    if ( app.currentPlayIntent.mime === 'content/video') {\n        playback.contentType = 'content/video';\n        document.body.classList.add('transparent');\n    } else if (app.currentPlayIntent.mime === 'content/audio') {\n        playback.contentType = 'content/audio';\n        document.body.classList.remove('transparent');\n    }\n\n    $title.innerText = intent.data.title || intent.data.uri;\n\n    intent.addListeners({\n        // start playback\n        start: function () {\n            var time = systemPlayer.primary.duration,\n                currentTime;\n\n            console.log('hide spinner on intent start');\n            spinner.hide();\n\n            if ( app.playback.tv.archive.active && app.playback.tv.archive.realProgram ) {\n                playback.startProgressTimer();\n                app.playerPanel.showPauseButton();\n            }\n\n            if ( equalizer.active ) {\n                equalizer.show();\n            }\n\n            if (\n                !time\n                || (intent.data.tvChannel && playback.tv.archive.currentState !== playback.tv.archive.state.PLAYING_FILE)\n            ) {\n                return;\n            }\n\n            currentTime = systemPlayer.primary.position;\n            playback.currentTime = currentTime;\n            playback.retryOnError.currentInterval = 0;\n            currentTime = tools.parseTime(currentTime);\n\n            if ( !playback.capabilities.timeshift ) {\n                app.playerPanel.$leftText.innerText = currentTime.hour + ':' + currentTime.min + ':' + currentTime.sec;\n            }\n\n            if (\n                !playback.rewind.isActive\n                && ((playback.capabilities.timeshift && playback.timeshift.active) || !playback.capabilities.timeshift )\n            ) {\n                playback.duration = time;\n                playback.startProgressTimer();\n                app.playerPanel.$leftText.innerText = currentTime.hour + ':' + currentTime.min + ':' + currentTime.sec;\n            }\n        },\n\n        // end of playback\n        end: function () {\n            playback.stopProgressTimer();\n            if ( equalizer.active ) {\n                equalizer.hide();\n            }\n        },\n\n        // recive content info event\n        'content:info': function () {\n            if ( systemPlayer.primary.videoInfo && systemPlayer.primary.videoInfo.width ) {\n                if ( intent.mime === 'content/audio' ) {\n                    playback.contentType = 'content/audio';\n                } else {\n                    document.body.classList.add('transparent');\n                    playback.contentType = 'content/video';\n                }\n            } else if ( !playback.contentType ) {\n                document.body.classList.remove('transparent');\n                playback.contentType = 'content/audio';\n            }\n\n            if ( playback.contentType === 'content/audio' && !equalizer.active ) {\n                equalizer.show();\n            }\n        },\n\n        // app want to stop player playback\n        'playback:stop': function () {\n            spinner.hide();\n            exitTimeShift();\n            systemPlayer.primary.stop();\n        },\n\n        // update subtitle tracks event\n        'tracks:update': subtitleTracksUpdate,\n\n        // playback error event\n        error: onContentErrorNotify,\n\n        // app want to exit\n        exit: onPlaybackHideHandler,\n\n        // someone call intent close\n        close: restoreSoundInPiP,\n\n        // current playback plays with dual mono\n        'content:dualMono': require('../modules/infoWidget').showDualMono\n    });\n\n    if ( intent.data.stream ) {\n        intent.addListener('end', onContentErrorNotify);\n    }\n\n    if ( intent.data.volumeCorrection ) {\n        core.plugins.settingsAudio.correction = intent.data.volumeCorrection;\n    } else {\n        core.plugins.settingsAudio.correction = 0;\n    }\n\n    if ( intent.data.retryOnError ) {\n        intent.addListener('error', retryPlaybackHandler);\n        // for streams we should use the same handlers on playback end event\n        if ( intent.data.stream ) {\n            intent.addListener('end', onContentErrorNotify);\n            intent.addListener('end', retryPlaybackHandler);\n        }\n    }\n\n    if ( !intent.events.end || !intent.events.end.length ) {\n        //debug.inspect(intent.events);\n        intent.once('end', function () {\n            intent.close();\n        });\n    }\n\n    intent.once('start', function () {\n        var time = systemPlayer.primary.duration,\n            currentTime;\n\n        if ( playback.contentType === 'content/audio' ) {\n            equalizer.show();\n        }\n\n        if ( time ) {\n\n            // hack\n            // on tizen and webos platform when channels is hls streams we detect duration\n            // remember first time detection and do not show controls\n            if ( !durationDetected && intent.data.tvChannel ) {\n                durationDetected = true;\n\n                return;\n            }\n\n            playerControl.forward = !(playback.capabilities.timeshift && app.timeshift && app.timeshift.enable && !playback.timeshift.active);\n            playerControl.rewind = !(playback.capabilities.timeshift && app.timeshift && app.timeshift.enable && !playback.timeshift.active);\n            playerControl.play = true;\n            app.playerPanel.initButtons(playerControl);\n            app.playerPanel.buttons.focusIndex(3);\n\n            // instantly display current time if we are playing not stream with timeshift solution\n            if ( !playback.capabilities.timeshift ) {\n                currentTime = systemPlayer.primary.position;\n                playback.currentTime = currentTime;\n                currentTime = tools.parseTime(currentTime);\n                app.playerPanel.$leftText.innerText = currentTime.hour + ':' + currentTime.min + ':' + currentTime.sec;\n            }\n\n            // prevent set interval if rewind is active\n            if ( !playback.rewind.isActive && !playback.capabilities.timeshift ) {\n                detectTotalDuration();\n            }\n        } else {\n            app.playerPanel.progressBar.hide();\n            playback.duration = null;\n        }\n    });\n\n    intent.once('media:info', getMediaInfo);\n    intent.once('start', function () {\n        hidePanel(PANEL_HIDE_TIMEOUT);\n    });\n\n    // reinit buttons\n    if ( intent.data.uri ) {\n        updatePlayerControls(intent);\n    }\n\n    if ( intent.data.modalMenu && intent.data.modalMenu.length ) {\n        modalActions.init(intent.data.modalMenu);\n        modalActions.record = true;\n    } else {\n        modalActions.record = false;\n    }\n\n    systemPlayer.intent(intent, callback, playConfig);\n\n    if ( intent.data.headless && intent.context ) {\n        // do nothing. rework this later\n    } else if ( intent.data.headless ) {\n        app.route(app.pages.clear);\n        app.pages.clear.panel.focus();\n    } else if ( !intent.context ) {\n        // mag322 rendering fix hack\n        setTimeout(function () {\n            if ( app.activePage !== app.pages.main ) {\n                app.route(app.pages.main);\n            }\n            console.log('*****************************focus main menu');\n            mainMenu.focus();\n        }, 20);\n    }\n}\n\n\n// update player controls on swapped intent\nfunction updatePlayerControls ( intent, checkDuration ) {\n    playerControl.play = systemPlayer.primary.duration && !intent.data.tvChannel && checkDuration;\n    playerControl.rewind = playerControl.forward =\n        systemPlayer.primary.duration && !intent.data.tvChannel && systemPlayer.primary.state !== 0;\n\n    playerControl.prev = (intent.events.prev && intent.events.prev.length && intent.events.prev[0]);\n    playerControl.next = (intent.events.next && intent.events.next.length && intent.events.next[0]);\n    playerControl.prevChannel = (intent.events.prevChannel && intent.events.prevChannel.length && intent.events.prevChannel[0]);\n    playerControl.nextChannel = (intent.events.nextChannel && intent.events.nextChannel.length && intent.events.nextChannel[0]);\n    app.playerPanel.initButtons(playerControl);\n    if ( app.playerPanel.buttons.$focusItem.data.disable ) {\n        if ( playerControl.play ) {\n            app.playerPanel.buttons.focusItem(app.playerPanel.buttons.$links.playPause);\n        } else if ( app.playerPanel.buttons.enabledCount ) { /*eslint no-inner-declarations:0 vars-on-top:0*/\n            var index;\n\n            for ( index = 0; index < app.playerPanel.buttons.data[0].length; index++ ) {\n                if ( !app.playerPanel.buttons.data[0][index].disable ) {\n                    app.playerPanel.buttons.focusItem(app.playerPanel.buttons.map[0][index]);\n                }\n            }\n        }\n    }\n\n    if ( intent.data.tvChannel ) {\n        intent.data.tvChannel.getEpg(false, getServerEpgHandler);\n    }\n}\n\n\nfunction getServerEpgHandler ( error, data ) {\n    var index,\n        currentTime = Date.now() / 1000;\n\n    if ( error || !data || !data.length ) {\n        return;\n    }\n\n    function findCurrentEpg ( epg ) {\n        var state = false,\n            newTime = +new Date() / 1000;\n\n        if ( epg.end > newTime && epg.start < newTime ) {\n            state = true;\n        }\n\n        return state;\n    }\n\n    playback.tv.epg.array = data;\n    index = findIndex(playback.tv.epg.array.slice(), findCurrentEpg);\n\n    if ( index >= 0 ) {\n        playback.tv.epg.currentIndex = index;\n        $program.innerText = playback.tv.epg.array[playback.tv.epg.currentIndex].title;\n        clearTimeout(timer.serverEpgUpdateCurrentProgram);\n\n        if ( app.lastPrimaryIntent.data.tvChannel.archive ) {\n            playerControl.play = true;\n            app.playerPanel.initButtons(playerControl);\n            if ( page.activeComponent !== app.playerPanel.buttons ) {\n                app.playerPanel.buttons.focusIndex(3);\n            }\n        }\n\n        timer.serverEpgUpdateCurrentProgram = setTimeout(function nextCheck () {\n            var epgIndex = findIndex(playback.tv.epg.array, findCurrentEpg),\n                nowTime = +new Date(),\n                timeoutTime;\n\n            clearTimeout(timer.serverEpgUpdateCurrentProgram);\n            if ( epgIndex ) {\n                playback.tv.epg.currentIndex = epgIndex;\n                $program.innerText = playback.tv.epg.array[playback.tv.epg.currentIndex].title;\n                timeoutTime = (playback.tv.epg.array[playback.tv.epg.currentIndex].end * 1000) - nowTime;\n                timer.serverEpgUpdateCurrentProgram = setTimeout(nextCheck, timeoutTime);\n            }\n\n        }, ((playback.tv.epg.array[playback.tv.epg.currentIndex].end * 1000) - (currentTime * 1000) + 2000));\n    }\n}\n\n\nfunction detectTotalDuration () {\n    var time = systemPlayer.primary.duration;\n\n    if ( time ) {\n        app.playerPanel.progressBar.show();\n        app.playerPanel.progressBar.init({max: time});\n        playback.duration = time;\n        playback.startProgressTimer();\n        time = tools.parseTime(time);\n        app.playerPanel.$rightText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n    }\n}\n\n\n/**\n * Callback to handle content meta date\n *\n * @param {Object} data - data object\n */\nfunction getMediaInfo ( data ) {\n    var audioPid = systemPlayer.primary.audioPID,\n        audioTrack,\n        currentSubtitleTrack,\n        lang;\n\n    //{ audioTracks: [ { codecType: 3, lang: [], pid: 1 } ],\n    //subtitlesTracks: [ { codecType: 33, lang: [], pid: 2 } ] }\n    if ( data.audioTracks && data.audioTracks.length ) {\n        data.audioTracks.forEach(function ( track ) {\n            if ( track.pid === audioPid ) {\n                audioTrack = track;\n            }\n        });\n    }\n    playback.audioTracks.list = data.audioTracks;\n    playback.audioTracks.current = audioTrack;\n\n    $mediaInfo.codec.src =  '';\n    $mediaInfo.lang.innerText = '';\n    if ( audioTrack ) {\n        $mediaInfo.codec.src = tools.getCodecImageName(audioTrack.type);\n        if ( audioTrack.lang && audioTrack.lang[0] ) {\n            lang = audioTrack.lang[0];\n        }\n        if ( !lang || lang === 'und') {\n            $mediaInfo.lang.innerText = '';\n        } else {\n            //$mediaInfo.lang.innerText = (lang.length > 2 ? langs['2T'][lang]: langs['1'][lang]);\n            lang = langs['1'][lang] || langs['2T'][lang] || langs['2B'][lang] || [''];\n\n            //$mediaInfo.lang.innerText = langs['1'][lang][0] || langs['2T'][lang][0] || langs['2B'][lang][0] || '';\n            $mediaInfo.lang.innerText = lang[0];\n        }\n    }\n\n    clearTimeout(timer.contentInfo);\n    timer.contentInfo = setTimeout(function () {\n        $mediaInfo.codec.src = '';\n        $mediaInfo.lang.innerText = '';\n    }, 5000);\n\n    if ( data.subtitlesTracks && data.subtitlesTracks.length ) {\n        menuElements = menuConstructor({subtitles: true}, app.lastPrimaryIntent);\n        mainMenu.init({\n            data: menuElements.data,\n            size: menuElements.data.length,\n            focusIndex: menuElements.focusIndex\n        });\n        playback.subtitles.list = data.subtitlesTracks;\n        playback.subtitles.currentPID = systemPlayer.primary.subtitlesPID;\n        if ( systemPlayer.primary.enableSubtitles ) {\n            currentSubtitleTrack = getSubtitlesByPID(playback.subtitles.currentPID);\n            playback.subtitles.current = currentSubtitleTrack.track;\n            playback.subtitles.index = currentSubtitleTrack.index;\n        }\n    } else {\n        playback.subtitles.current = null;\n        playback.subtitles.currentPID = null;\n        playback.subtitles.list = [];\n    }\n}\n\n\nfunction subtitleTracksUpdate ( data ) {\n    var currentSubtitleTrack;\n\n    if ( data.tracks && data.tracks.length ) {\n        menuElements = menuConstructor({subtitles: true}, app.lastPrimaryIntent);\n        mainMenu.init({\n            data: menuElements.data,\n            size: menuElements.data.length,\n            focusIndex: menuElements.focusIndex\n        });\n        playback.subtitles.list = data.tracks;\n        playback.subtitles.currentPID = systemPlayer.primary.subtitlesPID;\n        if ( systemPlayer.primary.enableSubtitles ) {\n            currentSubtitleTrack = getSubtitlesByPID(playback.subtitles.currentPID);\n            playback.subtitles.current = currentSubtitleTrack.track;\n            playback.subtitles.index = currentSubtitleTrack.index;\n        }\n    } else {\n        playback.subtitles.current = null;\n        playback.subtitles.currentPID = null;\n        playback.subtitles.list = [];\n    }\n}\n\n\nfunction intentMenuHandler () {\n    if ( app.currentPlayIntent.data.modalMenu && app.currentPlayIntent.data.modalMenu.length && !modalActions.visible ) {\n        app.lastFocus = app.activePage.activeComponent || app.activePage;\n        modalActions.show();\n    }\n}\n\n\nfunction rewind ( forward, timeout ) {\n    var to = 0,\n        // if we rewind to the end of file just instantly stop playback end emit end\n        endOfFile  = false,\n        prefix = '',\n        currentTime,\n        maxRewindTo = playback.duration,\n        index;\n\n    if ( !playback.duration && !playback.tv.archive.active ) {\n        return;\n    }\n\n    playback.rewind.pauseBlockingState = true;\n\n    if ( playback.tv.archive.active && playback.tv.archive.realProgram ) {\n        maxRewindTo = app.playerPanel.bufferBar.value;\n    }\n\n    // clearInterval(timer.progress);\n    playback.stopProgressTimer();\n\n    timeout = timeout || playback.rewind.timeoutDuration;\n\n    if ( !playback.rewind.isActive ) {\n        if ( app.activePage === app.pages.clear ) {\n            app.route(app.pages.main);\n            playback.rewind.remote = true;\n        }\n        if ( playback.tv.archive.active && playback.tv.archive.realProgram ) {\n            playback.currentTime = app.playerPanel.progressBar.value;\n        }\n        app.playerPanel.$progressbar.classList.add('active');\n        playback.rewind.isActive = true;\n        playback.rewind.startTime = playback.currentTime;\n        playback.rewind.time = playback.currentTime;\n    }\n\n    if ( playback.rewind.direction === forward ) {\n        playback.rewind.intervals.splice(0, 1);\n        playback.rewind.intervals[playback.rewind.intervals.length] = playback.rewind.intervals[playback.rewind.intervals.length - 1] + 10;\n    } else {\n        // new direction of rewind\n        playback.rewind.intervals = [0, 0, 10];\n        playback.rewind.direction = forward;\n    }\n\n    if ( playback.rewind.remote ) {\n        app.playerPanel.buttons.focus();\n        if ( forward ) {\n            app.playerPanel.buttons.focusIndex(4);\n        } else {\n            app.playerPanel.buttons.focusIndex(2);\n        }\n    }\n\n    for ( index = 0; index < playback.rewind.intervals.length; index++ ) {\n        to += (forward ? 1 : -1) * playback.rewind.intervals[index];\n    }\n    if ( to > 1800 ) {\n        to = 1800;\n    }\n    if ( to < -1800 ) {\n        to = -1800;\n    }\n\n    playback.rewind.time += to;\n    if ( playback.rewind.time >= maxRewindTo ) {\n        playback.rewind.time = maxRewindTo;\n        endOfFile = true;\n    }\n    if ( playback.rewind.time < 0 ) {\n        playback.rewind.time = 3;\n    }\n\n    currentTime = playback.rewind.time;\n    app.playerPanel.progressBar.set(playback.rewind.time);\n\n    if ( playback.timeshift.active ) {\n        currentTime = systemPlayer.primary.duration - playback.rewind.time;\n        prefix = '- ';\n    }\n    currentTime = tools.parseTime(currentTime);\n\n    app.playerPanel.$leftText.innerText = prefix + currentTime.hour + ':' + currentTime.min + ':' + currentTime.sec;\n\n    clearTimeout(playback.rewind.timeout);\n\n    playback.rewind.timeout = setTimeout(function () {\n        if ( playback.tv.archive.active && playback.tv.archive.realProgram &&\n            playback.tv.archive.currentState === playback.tv.archive.state.PAUSED_GET_LINK ) {\n            setPos(true);\n        } else {\n            setPos();\n        }\n\n        function setPos ( playInsteadRewindUri ) {\n            playback.rewind.isActive = false;\n            if ( playInsteadRewindUri ) {\n                //systemPlayer.play\n                app.lastPrimaryIntent.data.uri = playback.tv.archive.realProgramUrl;\n                app.lastPrimaryIntent.data.position = playback.rewind.time;\n                playback.tv.archive.currentState = playback.tv.archive.state.PLAYING_FILE;\n                systemPlayer.intent(app.lastPrimaryIntent);\n            } else {\n\n                console.log('player state is ' + systemPlayer.primary.state);\n                console.log('try to rewind');\n                systemPlayer.primary.position = playback.rewind.time;\n                console.log('player state is ' + systemPlayer.primary.state);\n\n                if ( playback.capabilities.timeshift && playback.timeshift.active && systemPlayer.primary.state === 3 ) {\n                    playback.startProgressTimer();\n                    systemPlayer.primary.position = playback.rewind.time;\n                } else if ( endOfFile ) {\n                    // instantly emit end and stop player\n                    systemPlayer.primary.stop();\n                    app.lastPrimaryIntent.emit('end');\n                } else {\n                    systemPlayer.primary.position = playback.rewind.time;\n                }\n            }\n            playback.currentTime = playback.rewind.time;\n            app.playerPanel.$progressbar.classList.remove('active');\n            playback.rewind.mode = null;\n            // restore rewind intervals\n            playback.rewind.intervals = [0, 0, 10];\n            if ( playback.rewind.remote ) {\n                hidePanel(1);\n                // go to clear page if rewind was initiated there\n                playback.rewind.remote = false;\n            }\n\n            spinner.show();\n\n            // after rewind and 600ms we unblock possibility to play/pause\n            clearTimeout(playback.rewind.pauseBlockingTimeout);\n            playback.rewind.pauseBlockingTimeout = setTimeout(function () {\n                playback.rewind.pauseBlockingState = false;\n            }, 600);\n        }\n    }, timeout);\n\n    if ( equalizer.active ) {\n        equalizer.pause();\n    }\n}\n\n\nfunction nextAspect () {\n    var currentAspect = systemPlayer.primary.aspect;\n\n    if ( currentAspect < 5 ) {\n        currentAspect++;\n    } else {\n        currentAspect = 0;\n    }\n    systemPlayer.primary.aspect = currentAspect;\n    displayInfo({\n        text: types.aspects[currentAspect],\n        icon: 'H'\n    });\n}\n\n\nfunction getSubtitlesByPID ( PID ) {\n    var index, sub;\n\n    for ( index = 0; index < playback.subtitles.list.length; index++ ) {\n        sub = playback.subtitles.list[index];\n        if ( sub.pid === PID ) {\n            return {track: sub, index: index};\n        }\n    }\n\n    return null;\n}\n\n\nfunction playPauseHandler ( config ) {\n    config = config || config;\n\n    if ( !playerControl.play ) {\n        return;\n    }\n\n    if ( app.activePage !== page ) {\n        app.route(app.pages.main);\n        app.playerPanel.buttons.focusIndex(2);\n    }\n\n    if ( app.lastPrimaryIntent.data.tvChannel && app.lastPrimaryIntent.data.tvChannel.archive &&\n        playback.tv.epg.array.length /*&& playback.tv.archive.array.length*/ && !playback.timeshift.active ) {\n        serverTimeShiftPauseHandler();\n    } else if ( app.timeshift && app.timeshift.enable && playback.capabilities.timeshift ) {\n        localTimeShiftPauseHandler();\n    } else {\n        commonPlaybackPause(config);\n    }\n}\n\n\nfunction stopPlaybackHandler () {\n    // do not stop if force set stream content\n    if ( app.lastPrimaryIntent && app.lastPrimaryIntent.data && app.lastPrimaryIntent.data.stream ) {\n        return;\n    }\n\n    // stop playback only if we are playing non stream content or app will handle this event\n    if (\n        systemPlayer.primary.duration\n        || (app.currentPlayIntent.events.stop && app.currentPlayIntent.events.stop.length)\n    ) {\n        exitTimeShift();\n        systemPlayer.primary.stop();\n        document.body.classList.remove('transparent');\n        // clearInterval(timer.progress);\n        playback.stopProgressTimer();\n        app.playerPanel.$rightText.innerText = '00:00:00';\n        app.playerPanel.$leftText.innerText = '00:00:00';\n        app.playerPanel.progressBar.set(0);\n        if ( app.currentPlayIntent ) {\n            app.currentPlayIntent.emit('stop', {manual: true});\n        }\n    }\n}\n\n\nfunction commonPlaybackPause ( config ) {\n    if ( PLATFORM === 'TIZEN' && playback.rewind.pauseBlockingState ) {\n        // on tizen platform async seek may cause unhandled errors\n        return;\n    }\n    config = config || {};\n\n    console.log('pause::: state was ' + systemPlayer.primary.state);\n    if ( config.forcePause ) {\n        app.playerPanel.showPlayButton();\n        systemPlayer.primary.pause();\n    } else if ( config.forceResume ) {\n        app.playerPanel.showPauseButton();\n        systemPlayer.primary.resume();\n        if ( playback.contentType === 'content/audio' ) {\n            equalizer.show();\n        }\n    } else if ( systemPlayer.primary.state === systemPlayer.STATE_PLAYING ) {\n        app.playerPanel.showPlayButton();\n        playback.stopProgressTimer();\n        systemPlayer.primary.pause();\n        if ( equalizer.active ) {\n            equalizer.pause();\n        }\n    } else if ( systemPlayer.primary.state === systemPlayer.STATE_PAUSE ) {\n        app.playerPanel.showPauseButton();\n        playback.startProgressTimer();\n        systemPlayer.primary.resume();\n        if ( playback.contentType === 'content/audio' ) {\n            equalizer.show();\n        }\n    }\n    console.log('pause::: state now is ' + systemPlayer.primary.state);\n}\n\n\nfunction serverTimeShiftPauseHandler () {\n    var currentProgram;\n\n    switch ( playback.tv.archive.currentState ) {\n        case playback.tv.archive.state.NOT_ACTIVE:\n            clearTimeout(timer.serverEpgUpdateCurrentProgram);\n            playback.tv.archive.currentIndex = playback.tv.epg.currentIndex;\n            currentProgram = playback.tv.epg.array[playback.tv.archive.currentIndex];\n            if ( !currentProgram ) {\n                return;\n            }\n            currentProgram.getLink(function ( error, data ) {\n                var time;\n\n                if ( data && data.url && !error ) {\n                    systemPlayer.primary.pause();\n                    playback.tv.archive.active = true;\n                    playback.tv.archive.realProgramUrl = data.url;\n                    playback.tv.archive.realProgram = true;\n                    playback.tv.archive.currentState = playback.tv.archive.state.PAUSED_GET_LINK;\n                    app.playerPanel.progressBar.init({\n                        max: currentProgram.end - currentProgram.start,\n                        value: parseInt((Date.now() / 1000) - currentProgram.start, 10)\n                    });\n\n                    app.playerPanel.bufferBar.init({\n                        max: currentProgram.end - currentProgram.start,\n                        value: parseInt((Date.now() / 1000) - currentProgram.start, 10)\n                    });\n\n                    app.playerPanel.progressBar.show();\n\n                    app.playerPanel.bufferBar.show();\n                    if ( playback.tv.epg.array[playback.tv.archive.currentIndex - 1] &&\n                        playback.tv.epg.array[playback.tv.archive.currentIndex - 1].archive ) {\n                        playerControl.prev = true;\n                    }\n                    playerControl.rewind = playerControl.forward = true;\n                    app.playerPanel.initButtons(playerControl);\n                    app.playerPanel.showPlayButton();\n\n                    timer.serverTimeShiftBufferProgress = setInterval(setServerTimeShiftBufferProgress, 1000);\n                    time = tools.parseTime(currentProgram.end - currentProgram.start);\n                    app.playerPanel.$rightText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n                    time = tools.parseTime(parseInt((Date.now() / 1000) - currentProgram.start, 10));\n                    app.playerPanel.$leftText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n                } else {\n                    // error here\n                    app.playerPanel.showPauseButton();\n                    playback.tv.archive.currentState = playback.tv.archive.state.PAUSED_GET_LINK_ERROR;\n                    core.notify({\n                        title: gettext('Can not get current epg link'),\n                        icon: 'alert',\n                        type: 'error',\n                        timeout: 2000\n                    });\n                }\n            });\n            break;\n        case playback.tv.archive.state.PAUSED_GET_LINK:\n            app.playerPanel.showPauseButton();\n            app.lastPrimaryIntent.data.uri = playback.tv.archive.realProgramUrl;\n            app.lastPrimaryIntent.data.position = app.playerPanel.progressBar.value - 10;\n            app.lastPrimaryIntent.data.solution = 'ffmpeg';\n            systemPlayer.intent(app.lastPrimaryIntent);\n            playback.tv.archive.currentState = playback.tv.archive.state.PLAYING_FILE;\n            // playback.startProgressTimer();\n            break;\n        case playback.tv.archive.state.PLAYING_FILE:\n            commonPlaybackPause();\n            if ( systemPlayer.primary.state === 3 ) {\n                playback.stopProgressTimer();\n            } else {\n                playback.startProgressTimer();\n            }\n            break;\n    }\n}\n\n\nfunction activateTimeShift ( config ) {\n    var time;\n\n    config = config || {};\n\n    if ( !app.timeshift.path ) {\n        if ( config.manual ) {\n            core.notify({\n                title: gettext('Mount usb device!'),\n                icon: 'alert',\n                timeout: 3000\n            });\n        }\n\n        return false;\n    }\n\n    if ( tools.checkUsb(app.timeshift.mountUsb ) ) {\n        // state = app.timeshift.enter();\n        playback.timeshift.active = true;\n\n        $icons.timeshift.classList.add('visible');\n        time = tools.parseTime(app.timeshift.length);\n        app.playerPanel.$rightText.innerText = time.hour + ':' + time.min + ':' + time.sec;\n        playback.timeshift.duration = 0;\n\n        app.playerPanel.progressBar.init({\n            max: parseInt(app.timeshift.length, 10)\n        });\n        app.playerPanel.progressBar.show();\n        app.playerPanel.bufferBar.init({\n            max: parseInt(app.timeshift.length, 10)\n        });\n        app.playerPanel.bufferBar.show();\n        playback.startProgressTimer();\n        clearInterval(timer.localTimeShiftBufferProgress);\n        timer.localTimeShiftBufferProgress = setInterval(localTimeShiftBufferProgress, 1000);\n        playerControl.rewind = true;\n        playerControl.forward = true;\n        playback.duration = app.timeshift.length;\n        app.playerPanel.initButtons(playerControl);\n\n        return true;\n    }\n\n    core.notify({\n        title: gettext('Mount usb device!'),\n        icon: 'alert',\n        timeout: 3000\n    });\n\n    return false;\n}\n\n\nfunction localTimeShiftPauseHandler () {\n    if ( playback.timeshift.active ) {\n        commonPlaybackPause();\n    } else if ( activateTimeShift({manual: true}) ) {\n        commonPlaybackPause();\n        systemPlayer.primary.position = 1;\n    }\n}\n\n\nfunction isEpgRealTime ( epg ) {\n    var curr = Date.now() / 1000;\n\n    return (epg.start < curr && epg.end > curr);\n}\n\n\nfunction serverTimeShiftNextPrevEpg ( state ) {\n    // previouse content\n    if ( !state ) { // eslint-disable-line\n        playback.tv.archive.currentIndex--;\n        playback.tv.epg.array[playback.tv.archive.currentIndex].getLink(function ( error, data ) {\n            if ( data && data.url && !error ) {\n                $program.innerText = playback.tv.epg.array[playback.tv.archive.currentIndex].title;\n                app.lastPrimaryIntent.data.uri = data.url;\n                app.lastPrimaryIntent.data.solution = 'ffmpeg';\n                app.lastPrimaryIntent.once('start', detectTotalDuration);\n                // app.lastPrimaryIntent.events.start.forEach(function (p1, p2, p3) {  })\n                systemPlayer.intent(app.lastPrimaryIntent);\n                playback.tv.archive.realProgram = false;\n                playback.tv.archive.currentState = playback.tv.archive.state.PLAYING_FILE;\n                if ( playback.tv.epg.array[playback.tv.archive.currentIndex - 1] &&\n                    playback.tv.epg.array[playback.tv.archive.currentIndex - 1].archive ) {\n                    playerControl.prev = true;\n                } else {\n                    playerControl.prev = false;\n                }\n                playerControl.next = true;\n                app.playerPanel.initButtons(playerControl);\n            } else {\n                core.notify({\n                    title: gettext('Can not get current epg link'),\n                    icon: 'alert',\n                    type: 'error',\n                    timeout: 2000\n                });\n            }\n        });\n    } else {\n        // next content\n        if ( playback.tv.epg.array[playback.tv.archive.currentIndex + 1] && // eslint-disable-line\n            (playback.tv.epg.array[playback.tv.archive.currentIndex + 1].archive ||\n            !isEpgRealTime(playback.tv.epg.array[playback.tv.archive.currentIndex + 1]))) {\n            playback.tv.archive.currentIndex++;\n            playback.tv.epg.array[playback.tv.archive.currentIndex].getLink(function ( error, data ) {\n                if ( data && data.url && !error ) {\n                    $program.innerText = playback.tv.epg.array[playback.tv.archive.currentIndex].title;\n                    app.lastPrimaryIntent.data.uri = data.url;\n                    app.lastPrimaryIntent.data.solution = data.solution;\n                    app.lastPrimaryIntent.once('start', detectTotalDuration);\n                    systemPlayer.intent(app.lastPrimaryIntent);\n                    playback.tv.archive.realProgram = false;\n                    playback.tv.archive.currentState = playback.tv.archive.state.PLAYING_FILE;\n                } else {\n                    core.notify({\n                        title: gettext('Can not get current epg link'),\n                        icon: 'alert',\n                        type: 'error',\n                        timeout: 2000\n                    });\n                }\n            });\n        } else {\n            // should play real program or just stream instead\n            app.lastPrimaryIntent.data.tvChannel.getUrl(function ( error, data ) {\n                if ( data && data.url && !error ) {\n                    $program.innerText = '';\n                    app.lastPrimaryIntent.data.uri = data.url;\n                    app.lastPrimaryIntent.data.solution = data.solution;\n\n                    app.lastPrimaryIntent.once('start', function () {\n                        app.lastPrimaryIntent.data.tvChannel.getEpg(false, getServerEpgHandler);\n                    });\n\n                    playback.tv.archive.active = false;\n                    playback.tv.archive.currentState = 0;\n                    playerControl.next = false;\n                    playerControl.prev = false;\n                    playerControl.rewind = false;\n                    playerControl.forward = false;\n                    app.playerPanel.initButtons(playerControl);\n                    systemPlayer.intent(app.lastPrimaryIntent);\n                } else {\n                    core.notify({\n                        title: 'Error playing content: ' + (app.lastPrimaryIntent.data.title || app.lastPrimaryIntent.data.uri),\n                        icon: 'alert',\n                        type: 'error',\n                        timeout: 3000\n                    });\n                }\n            });\n        }\n    }\n}\n\n\n/**\n * Send initiator app to get next/prev content\n *\n * @param {boolean} state - state to get data: true - next, false - prev content\n */\nfunction nextPrevContent ( state ) {\n    if ( app.currentPlayIntent && !playback.tv.archive.active ) {\n        if ( state && !app.currentPlayIntent.events.next ) {\n            return;\n        } else if ( !state && !app.currentPlayIntent.events.prev ) {\n            return;\n        }\n    }\n\n    exitTimeShift();\n    playback.stopProgressTimer();\n    systemPlayer.primary.stop();\n    resetInfo(app.currentPlayIntent);\n    if ( equalizer.active ) {\n        equalizer.hide();\n    }\n    document.body.classList.remove('transparent');\n\n    // give control to server timeshift handler\n    if ( playback.tv.archive.active ) {\n        serverTimeShiftNextPrevEpg(state);\n    } else {\n        exitTimeShift();\n        systemPlayer.primary.stop();\n        resetInfo();\n        if ( state && app.currentPlayIntent.events.next ) {\n            app.currentPlayIntent.emit('next');\n        } else if ( !state && app.currentPlayIntent.events.prev ) {\n            app.currentPlayIntent.emit('prev');\n        }\n    }\n}\n\n\nfunction nextPrevChannel ( state ) {\n    exitTimeShift();\n    playback.stopProgressTimer();\n    systemPlayer.primary.stop();\n    resetInfo(app.currentPlayIntent);\n    if ( equalizer.active ) {\n        equalizer.hide();\n    }\n    document.body.classList.remove('transparent');\n\n    if ( state && app.currentPlayIntent.events.nextChannel ) {\n        app.currentPlayIntent.emit('nextChannel');\n    } else if ( !state && app.currentPlayIntent.events.prevChannel ) {\n        app.currentPlayIntent.emit('prevChannel');\n    }\n}\n\n\nfunction resetInfo ( intent ) {\n    menuElements = menuConstructor(null, intent);\n    core.plugins.settingsAudio.correction = 0;\n\n    // clear rewind timeout and disable rewind mode\n    clearTimeout(playback.rewind.timeout);\n    playback.rewind.isActive = false;\n\n    mainMenu.init({\n        data: menuElements.data,\n        size: menuElements.data.length,\n        focusIndex: menuElements.focusIndex\n    });\n    playback.duration = null;\n    playback.currentTime = 0;\n    playback.retryOnError.currentInterval = 0;\n    clearTimeout(playback.retryOnError.timeoutId);\n    app.playerPanel.showPauseButton();\n    app.playerPanel.$rightText.innerText = '';\n    app.playerPanel.$leftText.innerText = '';\n    app.playerPanel.progressBar.set(0);\n    app.playerPanel.bufferBar.set(0);\n    app.playerPanel.progressBar.hide();\n    app.playerPanel.bufferBar.hide();\n    $mediaInfo.codec.src = '';\n    $mediaInfo.lang.innerText = '';\n    //document.body.classList.remove('transparent');\n    playback.rewind.pauseBlockingState = false;\n    clearTimeout(playback.rewind.pauseBlockingTimeout);\n}\n\n\n/**\n * Function to handle player hide or initial app hide\n */\nfunction onPlaybackHideHandler () {\n    modalActions.hide();\n\n    exitTimeShift();\n    systemPlayer.primary.stop();\n    equalizer.hide();\n    resetInfo();\n    playback.stopProgressTimer();\n    spinner.hide();\n    restoreSoundInPiP();\n\n    // reset player to set fullscreen\n    // TODO: check if we need to do this for all platforms without this check\n    if ( core.device && ( core.device.model.indexOf('emulator') > -1 || core.device.model.indexOf('android') > -1) ) {\n        systemPlayer.reset();\n    }\n\n    app.lastPrimaryIntent = null;\n}\n\n\n/**\n * Restore audio focus in PiP if needded\n */\nfunction restoreSoundInPiP () {\n    if ( app.pipPlayer && app.pipPlayer.state ) {\n        systemPlayer.setAudioSource(app.pipPlayer);\n    }\n}\n\n\nfunction hidePanel ( sec ) {\n    sec = sec || 5;\n\n    clearTimeout(timer.panelHide);\n    timer.panelHide = setTimeout(function () {\n        app.route(app.pages.clear);\n    }, 1000 * sec);\n}\n\napp.playback = playback;\n\npage.add(mainMenu = app.mainMenu = new Menu({\n    $node: document.getElementById('pMainMenu'),\n    focusIndex: menuElements.focusIndex,\n    size: menuElements.data.length,\n    propagate: false,\n    data: menuElements.data,\n    events: {\n        keydown: function ( event ) {\n            Menu.prototype.defaultEvents.keydown.call(this, event);\n            if ( event.code === keys.up ) {\n                if ( app.playerPanel.buttons.enabledCount ) {\n                    app.playerPanel.focus();\n                }\n            }\n        }\n    }\n}));\n\npage.add(\n    app.playerPanel = new PlayerPanel({\n        $node: document.getElementById('pMainPlayerPanel'),\n        //progressBar: false,\n        onPlay: playPauseHandler,\n        onRewind: function ( event ) {\n            // debug.inspect(event);\n            if ( event.direction === keys.right ) {\n                rewind(true, 2500);\n            } else if ( event.direction === keys.left ) {\n                rewind(false, 2500);\n            }\n        },\n        onPrevNext: function ( event ) {\n            switch ( event.direction ) {\n                case keys.right:\n                    nextPrevContent(true);\n                    break;\n                case keys.left:\n                    nextPrevContent(false);\n                    break;\n            }\n        },\n        onChannels: function ( event ) {\n            switch ( event.direction ) {\n                case keys.right:\n                    nextPrevChannel(true);\n                    break;\n                case keys.left:\n                    nextPrevChannel(false);\n                    break;\n            }\n        },\n        events: {\n            keydown: function ( event ) {\n                if ( event.code === keys.down ) {\n                    mainMenu.focus();\n                }\n            }\n        }\n    })\n);\n\napp.rewind = rewind;\napp.nextPrevContent = function ( state ) {\n    if (app.currentPlayIntent.events.next || app.currentPlayIntent.events.prev ) {\n        nextPrevContent(state);\n    } else if ( app.currentPlayIntent.events.nextChannel ||  app.currentPlayIntent.events.prevChannel ) {\n        nextPrevChannel(state);\n    }\n};\n\ncore.addListeners({\n    // intent listener handler\n    intent: function ( intent, callback ) {\n        if ( intent.action !== 'play' ) {\n\n            return;\n        }\n        resetInfo(intent);\n\n        // check if we need play advertising with this intent\n        advertising.checkIntent(intent, function () {\n            startPlay(intent, callback);\n        });\n    },\n\n    // core event hide handler\n    hide: function ( event ) {\n        console.log(event, 'hide event');\n\n        if (\n            // hide by some intent call show\n            event.source === core.SOURCES.INTENT\n            // player hide by pip events (maximize, etc)\n            || event.source === core.SOURCES.SYSTEM\n        ) {\n            // here will process some actions\n            console.log('do not stop playback');\n\n            return;\n        }\n\n        if ( app.activePage === app.pages.settings ) {\n            app.route(app.pages.clear);\n        }\n\n        if ( app.lastPrimaryIntent ) {\n            // emit to initiate app that player is hide\n            app.lastPrimaryIntent.emit('hide');\n        }\n        onPlaybackHideHandler();\n    }\n});\n\napp.addListeners({\n    // close app event\n    close: function () {\n        playback.stopProgressTimer();\n        clearTimeout(timer.localTimeShiftAutoStart);\n        if ( equalizer.active ) {\n            equalizer.hide();\n        }\n        if ( !app.pipIntent ) {\n            systemPlayer.reset();\n        }\n\n        spinner.hide();\n    },\n\n    // player swap event\n    swap: function () {\n        updatePlayerControls(app.currentPlayIntent, true);\n    },\n\n    // keydown event handler\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.stop:\n                stopPlaybackHandler();\n                break;\n            case keys.forward:\n                rewind(true);\n                break;\n            case keys.rewind:\n                rewind(false);\n                break;\n            case keys.playPause:\n            case 32:\n                playPauseHandler();\n                break;\n            case keys.play:\n                playPauseHandler({forceResume: true});\n                break;\n            case keys.pause:\n                playPauseHandler({forcePause: true});\n                break;\n            case keys.channelNext:\n                if ( app.currentPlayIntent && app.currentPlayIntent.events.nextChannel) {\n                    nextPrevChannel(true);\n                }\n                break;\n            case keys.channelPrev:\n                if ( app.currentPlayIntent && app.currentPlayIntent.events.prevChannel) {\n                    nextPrevChannel(false);\n                }\n                break;\n            case keys.pageDown:\n                nextPrevContent(true);\n                break;\n            case keys.pageUp:\n                nextPrevContent(false);\n                break;\n            case keys.exit:\n                if ( PLATFORM === 'TIZEN' ) {\n                    playback.stopProgressTimer();\n                    systemPlayer.primary.stop();\n                    equalizer.hide();\n                    resetInfo();\n                    app.currentPlayIntent.close();\n                }\n                break;\n            case keys.info:\n                if ( app.currentPlayIntent.events.onInfoPress ) {\n                    app.currentPlayIntent.emit('onInfoPress');\n                }\n                break;\n            case keys.frame:\n                nextAspect();\n                break;\n            case keys.refresh:\n                if ( !app.pipIntent ) {\n                    sendPipIntent();\n                }\n                break;\n            case 48:\n            case 49:\n            case 50:\n            case 51:\n            case 52:\n            case 53:\n            case 54:\n            case 55:\n            case 56:\n            case 57:\n                //sendOsdInputIntent(String.fromCharCode(event.code));\n                if ( app.currentPlayIntent.events.onNumberPress ) {\n                    app.currentPlayIntent.emit('onNumberPress', {number: String.fromCharCode(event.code)});\n                }\n                break;\n            case keys.menu:\n                intentMenuHandler();\n                break;\n        }\n    }\n});\n\npage.addListener('keydown', function ( event ) {\n    clearTimeout(timer.panelHide);\n\n    if ( playback.rewind.remote ) {\n        switch ( event.code ) {\n            case keys.right:\n                rewind(true);\n                break;\n            case keys.left:\n                rewind(false);\n                break;\n        }\n\n        return;\n    }\n\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.clear);\n            break;\n        case keys.info:\n            app.route(app.pages.clear);\n            break;\n    }\n});\n\napp.playerPanel.initButtons(playerControl);\napp.ready();\nresetInfo();\n\nif ( app.timeshift ) {\n    require('../modules/ts.listeners');\n}\n\nif ( core.device && core.device.model === 'emulator' ) {\n    require('../modules/settings/video.options').setValue(core.environment.playerHardwareAcceleration || false);\n}\n\nsetTimeout(function () {\n    mainMenu.focus();\n});\n\nif ( DEVELOP ) {\n    window.playback = playback;\n}\n\n\n// public\nmodule.exports = page;\n","/**\n * PLayer Panel component\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/* eslint no-path-concat: 0 */\n/* eslint no-use-before-define:0*/\n\nvar Component   = require('stb-component'),\n    keys        = require('stb-keys'),\n    ProgressBar = require('spa-component-progress-bar'),\n    Grid        = require('spa-component-grid'),\n    buttonsRender = require('./player.buttons.grid.render'),\n    buttons;\n\n\nfunction Player ( config ) {\n    var $buttonsWrapper,\n        self = this;\n\n    config = config || {};\n\n    config.className = 'playerPanel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    Component.call(this, config);\n\n\n    this.$node.appendChild(this.$bufferBar = document.createElement('div'));\n    this.$bufferBar.className = 'bufferBar';\n\n    this.$node.appendChild(this.$progressbar = document.createElement('div'));\n    this.$progressbar.className = 'progressBar';\n\n    this.$node.appendChild(this.$body);\n\n\n    this.$body.appendChild(this.$leftText = document.createElement('div'));\n    this.$leftText.className = 'leftText';\n\n    this.progressBar = new ProgressBar({\n        $node: this.$progressbar\n    });\n\n    this.bufferBar = new ProgressBar({\n        $node: this.$bufferBar\n    });\n\n    this.$body.appendChild($buttonsWrapper = document.createElement('div'));\n    $buttonsWrapper.className = 'buttonsWrapper';\n\n    this.buttons = new Grid({\n        propagate: true,\n        data: [['']],\n        parent: this,\n        className: 'playerButtons',\n        events: {\n            'click:item': function ( event ) {\n                if ( event.$item.data && event.$item.data.click ) {\n                    event.$item.data.click();\n                }\n            }\n        }\n    });\n\n    this.buttons.focusIndex = function ( index ) {\n        return self.buttons.focusItem(self.buttons.map[0][index]);\n    };\n\n    this.buttons.$links = {};\n\n    $buttonsWrapper.appendChild(this.buttons.$node);\n\n    this.$body.appendChild(this.$rightText = document.createElement('div'));\n    this.$rightText.className = 'rightText';\n\n    this.init(config);\n}\n\n\nPlayer.prototype = Object.create(Component.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.init = function ( config ) {\n    buttons = {\n        chM: {\n            icon: 'ch-',\n            click: function () { if ( config.onChannels ) { config.onChannels({direction: keys.left}); } }\n        },\n        prev: {\n            icon: 'prev',\n            click: function () { if ( config.onPrevNext ) { config.onPrevNext({direction: keys.left}); } }\n        },\n        rewind: {\n            icon: 'rewind',\n            click: function () { if ( config.onRewind ) { config.onRewind({direction: keys.left}); } }\n        },\n        play: {\n            icon: 'playPause',\n            click: function () { if ( config.onPlay ) { config.onPlay(); } }\n        },\n        forward: {\n            icon: 'forward',\n            click: function () { if ( config.onRewind ) { config.onRewind({direction: keys.right}); } }\n        },\n        next: {\n            icon: 'next',\n            click: function () { if ( config.onPrevNext ) { config.onPrevNext({direction: keys.right}); } }\n        },\n        chP: {\n            icon: 'ch+',\n            click: function () { if ( config.onChannels ) { config.onChannels({direction: keys.right}); } }\n        }\n    };\n\n    this.buttons.init({\n        propagate: true,\n        data: [[buttons.chM, buttons.prev, buttons.rewind, buttons.play, buttons.forward, buttons.next, buttons.chP]],\n        render: buttonsRender\n    });\n\n\n    if ( config.progressBar ) {\n        this.progressBar.show();\n    } else {\n        this.progressBar.hide();\n    }\n\n};\n\n/*eslint no-invalid-this:0*/\n\nPlayer.prototype.focus = function () {\n    this.buttons.focus();\n};\n\n\n// channel - btn\n// prev content btn\n// rewind btn\n// pause btn\n// forward btn\n// next content btn\n// channel + btn\n\nPlayer.prototype.initButtons = function ( config ) {\n    var buttonsArray;\n\n    config = config || {};\n\n    this.buttons.enabledCount = 0;\n    buttons.chM.disable = !config.prevChannel;\n    buttons.prev.disable = !config.prev;\n    buttons.rewind.disable = !config.rewind;\n    buttons.play.disable = !config.play;\n    buttons.forward.disable = !config.forward;\n    buttons.next.disable = !config.next;\n    buttons.chP.disable = !config.nextChannel;\n\n    buttonsArray = [buttons.chM, buttons.prev, buttons.rewind, buttons.play, buttons.forward, buttons.next, buttons.chP];\n    // set all buttons to non focus\n    buttonsArray.forEach(function ( button ) { button.focus = false; });\n    if ( this.buttons.$focusItem && this.buttons.$focusItem.x !== undefined && !buttonsArray[this.buttons.$focusItem.x].disable ) {\n        buttonsArray[this.buttons.$focusItem.x].focus = true;\n    }\n\n    this.buttons.init({\n        propagate: true,\n        data: [buttonsArray]\n    });\n};\n\nPlayer.prototype.showPlayButton = function () {\n    var $buttonIcon = this.buttons.$links.playPause.$icon;\n\n    $buttonIcon.classList.remove('theme-icon-pause');\n    $buttonIcon.classList.add('theme-icon-play');\n\n};\n\nPlayer.prototype.showPauseButton = function () {\n    var $buttonIcon = this.buttons.$links.playPause.$icon;\n\n    $buttonIcon.classList.add('theme-icon-pause');\n    $buttonIcon.classList.remove('theme-icon-play');\n};\n\nPlayer.prototype.ui = {\n    DEFAULT_COLOR: '#165ACA'\n};\n\nPlayer.prototype.colorize = function ( color ) {\n    color = color || this.ui.DEFAULT_COLOR;\n\n    this.$body.style.backgroundColor = color;\n    this.progressBar.$value.style.backgroundColor = colorLuminance(color, 2.6);\n};\n\nfunction colorLuminance (hex, lum) { /*eslint-disable*/\n    var rgb = '#',\n        c, i;\n\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    lum = lum || 0;\n\n    // convert to decimal and change luminosity\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n        rgb += ('00' + c).substr(c.length);\n    }\n\n    return rgb;\n}\n\nmodule.exports = Player;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base progress bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial value\n * @param {number} [config.max=100] max progress value\n * @param {number} [config.min=0] min progress value\n */\nfunction ProgressBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Max progress value.\n     *\n     * @type {number}\n     */\n    this.max = 100;\n\n    /**\n     * Min progress value.\n     *\n     * @type {number}\n     */\n    this.min = 0;\n\n    /**\n     * Initial progress position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Value of the one percent step\n     *\n     * @type {number}\n     */\n    this.step = 1;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'progressBar ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert bar line\n    this.$value = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$value.className = 'value';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nProgressBar.prototype = Object.create(Component.prototype);\nProgressBar.prototype.constructor = ProgressBar;\n\n// set component name\nProgressBar.prototype.name = 'spa-component-progress-bar';\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when progress is end and passed value is more than max value.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/progress.bar~ProgressBar#done\n * @fires module:stb/ui/progress.bar~ProgressBar#change\n */\nProgressBar.prototype.set = function ( value ) {\n    var prevValue = this.value;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n    }\n\n    // value changed but in the given range\n    if ( this.value !== value && value <= this.max && value >= this.min ) {\n        // set new value\n        this.value = value;\n\n        // get value in percents\n        value = Math.abs(this.value - this.min) / this.step;\n\n        if ( value === 100 ) {\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set progress to its maximum value.\n                 *\n                 * @event module:stb/ui/progress.bar~ProgressBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set progress bar width\n        this.$value.style.width = value + '%';\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/progress.bar~ProgressBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous progress value\n             * @property {number} curr new/current progress value\n             */\n            this.emit('change', {curr: this.value, prev: prevValue});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Init or re-init current max or/and min or/and value.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nProgressBar.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set max progress value\n    if ( config.max !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.max) !== config.max ) {\n                throw new Error(__filename + ': config.max value must be a number');\n            }\n        }\n\n        // apply\n        this.max = config.max;\n    }\n\n    // set min progress value\n    if ( config.min !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.min) !== config.min ) {\n                throw new Error(__filename + ': config.min value must be a number');\n            }\n        }\n\n        // apply\n        this.min = config.min;\n    }\n\n    if ( DEVELOP ) {\n        if ( this.min >= this.max ) {\n            throw new Error(__filename + ': this.min value must be less than this.max');\n        }\n    }\n\n    // set actual progress value\n    if ( config.value !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.value) !== config.value ) {\n                throw new Error(__filename + ': config.value must be a number');\n            }\n            if ( config.value > this.max ) {\n                throw new Error(__filename + ': config.value more than config.maximum');\n            }\n            if ( config.value < this.min ) {\n                throw new Error(__filename + ': config.value less than config.minimum');\n            }\n        }\n\n        // apply\n        this.value = config.value;\n    }\n\n    this.step = Math.abs(this.max - this.min) / 100;\n\n    // init bar size, (this.min - this.value) - calculate distance from start\n    this.$value.style.width = (Math.abs(this.min - this.value) / this.step) + '%';\n};\n\n\n// public\nmodule.exports = ProgressBar;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/grid~Grid#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base grid/table implementation.\n *\n * For navigation map implementation and tests see {@link https://gist.github.com/DarkPark/8c0c2926bfa234043ed1}.\n *\n * Each data cell can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  colSpan | amount of cells to merge horizontally\n *  rowSpan | amount of cells to merge vertically\n *  mark    | is it necessary or not to render this cell as marked\n *  focus   | is it necessary or not to render this cell as focused\n *  disable | is it necessary or not to set this cell as disabled\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}] init parameters (all inherited from the parent)\n * @param {Array[]}  [config.data=[]] component data to visualize\n * @param {function} [config.render] method to build each grid cell content\n * @param {function} [config.navigate] method to move focus according to pressed keys\n * @param {boolean}  [config.cycleX=true] allow or not to jump to the opposite side of line when there is nowhere to go next\n * @param {boolean}  [config.cycleY=true] allow or not to jump to the opposite side of column when there is nowhere to go next\n * @param {Object}   [config.provider] data provider\n * @param {number}   [config.sizeX] grid columns count\n * @param {number}   [config.sizeX] grid rows count\n *\n * @fires module:stb/ui/grid~Grid#click:item\n *\n * @example\n * var Grid = require('stb/ui/grid'),\n *     grid = new Grid({\n *         data: [\n *             [1,   2,  3, {value: '4;8;12;16', focus: true, rowSpan: 4}],\n *             [5,   6,  7],\n *             [9,  10, 11],\n *             [13, 14, {value: 15, disable: true}]\n *         ],\n *         render: function ( $item, data ) {\n *             $item.innerHTML = '<div>' + (data.value) + '</div>';\n *         },\n *         cycleX: false\n *     });\n */\nfunction Grid ( config ) {\n    // current execution context\n    //var self = this;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        // if ( config.navigate && typeof config.navigate !== 'function' ) {\n        //     throw new Error(__filename + ': wrong config.navigate type');\n        // }\n    }\n\n    /**\n     * List of DOM elements representing the component cells.\n     * Necessary for navigation calculations.\n     *\n     * @type {Element[][]}\n     */\n    this.map = [];\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array[]}\n     */\n    this.data = [];\n\n    /**\n     * Allow or not to jump to the opposite side of line when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleX = true;\n\n    /**\n     * Allow or not to jump to the opposite side of column when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleY = true;\n\n    /**\n     * Current navigation map horizontal position.\n     *\n     * @type {number}\n     */\n    this.focusX = 0;\n\n    /**\n     * Current navigation map vertical position.\n     *\n     * @type {number}\n     */\n    this.focusY = 0;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'grid ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n    //    }\n    //});\n}\n\n\n// inheritance\nGrid.prototype = Object.create(Component.prototype);\nGrid.prototype.constructor = Grid;\n\n// set component name\nGrid.prototype.name = 'spa-component-grid';\n\n\n/**\n * Fill the given cell with data.\n * $item.data can contain the old data (from the previous render).\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nGrid.prototype.renderItemDefault = function ( $item, data ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n    }\n\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each grid cell content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nGrid.prototype.renderItem = Grid.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nGrid.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//Grid.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case keys.up:\n//        case keys.down:\n//        case keys.right:\n//        case keys.left:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case keys.ok:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//Grid.prototype.navigate = Grid.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary and add missing properties.\n *\n * @param {Array[]} data user 2-dimensional array\n * @return {Array[]} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idxY, idxX, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idxY = 0; idxY < data.length; idxY++ ) {\n        // cols\n        for ( idxX = 0; idxX < data[idxY].length; idxX++ ) {\n            // cell value\n            item = data[idxY][idxX];\n\n            // primitive value\n            if ( typeof item === 'object' ) {\n                // always at least one row/col\n                item.colSpan = item.colSpan || 1;\n                item.rowSpan = item.rowSpan || 1;\n            } else {\n                // wrap with defaults\n                item = data[idxY][idxX] = {\n                    value: data[idxY][idxX],\n                    colSpan: 1,\n                    rowSpan: 1\n                };\n            }\n\n            if ( DEVELOP ) {\n                // if ( !('value' in item) ) {\n                //     throw new Error(__filename + ': field \"value\" is missing');\n                // }\n                if ( Number(item.colSpan) !== item.colSpan ) {\n                    throw new Error(__filename + ': item.colSpan must be a number');\n                }\n                if ( Number(item.rowSpan) !== item.rowSpan ) {\n                    throw new Error(__filename + ': item.rowSpan must be a number');\n                }\n                if ( item.colSpan <= 0 ) {\n                    throw new Error(__filename + ': item.colSpan should be positive');\n                }\n                if ( item.rowSpan <= 0 ) {\n                    throw new Error(__filename + ': item.rowSpan should be positive');\n                }\n                if ( ('focus' in item) && Boolean(item.focus) !== item.focus ) {\n                    throw new Error(__filename + ': item.focus must be boolean');\n                }\n                if ( ('disable' in item) && Boolean(item.disable) !== item.disable ) {\n                    throw new Error(__filename + ': item.disable must be boolean');\n                }\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Fill the given rectangle area with value.\n *\n * @param {Array[]} map link to navigation map\n * @param {number} posX current horizontal position\n * @param {number} posY current vertical position\n * @param {number} dX amount of horizontal cell to fill\n * @param {number} dY amount of vertical cell to fill\n * @param {*} value filling data\n */\nfunction fill ( map, posX, posY, dX, dY, value ) {\n    var idxY, idxX;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 6 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(map) ) {\n            throw new Error(__filename + ': wrong map type');\n        }\n    }\n\n    // rows\n    for ( idxY = posY; idxY < posY + dY; idxY++ ) {\n        // expand map rows\n        if ( map.length < idxY + 1 ) { map.push([]); }\n\n        // compensate long columns from previous rows\n        while ( map[idxY][posX] !== undefined ) {\n            posX++;\n        }\n\n        // cols\n        for ( idxX = posX; idxX < posX + dX; idxX++ ) {\n            // expand map row cols\n            if ( map[idxY].length < idxX + 1 ) { map[idxY].push(); }\n            // fill\n            map[idxY][idxX] = value;\n            // apply coordinates for future mouse clicks\n            if ( value.x === undefined ) { value.x = idxX; }\n            if ( value.y === undefined ) { value.y = idxY; }\n        }\n    }\n}\n\n\n/**\n * Create a navigation map from incoming data.\n *\n * @param {Array[]} data user 2-dimensional array of objects\n * @return {Array[]} navigation map\n */\nfunction map ( data ) {\n    var result = [],\n        idxY, idxX, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idxY = 0; idxY < data.length; idxY++ ) {\n        // cols\n        for ( idxX = 0; idxX < data[idxY].length; idxX++ ) {\n            // cell value\n            item = data[idxY][idxX];\n            // process a cell\n            fill(result, idxX, idxY, item.colSpan, item.rowSpan, item.$item);\n            // clear redundant info\n            delete item.$item;\n        }\n    }\n\n    return result;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nGrid.prototype.init = function ( config ) {\n    var self = this,\n        draw = false,\n        idxY, idxX,\n        $row, $item, $tbody, $focusItem,\n        itemData, newData,\n        /**\n         * Cell mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/grid~Grid#click:item\n         */\n        onItemClick = function ( event ) {\n            // allow to accept focus\n            if ( this.data.disable !== true ) {\n                // visualize\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        /**\n         * Construct grid when receive new data\n         *\n         * @param {Array} data to render\n         */\n        construct = function ( data ) {\n\n            // apply data\n            if ( data ) {\n                // new data is different\n                if ( self.data !== data ) {\n                    // apply\n                    self.data = data;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            // custom render method\n            if ( config.render ) {\n                // new render is different\n                if ( self.renderItem !== config.render ) {\n                    // apply\n                    self.renderItem = config.render;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            if ( !draw ) {\n                // do not redraw table\n                return;\n            }\n\n            // export pointer to inner table\n            self.$table = document.createElement('table');\n            $tbody = document.createElement('tbody');\n\n            // prepare user data\n            self.data = normalize(self.data);\n\n            // rows\n            for ( idxY = 0; idxY < self.data.length; idxY++ ) {\n                // dom\n                $row = $tbody.insertRow();\n\n                // cols\n                for ( idxX = 0; idxX < self.data[idxY].length; idxX++ ) {\n                    // dom\n                    $item = $row.insertCell(-1);\n                    // additional params\n                    $item.className = 'item';\n\n                    // shortcut\n                    itemData = self.data[idxY][idxX];\n\n                    // for map\n                    itemData.$item = $item;\n\n                    // merge columns\n                    $item.colSpan = itemData.colSpan;\n\n                    // merge rows\n                    $item.rowSpan = itemData.rowSpan;\n\n                    // active cell\n                    if ( itemData.focus ) {\n                        // store and clean\n                        $focusItem = $item;\n                    }\n\n                    // disabled cell\n                    if ( itemData.disable ) {\n                        // apply CSS\n                        $item.classList.add('disable');\n                    }\n\n                    // marked cell\n                    if ( itemData.mark ) {\n                        // apply CSS\n                        $item.classList.add('mark');\n                    }\n\n                    // visualize\n                    self.renderItem($item, itemData);\n\n                    // save data link\n                    $item.data = itemData;\n\n                    // manual focusing\n                    $item.addEventListener('click', onItemClick);\n                }\n                // row is ready\n                $tbody.appendChild($row);\n            }\n\n            // navigation map filling\n            self.map = map(self.data);\n\n            // clear all table\n            self.$body.innerText = null;\n\n            // everything is ready\n            self.$table.appendChild($tbody);\n            self.$body.appendChild(self.$table);\n\n            // apply focus\n            if ( $focusItem ) {\n                // focus item was given in data\n                self.focusItem($focusItem);\n            } else {\n                // just the first cell\n                self.focusItem(self.map[0][0]);\n            }\n        };\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.data && (!Array.isArray(config.data) || !Array.isArray(config.data[0])) ) {\n            throw new Error(__filename + ': wrong config.data type');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycleX !== undefined ) {\n        this.cycleX = config.cycleX;\n    }\n    if ( config.cycleY !== undefined ) {\n        this.cycleY = config.cycleY;\n    }\n\n\n    if ( config.provider ) {\n        if ( DEVELOP ) {\n            if ( !config.sizeX || !config.sizeY ) {\n                throw new Error(__filename + ': wrong grid data size');\n            }\n        }\n\n        this.provider = config.provider;\n        this.sizeX = config.sizeX;\n        this.sizeY = config.sizeY;\n    }\n\n    if ( config.translate ) {\n        this.translate = config.translate;\n    }\n\n    if ( config.provider ) {\n        newData = this.provider.get(null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/grid~Grid#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            }\n            construct(self.translate(data));\n\n            if ( self.events['data:ready'] ) {\n                /**\n                 * Provider get new data and reinit grid\n                 *\n                 * @event module:stb/ui/grid~Grid#data:ready\n                 */\n                self.emit('data:ready');\n            }\n        });\n\n        if ( this.events['data:get'] ) {\n            /**\n             * Provider request new data\n             *\n             * @event module:stb/ui/grid~Grid#data:get\n             *\n             * @type {Object}\n             * @property {boolean} fresh status of data to response\n             */\n            this.emit('data:get', {fresh: newData});\n        }\n    } else {\n        construct(config.data);\n    }\n\n\n};\n\n/**\n * Default translate function\n *\n * @param {Array} data to translate\n * @return {Array} data to use as grid data\n */\nGrid.prototype.defaultTranslate = function ( data ) {\n    var result = [],\n        idxY, idxX, arr;\n\n    for ( idxY = 0; idxY < this.sizeY; idxY++ ) {\n        arr = [];\n        for ( idxX = 0; idxX < this.sizeX; idxX++ ) {\n            arr[idxX] = data[idxY * this.sizeX + idxX];\n        }\n        result[idxY] = arr;\n    }\n\n    return result;\n};\n\n\n/**\n * Method to translate given array to array adapted to use as grid data\n * Can be redefined to provide custom translate.\n *\n * @type {function}\n */\nGrid.prototype.translate = Grid.prototype.defaultTranslate;\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/grid~Grid#cycle\n * @fires module:stb/ui/grid~Grid#overflow\n * @fires module:stb/ui/grid~Grid#data:get\n * @fires module:stb/ui/grid~Grid#data:ready\n * @fires module:stb/ui/grid~Grid#data:error\n */\nGrid.prototype.move = function ( direction ) {\n    var focusX   = this.focusX,\n        focusY   = this.focusY,\n        move     = true,\n        overflow = false,\n        cycle    = false,\n        newData;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // shift till full stop\n    while ( move ) {\n        // arrow keys\n        switch ( direction ) {\n            case keys.up:\n                if ( focusY > 0 ) {\n                    // can go one step up\n                    focusY--;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the last row\n                        focusY = this.map.length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.down:\n                if ( focusY < this.map.length - 1 ) {\n                    // can go one step down\n                    focusY++;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the first row\n                        focusY = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.right:\n                if ( focusX < this.map[focusY].length - 1 ) {\n                    // can go one step right\n                    focusX++;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the first column\n                        focusX = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.left:\n                if ( focusX > 0 ) {\n                    // can go one step left\n                    focusX--;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the last column\n                        focusX = this.map[focusY].length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n\n                }\n                break;\n        }\n\n        // full cycle - has come to the start point\n        if ( focusX === this.focusX && focusY === this.focusY ) {\n            // full stop\n            move = false;\n        }\n\n        // focus item has changed and it's not disabled\n        if ( this.map[focusY][focusX] !== this.map[this.focusY][this.focusX] && this.map[focusY][focusX].data.disable !== true ) {\n            // full stop\n            move = false;\n        }\n\n        // the last cell in a row/col\n        if ( overflow ) {\n            // full stop\n            move = false;\n            // but it's disabled so need to go back\n            if ( this.map[focusY][focusX].data.disable === true ) {\n                // return to the start point\n                focusX = this.focusX;\n                focusY = this.focusY;\n            }\n        }\n    }\n\n    this.focusItem(this.map[focusY][focusX]);\n\n    // correct coordinates\n    // focusItem set approximate values\n    this.focusX = focusX;\n    this.focusY = focusY;\n\n    if ( overflow ) {\n        //\n        if ( this.provider ) {\n            newData = this.provider.get(direction, function ( error, data ) {\n                var  idxY, idxX;\n\n                if ( error ) {\n\n                    if ( self.events['data:error'] ) {\n                        /**\n                         * Provider get error while take new data\n                         *\n                         * @event module:stb/ui/grid~Grid#data:error\n                         */\n                        self.emit('data:error', error);\n\n                        return;\n                    }\n                }\n\n                if ( data ) {\n                    self.data = self.translate(data);\n                    for ( idxY = 0; idxY < self.sizeY - 1; idxY++ ) {\n                        for ( idxX = 0; idxX < self.sizeX; idxX++ ) {\n                            self.renderItem(self.map[idxY][idxX], self.data[idxY][idxX]);\n                        }\n                    }\n\n                    if ( self.events['data:ready'] ) {\n                        /**\n                         * Provider get new data and reinit grid\n                         *\n                         * @event module:stb/ui/grid~Grid#data:ready\n                         */\n                        self.emit('data:ready');\n                    }\n                }\n\n            });\n\n            if ( this.events['data:get'] ) {\n                /**\n                 * Provider request new data\n                 *\n                 * @event module:stb/ui/grid~Grid#data:get\n                 *\n                 * @type {Object}\n                 * @property {boolean} fresh status of data to response\n                 */\n                this.emit('data:get', {fresh: newData});\n            }\n        }\n\n        // there are some listeners\n        if ( this.events['overflow'] ) {\n            /**\n             * Attempt to go beyond the edge of the grid.\n             *\n             * @event module:stb/ui/grid~Grid#overflow\n             *\n             * @type {Object}\n             * @property {number} direction key code initiator of movement\n             * @property {number} cycle ...\n             */\n            this.emit('overflow', {direction: direction, cycle: cycle});\n        }\n    }\n\n    // report\n    debug.info(this.focusX + ' : ' + focusX, 'X old/new');\n    debug.info(this.focusY + ' : ' + focusY, 'Y old/new');\n    debug.info(cycle, 'cycle');\n    debug.info(overflow, 'overflow');\n\n\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item.\n *\n * @param {Node|Element} $item element to focus\n * @param {number} $item.x the item horizontal position\n * @param {number} $item.y the item vertical position\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/grid~Grid#focus:item\n * @fires module:stb/ui/grid~Grid#blur:item\n */\nGrid.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item && $item.data.disable !== true ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/grid~Grid#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n\n        // draft coordinates\n        this.focusX = $item.x;\n        this.focusY = $item.y;\n\n        // reassign\n        this.$focusItem = $item;\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to an element.\n             *\n             * @event module:stb/ui/grid~Grid#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nGrid.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = Grid;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar map = {\n    'ch-': 'theme-icon-channel-minus channels',\n    'ch+': 'theme-icon-channel-plus channels',\n    prev: 'theme-icon-previous',\n    rewind: 'theme-icon-rewind',\n    playPause: 'theme-icon-pause',\n    forward: 'theme-icon-forward',\n    next: 'theme-icon-next'\n};\n\nmodule.exports = function ( $item, data ) {\n    var $wrapper = document.createElement('div'),\n        $buttonIcon = document.createElement('div');\n\n    $item.innerHTML = '';\n\n\n    $wrapper.className = 'button';\n    $buttonIcon.className = 'theme-icon ' + ( map[data.icon] || '' );\n    $wrapper.appendChild($buttonIcon);\n    $item.appendChild($wrapper);\n    $item.$icon = $buttonIcon;\n\n    if ( this.$links ) {\n        this.$links[data.icon] = $item;\n    }\n\n    if ( !data.disable ) {\n        this.enabledCount++;\n    }\n\n    $item.data = data;\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/*eslint no-path-concat:0*/\nvar LayoutList = require('mag-component-layout-list');\n\n/**\n * Convert data to layout list format\n *\n * @param {Array} data - data to convert\n * @return {Array} converted data\n */\nfunction normalize ( data ) {\n    var result = [],\n        index;\n\n    if ( DEVELOP ) {\n        if ( !Array.isArray(data) ) { throw new Error(__filename + ': wrong data type'); }\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        result.push({\n            click: data[index].click,\n            items: [\n                {\n                    className: data[index].icon\n                },\n                {\n                    className: 'title',\n                    value: data[index].title\n                }\n            ]\n        });\n    }\n\n    return result;\n}\n\n\n/**\n * Graphite horizontal menu implementation\n *\n * @extends LayoutList\n *\n * @param {Object} config - config object\n * @constructor\n */\nfunction Menu ( config ) {\n    config = config || {};\n\n    config.type = LayoutList.prototype.TYPE_HORIZONTAL;\n\n    config.data = normalize(config.data);\n\n    config.className = 'horizontalMenu ' + (config.className || '');\n\n    LayoutList.call(this, config);\n}\n\nMenu.prototype = Object.create(LayoutList.prototype);\nMenu.prototype.constructor = Menu;\n\n\nMenu.prototype.init = function ( config ) {\n    config = config || {};\n    config.data = normalize(config.data);\n    LayoutList.prototype.init.call(this, config);\n};\n\n\nmodule.exports = Menu;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","module.exports = [\n    {\"name\":\"Abkhaz\", \"local\":\"Аҧсуа\", \"1\":\"ab\", \"2\":\"abk\", \"2T\":\"abk\", \"2B\":\"abk\", \"3\":\"abk\"},\n    {\"name\":\"Afar\", \"local\":\"Afaraf\", \"1\":\"aa\", \"2\":\"aar\", \"2T\":\"aar\", \"2B\":\"aar\", \"3\":\"aar\"},\n    {\"name\":\"Afrikaans\", \"local\":\"Afrikaans\", \"1\":\"af\", \"2\":\"afr\", \"2T\":\"afr\", \"2B\":\"afr\", \"3\":\"afr\"},\n    {\"name\":\"Akan\", \"local\":\"Akan\", \"1\":\"ak\", \"2\":\"aka\", \"2T\":\"aka\", \"2B\":\"aka\", \"3\":\"aka\"},\n    {\"name\":\"Albanian\", \"local\":\"Shqip\", \"1\":\"sq\", \"2\":\"sqi\", \"2T\":\"sqi\", \"2B\":\"alb\", \"3\":\"sqi\"},\n    {\"name\":\"Amharic\", \"local\":\"አማርኛ\", \"1\":\"am\", \"2\":\"amh\", \"2T\":\"amh\", \"2B\":\"amh\", \"3\":\"amh\"},\n    {\"name\":\"Arabic\", \"local\":\"العربية\", \"1\":\"ar\", \"2\":\"ara\", \"2T\":\"ara\", \"2B\":\"ara\", \"3\":\"ara\"},\n    {\"name\":\"Aragonese\", \"local\":\"Aragonés\", \"1\":\"an\", \"2\":\"arg\", \"2T\":\"arg\", \"2B\":\"arg\", \"3\":\"arg\"},\n    {\"name\":\"Armenian\", \"local\":\"Հայերեն\", \"1\":\"hy\", \"2\":\"hye\", \"2T\":\"hye\", \"2B\":\"arm\", \"3\":\"hye\"},\n    {\"name\":\"Assamese\", \"local\":\"অসমীয়া\", \"1\":\"as\", \"2\":\"asm\", \"2T\":\"asm\", \"2B\":\"asm\", \"3\":\"asm\"},\n    {\"name\":\"Avaric\", \"local\":\"Авар\", \"1\":\"av\", \"2\":\"ava\", \"2T\":\"ava\", \"2B\":\"ava\", \"3\":\"ava\"},\n    {\"name\":\"Avestan\", \"local\":\"avesta\", \"1\":\"ae\", \"2\":\"ave\", \"2T\":\"ave\", \"2B\":\"ave\", \"3\":\"ave\"},\n    {\"name\":\"Aymara\", \"local\":\"Aymar\", \"1\":\"ay\", \"2\":\"aym\", \"2T\":\"aym\", \"2B\":\"aym\", \"3\":\"aym\"},\n    {\"name\":\"Azerbaijani\", \"local\":\"Azərbaycanca\", \"1\":\"az\", \"2\":\"aze\", \"2T\":\"aze\", \"2B\":\"aze\", \"3\":\"aze\"},\n    {\"name\":\"Bambara\", \"local\":\"Bamanankan\", \"1\":\"bm\", \"2\":\"bam\", \"2T\":\"bam\", \"2B\":\"bam\", \"3\":\"bam\"},\n    {\"name\":\"Bashkir\", \"local\":\"Башҡортса\", \"1\":\"ba\", \"2\":\"bak\", \"2T\":\"bak\", \"2B\":\"bak\", \"3\":\"bak\"},\n    {\"name\":\"Basque\", \"local\":\"Euskara\", \"1\":\"eu\", \"2\":\"eus\", \"2T\":\"eus\", \"2B\":\"baq\", \"3\":\"eus\"},\n    {\"name\":\"Belarusian\", \"local\":\"Беларуская\", \"1\":\"be\", \"2\":\"bel\", \"2T\":\"bel\", \"2B\":\"bel\", \"3\":\"bel\"},\n    {\"name\":\"Bengali\", \"local\":\"বাংলা\", \"1\":\"bn\", \"2\":\"ben\", \"2T\":\"ben\", \"2B\":\"ben\", \"3\":\"ben\"},\n    {\"name\":\"Bihari\", \"local\":\"भोजपुरी\", \"1\":\"bh\", \"2\":\"bih\", \"2T\":\"bih\", \"2B\":\"bih\", \"3\":\"bih\"},\n    {\"name\":\"Bislama\", \"local\":\"Bislama\", \"1\":\"bi\", \"2\":\"bis\", \"2T\":\"bis\", \"2B\":\"bis\", \"3\":\"bis\"},\n    {\"name\":\"Bosnian\", \"local\":\"Bosanski\", \"1\":\"bs\", \"2\":\"bos\", \"2T\":\"bos\", \"2B\":\"bos\", \"3\":\"bos\"},\n    {\"name\":\"Breton\", \"local\":\"Brezhoneg\", \"1\":\"br\", \"2\":\"bre\", \"2T\":\"bre\", \"2B\":\"bre\", \"3\":\"bre\"},\n    {\"name\":\"Bulgarian\", \"local\":\"Български\", \"1\":\"bg\", \"2\":\"bul\", \"2T\":\"bul\", \"2B\":\"bul\", \"3\":\"bul\"},\n    {\"name\":\"Burmese\", \"local\":\"မြန်မာဘာသာ\", \"1\":\"my\", \"2\":\"mya\", \"2T\":\"mya\", \"2B\":\"bur\", \"3\":\"mya\"},\n    {\"name\":\"Catalan\", \"local\":\"Català\", \"1\":\"ca\", \"2\":\"cat\", \"2T\":\"cat\", \"2B\":\"cat\", \"3\":\"cat\"},\n    {\"name\":\"Chamorro\", \"local\":\"Chamoru\", \"1\":\"ch\", \"2\":\"cha\", \"2T\":\"cha\", \"2B\":\"cha\", \"3\":\"cha\"},\n    {\"name\":\"Chechen\", \"local\":\"Нохчийн\", \"1\":\"ce\", \"2\":\"che\", \"2T\":\"che\", \"2B\":\"che\", \"3\":\"che\"},\n    {\"name\":\"Chichewa\", \"local\":\"Chichewa\", \"1\":\"ny\", \"2\":\"nya\", \"2T\":\"nya\", \"2B\":\"nya\", \"3\":\"nya\"},\n    {\"name\":\"Chinese\", \"local\":\"中文\", \"1\":\"zh\", \"2\":\"zho\", \"2T\":\"zho\", \"2B\":\"chi\", \"3\":\"zho\"},\n    {\"name\":\"Chuvash\", \"local\":\"Чӑвашла\", \"1\":\"cv\", \"2\":\"chv\", \"2T\":\"chv\", \"2B\":\"chv\", \"3\":\"chv\"},\n    {\"name\":\"Cornish\", \"local\":\"Kernewek\", \"1\":\"kw\", \"2\":\"cor\", \"2T\":\"cor\", \"2B\":\"cor\", \"3\":\"cor\"},\n    {\"name\":\"Corsican\", \"local\":\"Corsu\", \"1\":\"co\", \"2\":\"cos\", \"2T\":\"cos\", \"2B\":\"cos\", \"3\":\"cos\"},\n    {\"name\":\"Cree\", \"local\":\"ᓀᐦᐃᔭᐍᐏᐣ\", \"1\":\"cr\", \"2\":\"cre\", \"2T\":\"cre\", \"2B\":\"cre\", \"3\":\"cre\"},\n    {\"name\":\"Croatian\", \"local\":\"Hrvatski\", \"1\":\"hr\", \"2\":\"hrv\", \"2T\":\"hrv\", \"2B\":\"hrv\", \"3\":\"hrv\"},\n    {\"name\":\"Czech\", \"local\":\"Čeština\", \"1\":\"cs\", \"2\":\"ces\", \"2T\":\"ces\", \"2B\":\"cze\", \"3\":\"ces\"},\n    {\"name\":\"Danish\", \"local\":\"Dansk\", \"1\":\"da\", \"2\":\"dan\", \"2T\":\"dan\", \"2B\":\"dan\", \"3\":\"dan\"},\n    {\"name\":\"Divehi\", \"local\":\"Divehi\", \"1\":\"dv\", \"2\":\"div\", \"2T\":\"div\", \"2B\":\"div\", \"3\":\"div\"},\n    {\"name\":\"Dutch\", \"local\":\"Nederlands\", \"1\":\"nl\", \"2\":\"nld\", \"2T\":\"nld\", \"2B\":\"dut\", \"3\":\"nld\"},\n    {\"name\":\"Dzongkha\", \"local\":\"རྫོང་ཁ\", \"1\":\"dz\", \"2\":\"dzo\", \"2T\":\"dzo\", \"2B\":\"dzo\", \"3\":\"dzo\"},\n    {\"name\":\"English\", \"local\":\"English\", \"1\":\"en\", \"2\":\"eng\", \"2T\":\"eng\", \"2B\":\"eng\", \"3\":\"eng\"},\n    {\"name\":\"Esperanto\", \"local\":\"Esperanto\", \"1\":\"eo\", \"2\":\"epo\", \"2T\":\"epo\", \"2B\":\"epo\", \"3\":\"epo\"},\n    {\"name\":\"Estonian\", \"local\":\"Eesti\", \"1\":\"et\", \"2\":\"est\", \"2T\":\"est\", \"2B\":\"est\", \"3\":\"est\"},\n    {\"name\":\"Ewe\", \"local\":\"Eʋegbe\", \"1\":\"ee\", \"2\":\"ewe\", \"2T\":\"ewe\", \"2B\":\"ewe\", \"3\":\"ewe\"},\n    {\"name\":\"Faroese\", \"local\":\"Føroyskt\", \"1\":\"fo\", \"2\":\"fao\", \"2T\":\"fao\", \"2B\":\"fao\", \"3\":\"fao\"},\n    {\"name\":\"Fijian\", \"local\":\"Na Vosa Vaka-Viti\", \"1\":\"fj\", \"2\":\"fij\", \"2T\":\"fij\", \"2B\":\"fij\", \"3\":\"fij\"},\n    {\"name\":\"Finnish\", \"local\":\"Suomi\", \"1\":\"fi\", \"2\":\"fin\", \"2T\":\"fin\", \"2B\":\"fin\", \"3\":\"fin\"},\n    {\"name\":\"French\", \"local\":\"Français\", \"1\":\"fr\", \"2\":\"fra\", \"2T\":\"fra\", \"2B\":\"fre\", \"3\":\"fra\"},\n    {\"name\":\"Fula\", \"local\":\"Fulfulde\", \"1\":\"ff\", \"2\":\"ful\", \"2T\":\"ful\", \"2B\":\"ful\", \"3\":\"ful\"},\n    {\"name\":\"Galician\", \"local\":\"Galego\", \"1\":\"gl\", \"2\":\"glg\", \"2T\":\"glg\", \"2B\":\"glg\", \"3\":\"glg\"},\n    {\"name\":\"Georgian\", \"local\":\"ქართული\", \"1\":\"ka\", \"2\":\"kat\", \"2T\":\"kat\", \"2B\":\"geo\", \"3\":\"kat\"},\n    {\"name\":\"German\", \"local\":\"Deutsch\", \"1\":\"de\", \"2\":\"deu\", \"2T\":\"deu\", \"2B\":\"ger\", \"3\":\"deu\"},\n    {\"name\":\"Greek\", \"local\":\"Ελληνικά\", \"1\":\"el\", \"2\":\"ell\", \"2T\":\"ell\", \"2B\":\"gre\", \"3\":\"ell\"},\n    {\"name\":\"Guaraní\", \"local\":\"Avañe'ẽ\", \"1\":\"gn\", \"2\":\"grn\", \"2T\":\"grn\", \"2B\":\"grn\", \"3\":\"grn\"},\n    {\"name\":\"Gujarati\", \"local\":\"ગુજરાતી\", \"1\":\"gu\", \"2\":\"guj\", \"2T\":\"guj\", \"2B\":\"guj\", \"3\":\"guj\"},\n    {\"name\":\"Haitian\", \"local\":\"Kreyòl Ayisyen\", \"1\":\"ht\", \"2\":\"hat\", \"2T\":\"hat\", \"2B\":\"hat\", \"3\":\"hat\"},\n    {\"name\":\"Hausa\", \"local\":\"هَوُسَ\", \"1\":\"ha\", \"2\":\"hau\", \"2T\":\"hau\", \"2B\":\"hau\", \"3\":\"hau\"},\n    {\"name\":\"Hebrew\", \"local\":\"עברית\", \"1\":\"he\", \"2\":\"heb\", \"2T\":\"heb\", \"2B\":\"heb\", \"3\":\"heb\"},\n    {\"name\":\"Herero\", \"local\":\"Otjiherero\", \"1\":\"hz\", \"2\":\"her\", \"2T\":\"her\", \"2B\":\"her\", \"3\":\"her\"},\n    {\"name\":\"Hindi\", \"local\":\"हिन्दी\", \"1\":\"hi\", \"2\":\"hin\", \"2T\":\"hin\", \"2B\":\"hin\", \"3\":\"hin\"},\n    {\"name\":\"Hiri Motu\", \"local\":\"Hiri Motu\", \"1\":\"ho\", \"2\":\"hmo\", \"2T\":\"hmo\", \"2B\":\"hmo\", \"3\":\"hmo\"},\n    {\"name\":\"Hungarian\", \"local\":\"Magyar\", \"1\":\"hu\", \"2\":\"hun\", \"2T\":\"hun\", \"2B\":\"hun\", \"3\":\"hun\"},\n    {\"name\":\"Interlingua\", \"local\":\"Interlingua\", \"1\":\"ia\", \"2\":\"ina\", \"2T\":\"ina\", \"2B\":\"ina\", \"3\":\"ina\"},\n    {\"name\":\"Indonesian\", \"local\":\"Bahasa Indonesia\", \"1\":\"id\", \"2\":\"ind\", \"2T\":\"ind\", \"2B\":\"ind\", \"3\":\"ind\"},\n    {\"name\":\"Interlingue\", \"local\":\"Interlingue\", \"1\":\"ie\", \"2\":\"ile\", \"2T\":\"ile\", \"2B\":\"ile\", \"3\":\"ile\"},\n    {\"name\":\"Irish\", \"local\":\"Gaeilge\", \"1\":\"ga\", \"2\":\"gle\", \"2T\":\"gle\", \"2B\":\"gle\", \"3\":\"gle\"},\n    {\"name\":\"Igbo\", \"local\":\"Igbo\", \"1\":\"ig\", \"2\":\"ibo\", \"2T\":\"ibo\", \"2B\":\"ibo\", \"3\":\"ibo\"},\n    {\"name\":\"Inupiaq\", \"local\":\"Iñupiak\", \"1\":\"ik\", \"2\":\"ipk\", \"2T\":\"ipk\", \"2B\":\"ipk\", \"3\":\"ipk\"},\n    {\"name\":\"Ido\", \"local\":\"Ido\", \"1\":\"io\", \"2\":\"ido\", \"2T\":\"ido\", \"2B\":\"ido\", \"3\":\"ido\"},\n    {\"name\":\"Icelandic\", \"local\":\"Íslenska\", \"1\":\"is\", \"2\":\"isl\", \"2T\":\"isl\", \"2B\":\"ice\", \"3\":\"isl\"},\n    {\"name\":\"Italian\", \"local\":\"Italiano\", \"1\":\"it\", \"2\":\"ita\", \"2T\":\"ita\", \"2B\":\"ita\", \"3\":\"ita\"},\n    {\"name\":\"Inuktitut\", \"local\":\"ᐃᓄᒃᑎᑐᑦ\", \"1\":\"iu\", \"2\":\"iku\", \"2T\":\"iku\", \"2B\":\"iku\", \"3\":\"iku\"},\n    {\"name\":\"Japanese\", \"local\":\"日本語\", \"1\":\"ja\", \"2\":\"jpn\", \"2T\":\"jpn\", \"2B\":\"jpn\", \"3\":\"jpn\"},\n    {\"name\":\"Javanese\", \"local\":\"Basa Jawa\", \"1\":\"jv\", \"2\":\"jav\", \"2T\":\"jav\", \"2B\":\"jav\", \"3\":\"jav\"},\n    {\"name\":\"Kalaallisut\", \"local\":\"Kalaallisut\", \"1\":\"kl\", \"2\":\"kal\", \"2T\":\"kal\", \"2B\":\"kal\", \"3\":\"kal\"},\n    {\"name\":\"Kannada\", \"local\":\"ಕನ್ನಡ\", \"1\":\"kn\", \"2\":\"kan\", \"2T\":\"kan\", \"2B\":\"kan\", \"3\":\"kan\"},\n    {\"name\":\"Kanuri\", \"local\":\"Kanuri\", \"1\":\"kr\", \"2\":\"kau\", \"2T\":\"kau\", \"2B\":\"kau\", \"3\":\"kau\"},\n    {\"name\":\"Kashmiri\", \"local\":\"كشميري\", \"1\":\"ks\", \"2\":\"kas\", \"2T\":\"kas\", \"2B\":\"kas\", \"3\":\"kas\"},\n    {\"name\":\"Kazakh\", \"local\":\"Қазақша\", \"1\":\"kk\", \"2\":\"kaz\", \"2T\":\"kaz\", \"2B\":\"kaz\", \"3\":\"kaz\"},\n    {\"name\":\"Khmer\", \"local\":\"ភាសាខ្មែរ\", \"1\":\"km\", \"2\":\"khm\", \"2T\":\"khm\", \"2B\":\"khm\", \"3\":\"khm\"},\n    {\"name\":\"Kikuyu\", \"local\":\"Gĩkũyũ\", \"1\":\"ki\", \"2\":\"kik\", \"2T\":\"kik\", \"2B\":\"kik\", \"3\":\"kik\"},\n    {\"name\":\"Kinyarwanda\", \"local\":\"Kinyarwanda\", \"1\":\"rw\", \"2\":\"kin\", \"2T\":\"kin\", \"2B\":\"kin\", \"3\":\"kin\"},\n    {\"name\":\"Kyrgyz\", \"local\":\"Кыргызча\", \"1\":\"ky\", \"2\":\"kir\", \"2T\":\"kir\", \"2B\":\"kir\", \"3\":\"kir\"},\n    {\"name\":\"Komi\", \"local\":\"Коми\", \"1\":\"kv\", \"2\":\"kom\", \"2T\":\"kom\", \"2B\":\"kom\", \"3\":\"kom\"},\n    {\"name\":\"Kongo\", \"local\":\"Kongo\", \"1\":\"kg\", \"2\":\"kon\", \"2T\":\"kon\", \"2B\":\"kon\", \"3\":\"kon\"},\n    {\"name\":\"Korean\", \"local\":\"한국어\", \"1\":\"ko\", \"2\":\"kor\", \"2T\":\"kor\", \"2B\":\"kor\", \"3\":\"kor\"},\n    {\"name\":\"Kurdish\", \"local\":\"Kurdî\", \"1\":\"ku\", \"2\":\"kur\", \"2T\":\"kur\", \"2B\":\"kur\", \"3\":\"kur\"},\n    {\"name\":\"Kwanyama\", \"local\":\"Kuanyama\", \"1\":\"kj\", \"2\":\"kua\", \"2T\":\"kua\", \"2B\":\"kua\", \"3\":\"kua\"},\n    {\"name\":\"Latin\", \"local\":\"Latina\", \"1\":\"la\", \"2\":\"lat\", \"2T\":\"lat\", \"2B\":\"lat\", \"3\":\"lat\"},\n    {\"name\":\"Luxembourgish\", \"local\":\"Lëtzebuergesch\", \"1\":\"lb\", \"2\":\"ltz\", \"2T\":\"ltz\", \"2B\":\"ltz\", \"3\":\"ltz\"},\n    {\"name\":\"Ganda\", \"local\":\"Luganda\", \"1\":\"lg\", \"2\":\"lug\", \"2T\":\"lug\", \"2B\":\"lug\", \"3\":\"lug\"},\n    {\"name\":\"Limburgish\", \"local\":\"Limburgs\", \"1\":\"li\", \"2\":\"lim\", \"2T\":\"lim\", \"2B\":\"lim\", \"3\":\"lim\"},\n    {\"name\":\"Lingala\", \"local\":\"Lingála\", \"1\":\"ln\", \"2\":\"lin\", \"2T\":\"lin\", \"2B\":\"lin\", \"3\":\"lin\"},\n    {\"name\":\"Lao\", \"local\":\"ພາສາລາວ\", \"1\":\"lo\", \"2\":\"lao\", \"2T\":\"lao\", \"2B\":\"lao\", \"3\":\"lao\"},\n    {\"name\":\"Lithuanian\", \"local\":\"Lietuvių\", \"1\":\"lt\", \"2\":\"lit\", \"2T\":\"lit\", \"2B\":\"lit\", \"3\":\"lit\"},\n    {\"name\":\"Luba-Katanga\", \"local\":\"Tshiluba\", \"1\":\"lu\", \"2\":\"lub\", \"2T\":\"lub\", \"2B\":\"lub\", \"3\":\"lub\"},\n    {\"name\":\"Latvian\", \"local\":\"Latviešu\", \"1\":\"lv\", \"2\":\"lav\", \"2T\":\"lav\", \"2B\":\"lav\", \"3\":\"lav\"},\n    {\"name\":\"Manx\", \"local\":\"Gaelg\", \"1\":\"gv\", \"2\":\"glv\", \"2T\":\"glv\", \"2B\":\"glv\", \"3\":\"glv\"},\n    {\"name\":\"Macedonian\", \"local\":\"Македонски\", \"1\":\"mk\", \"2\":\"mkd\", \"2T\":\"mkd\", \"2B\":\"mac\", \"3\":\"mkd\"},\n    {\"name\":\"Malagasy\", \"local\":\"Malagasy\", \"1\":\"mg\", \"2\":\"mlg\", \"2T\":\"mlg\", \"2B\":\"mlg\", \"3\":\"mlg\"},\n    {\"name\":\"Malay\", \"local\":\"Bahasa Melayu\", \"1\":\"ms\", \"2\":\"msa\", \"2T\":\"msa\", \"2B\":\"may\", \"3\":\"msa\"},\n    {\"name\":\"Malayalam\", \"local\":\"മലയാളം\", \"1\":\"ml\", \"2\":\"mal\", \"2T\":\"mal\", \"2B\":\"mal\", \"3\":\"mal\"},\n    {\"name\":\"Maltese\", \"local\":\"Malti\", \"1\":\"mt\", \"2\":\"mlt\", \"2T\":\"mlt\", \"2B\":\"mlt\", \"3\":\"mlt\"},\n    {\"name\":\"Māori\", \"local\":\"Māori\", \"1\":\"mi\", \"2\":\"mri\", \"2T\":\"mri\", \"2B\":\"mao\", \"3\":\"mri\"},\n    {\"name\":\"Marathi\", \"local\":\"मराठी\", \"1\":\"mr\", \"2\":\"mar\", \"2T\":\"mar\", \"2B\":\"mar\", \"3\":\"mar\"},\n    {\"name\":\"Marshallese\", \"local\":\"Kajin M̧ajeļ\", \"1\":\"mh\", \"2\":\"mah\", \"2T\":\"mah\", \"2B\":\"mah\", \"3\":\"mah\"},\n    {\"name\":\"Mongolian\", \"local\":\"Монгол\", \"1\":\"mn\", \"2\":\"mon\", \"2T\":\"mon\", \"2B\":\"mon\", \"3\":\"mon\"},\n    {\"name\":\"Nauru\", \"local\":\"Dorerin Naoero\", \"1\":\"na\", \"2\":\"nau\", \"2T\":\"nau\", \"2B\":\"nau\", \"3\":\"nau\"},\n    {\"name\":\"Navajo\", \"local\":\"Diné Bizaad\", \"1\":\"nv\", \"2\":\"nav\", \"2T\":\"nav\", \"2B\":\"nav\", \"3\":\"nav\"},\n    {\"name\":\"Northern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nd\", \"2\":\"nde\", \"2T\":\"nde\", \"2B\":\"nde\", \"3\":\"nde\"},\n    {\"name\":\"Nepali\", \"local\":\"नेपाली\", \"1\":\"ne\", \"2\":\"nep\", \"2T\":\"nep\", \"2B\":\"nep\", \"3\":\"nep\"},\n    {\"name\":\"Ndonga\", \"local\":\"Owambo\", \"1\":\"ng\", \"2\":\"ndo\", \"2T\":\"ndo\", \"2B\":\"ndo\", \"3\":\"ndo\"},\n    {\"name\":\"Norwegian Bokmål\", \"local\":\"Norsk (Bokmål)\", \"1\":\"nb\", \"2\":\"nob\", \"2T\":\"nob\", \"2B\":\"nob\", \"3\":\"nob\"},\n    {\"name\":\"Norwegian Nynorsk\", \"local\":\"Norsk (Nynorsk)\", \"1\":\"nn\", \"2\":\"nno\", \"2T\":\"nno\", \"2B\":\"nno\", \"3\":\"nno\"},\n    {\"name\":\"Norwegian\", \"local\":\"Norsk\", \"1\":\"no\", \"2\":\"nor\", \"2T\":\"nor\", \"2B\":\"nor\", \"3\":\"nor\"},\n    {\"name\":\"Nuosu\", \"local\":\"ꆈꌠ꒿ Nuosuhxop\", \"1\":\"ii\", \"2\":\"iii\", \"2T\":\"iii\", \"2B\":\"iii\", \"3\":\"iii\"},\n    {\"name\":\"Southern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nr\", \"2\":\"nbl\", \"2T\":\"nbl\", \"2B\":\"nbl\", \"3\":\"nbl\"},\n    {\"name\":\"Occitan\", \"local\":\"Occitan\", \"1\":\"oc\", \"2\":\"oci\", \"2T\":\"oci\", \"2B\":\"oci\", \"3\":\"oci\"},\n    {\"name\":\"Ojibwe\", \"local\":\"ᐊᓂᔑᓈᐯᒧᐎᓐ\", \"1\":\"oj\", \"2\":\"oji\", \"2T\":\"oji\", \"2B\":\"oji\", \"3\":\"oji\"},\n    {\"name\":\"Old Church Slavonic\", \"local\":\"Словѣ́ньскъ\", \"1\":\"cu\", \"2\":\"chu\", \"2T\":\"chu\", \"2B\":\"chu\", \"3\":\"chu\"},\n    {\"name\":\"Oromo\", \"local\":\"Afaan Oromoo\", \"1\":\"om\", \"2\":\"orm\", \"2T\":\"orm\", \"2B\":\"orm\", \"3\":\"orm\"},\n    {\"name\":\"Oriya\", \"local\":\"ଓଡି଼ଆ\", \"1\":\"or\", \"2\":\"ori\", \"2T\":\"ori\", \"2B\":\"ori\", \"3\":\"ori\"},\n    {\"name\":\"Ossetian\", \"local\":\"Ирон æвзаг\", \"1\":\"os\", \"2\":\"oss\", \"2T\":\"oss\", \"2B\":\"oss\", \"3\":\"oss\"},\n    {\"name\":\"Panjabi\", \"local\":\"ਪੰਜਾਬੀ\", \"1\":\"pa\", \"2\":\"pan\", \"2T\":\"pan\", \"2B\":\"pan\", \"3\":\"pan\"},\n    {\"name\":\"Pāli\", \"local\":\"पाऴि\", \"1\":\"pi\", \"2\":\"pli\", \"2T\":\"pli\", \"2B\":\"pli\", \"3\":\"pli\"},\n    {\"name\":\"Persian\", \"local\":\"فارسی\", \"1\":\"fa\", \"2\":\"fas\", \"2T\":\"fas\", \"2B\":\"per\", \"3\":\"fas\"},\n    {\"name\":\"Polish\", \"local\":\"Polski\", \"1\":\"pl\", \"2\":\"pol\", \"2T\":\"pol\", \"2B\":\"pol\", \"3\":\"pol\"},\n    {\"name\":\"Pashto\", \"local\":\"پښتو\", \"1\":\"ps\", \"2\":\"pus\", \"2T\":\"pus\", \"2B\":\"pus\", \"3\":\"pus\"},\n    {\"name\":\"Portuguese\", \"local\":\"Português\", \"1\":\"pt\", \"2\":\"por\", \"2T\":\"por\", \"2B\":\"por\", \"3\":\"por\"},\n    {\"name\":\"Quechua\", \"local\":\"Runa Simi\", \"1\":\"qu\", \"2\":\"que\", \"2T\":\"que\", \"2B\":\"que\", \"3\":\"que\"},\n    {\"name\":\"Romansh\", \"local\":\"Rumantsch\", \"1\":\"rm\", \"2\":\"roh\", \"2T\":\"roh\", \"2B\":\"roh\", \"3\":\"roh\"},\n    {\"name\":\"Kirundi\", \"local\":\"Kirundi\", \"1\":\"rn\", \"2\":\"run\", \"2T\":\"run\", \"2B\":\"run\", \"3\":\"run\"},\n    {\"name\":\"Romanian\", \"local\":\"Română\", \"1\":\"ro\", \"2\":\"ron\", \"2T\":\"ron\", \"2B\":\"rum\", \"3\":\"ron\"},\n    {\"name\":\"Russian\", \"local\":\"Русский\", \"1\":\"ru\", \"2\":\"rus\", \"2T\":\"rus\", \"2B\":\"rus\", \"3\":\"rus\"},\n    {\"name\":\"Sanskrit\", \"local\":\"संस्कृतम्\", \"1\":\"sa\", \"2\":\"san\", \"2T\":\"san\", \"2B\":\"san\", \"3\":\"san\"},\n    {\"name\":\"Sardinian\", \"local\":\"Sardu\", \"1\":\"sc\", \"2\":\"srd\", \"2T\":\"srd\", \"2B\":\"srd\", \"3\":\"srd\"},\n    {\"name\":\"Sindhi\", \"local\":\"سنڌي‎\", \"1\":\"sd\", \"2\":\"snd\", \"2T\":\"snd\", \"2B\":\"snd\", \"3\":\"snd\"},\n    {\"name\":\"Northern Sami\", \"local\":\"Sámegiella\", \"1\":\"se\", \"2\":\"sme\", \"2T\":\"sme\", \"2B\":\"sme\", \"3\":\"sme\"},\n    {\"name\":\"Samoan\", \"local\":\"Gagana Sāmoa\", \"1\":\"sm\", \"2\":\"smo\", \"2T\":\"smo\", \"2B\":\"smo\", \"3\":\"smo\"},\n    {\"name\":\"Sango\", \"local\":\"Sängö\", \"1\":\"sg\", \"2\":\"sag\", \"2T\":\"sag\", \"2B\":\"sag\", \"3\":\"sag\"},\n    {\"name\":\"Serbian\", \"local\":\"Српски\", \"1\":\"sr\", \"2\":\"srp\", \"2T\":\"srp\", \"2B\":\"srp\", \"3\":\"srp\"},\n    {\"name\":\"Gaelic\", \"local\":\"Gàidhlig\", \"1\":\"gd\", \"2\":\"gla\", \"2T\":\"gla\", \"2B\":\"gla\", \"3\":\"gla\"},\n    {\"name\":\"Shona\", \"local\":\"ChiShona\", \"1\":\"sn\", \"2\":\"sna\", \"2T\":\"sna\", \"2B\":\"sna\", \"3\":\"sna\"},\n    {\"name\":\"Sinhala\", \"local\":\"සිංහල\", \"1\":\"si\", \"2\":\"sin\", \"2T\":\"sin\", \"2B\":\"sin\", \"3\":\"sin\"},\n    {\"name\":\"Slovak\", \"local\":\"Slovenčina\", \"1\":\"sk\", \"2\":\"slk\", \"2T\":\"slk\", \"2B\":\"slo\", \"3\":\"slk\"},\n    {\"name\":\"Slovene\", \"local\":\"Slovenščina\", \"1\":\"sl\", \"2\":\"slv\", \"2T\":\"slv\", \"2B\":\"slv\", \"3\":\"slv\"},\n    {\"name\":\"Somali\", \"local\":\"Soomaaliga\", \"1\":\"so\", \"2\":\"som\", \"2T\":\"som\", \"2B\":\"som\", \"3\":\"som\"},\n    {\"name\":\"Southern Sotho\", \"local\":\"Sesotho\", \"1\":\"st\", \"2\":\"sot\", \"2T\":\"sot\", \"2B\":\"sot\", \"3\":\"sot\"},\n    {\"name\":\"Spanish\", \"local\":\"Español\", \"1\":\"es\", \"2\":\"spa\", \"2T\":\"spa\", \"2B\":\"spa\", \"3\":\"spa\"},\n    {\"name\":\"Sundanese\", \"local\":\"Basa Sunda\", \"1\":\"su\", \"2\":\"sun\", \"2T\":\"sun\", \"2B\":\"sun\", \"3\":\"sun\"},\n    {\"name\":\"Swahili\", \"local\":\"Kiswahili\", \"1\":\"sw\", \"2\":\"swa\", \"2T\":\"swa\", \"2B\":\"swa\", \"3\":\"swa\"},\n    {\"name\":\"Swati\", \"local\":\"SiSwati\", \"1\":\"ss\", \"2\":\"ssw\", \"2T\":\"ssw\", \"2B\":\"ssw\", \"3\":\"ssw\"},\n    {\"name\":\"Swedish\", \"local\":\"Svenska\", \"1\":\"sv\", \"2\":\"swe\", \"2T\":\"swe\", \"2B\":\"swe\", \"3\":\"swe\"},\n    {\"name\":\"Tamil\", \"local\":\"தமிழ்\", \"1\":\"ta\", \"2\":\"tam\", \"2T\":\"tam\", \"2B\":\"tam\", \"3\":\"tam\"},\n    {\"name\":\"Telugu\", \"local\":\"తెలుగు\", \"1\":\"te\", \"2\":\"tel\", \"2T\":\"tel\", \"2B\":\"tel\", \"3\":\"tel\"},\n    {\"name\":\"Tajik\", \"local\":\"Тоҷикӣ\", \"1\":\"tg\", \"2\":\"tgk\", \"2T\":\"tgk\", \"2B\":\"tgk\", \"3\":\"tgk\"},\n    {\"name\":\"Thai\", \"local\":\"ภาษาไทย\", \"1\":\"th\", \"2\":\"tha\", \"2T\":\"tha\", \"2B\":\"tha\", \"3\":\"tha\"},\n    {\"name\":\"Tigrinya\", \"local\":\"ትግርኛ\", \"1\":\"ti\", \"2\":\"tir\", \"2T\":\"tir\", \"2B\":\"tir\", \"3\":\"tir\"},\n    {\"name\":\"Tibetan Standard\", \"local\":\"བོད་ཡིག\", \"1\":\"bo\", \"2\":\"bod\", \"2T\":\"bod\", \"2B\":\"tib\", \"3\":\"bod\"},\n    {\"name\":\"Turkmen\", \"local\":\"Türkmençe\", \"1\":\"tk\", \"2\":\"tuk\", \"2T\":\"tuk\", \"2B\":\"tuk\", \"3\":\"tuk\"},\n    {\"name\":\"Tagalog\", \"local\":\"Tagalog\", \"1\":\"tl\", \"2\":\"tgl\", \"2T\":\"tgl\", \"2B\":\"tgl\", \"3\":\"tgl\"},\n    {\"name\":\"Tswana\", \"local\":\"Setswana\", \"1\":\"tn\", \"2\":\"tsn\", \"2T\":\"tsn\", \"2B\":\"tsn\", \"3\":\"tsn\"},\n    {\"name\":\"Tonga\", \"local\":\"faka Tonga\", \"1\":\"to\", \"2\":\"ton\", \"2T\":\"ton\", \"2B\":\"ton\", \"3\":\"ton\"},\n    {\"name\":\"Turkish\", \"local\":\"Türkçe\", \"1\":\"tr\", \"2\":\"tur\", \"2T\":\"tur\", \"2B\":\"tur\", \"3\":\"tur\"},\n    {\"name\":\"Tsonga\", \"local\":\"Xitsonga\", \"1\":\"ts\", \"2\":\"tso\", \"2T\":\"tso\", \"2B\":\"tso\", \"3\":\"tso\"},\n    {\"name\":\"Tatar\", \"local\":\"Татарча\", \"1\":\"tt\", \"2\":\"tat\", \"2T\":\"tat\", \"2B\":\"tat\", \"3\":\"tat\"},\n    {\"name\":\"Twi\", \"local\":\"Twi\", \"1\":\"tw\", \"2\":\"twi\", \"2T\":\"twi\", \"2B\":\"twi\", \"3\":\"twi\"},\n    {\"name\":\"Tahitian\", \"local\":\"Reo Mā’ohi\", \"1\":\"ty\", \"2\":\"tah\", \"2T\":\"tah\", \"2B\":\"tah\", \"3\":\"tah\"},\n    {\"name\":\"Uyghur\", \"local\":\"ئۇيغۇرچه\", \"1\":\"ug\", \"2\":\"uig\", \"2T\":\"uig\", \"2B\":\"uig\", \"3\":\"uig\"},\n    {\"name\":\"Ukrainian\", \"local\":\"Українська\", \"1\":\"uk\", \"2\":\"ukr\", \"2T\":\"ukr\", \"2B\":\"ukr\", \"3\":\"ukr\"},\n    {\"name\":\"Urdu\", \"local\":\"اردو\", \"1\":\"ur\", \"2\":\"urd\", \"2T\":\"urd\", \"2B\":\"urd\", \"3\":\"urd\"},\n    {\"name\":\"Uzbek\", \"local\":\"O‘zbek\", \"1\":\"uz\", \"2\":\"uzb\", \"2T\":\"uzb\", \"2B\":\"uzb\", \"3\":\"uzb\"},\n    {\"name\":\"Venda\", \"local\":\"Tshivenḓa\", \"1\":\"ve\", \"2\":\"ven\", \"2T\":\"ven\", \"2B\":\"ven\", \"3\":\"ven\"},\n    {\"name\":\"Vietnamese\", \"local\":\"Tiếng Việt\", \"1\":\"vi\", \"2\":\"vie\", \"2T\":\"vie\", \"2B\":\"vie\", \"3\":\"vie\"},\n    {\"name\":\"Volapük\", \"local\":\"Volapük\", \"1\":\"vo\", \"2\":\"vol\", \"2T\":\"vol\", \"2B\":\"vol\", \"3\":\"vol\"},\n    {\"name\":\"Walloon\", \"local\":\"Walon\", \"1\":\"wa\", \"2\":\"wln\", \"2T\":\"wln\", \"2B\":\"wln\", \"3\":\"wln\"},\n    {\"name\":\"Welsh\", \"local\":\"Cymraeg\", \"1\":\"cy\", \"2\":\"cym\", \"2T\":\"cym\", \"2B\":\"wel\", \"3\":\"cym\"},\n    {\"name\":\"Wolof\", \"local\":\"Wolof\", \"1\":\"wo\", \"2\":\"wol\", \"2T\":\"wol\", \"2B\":\"wol\", \"3\":\"wol\"},\n    {\"name\":\"Western Frisian\", \"local\":\"Frysk\", \"1\":\"fy\", \"2\":\"fry\", \"2T\":\"fry\", \"2B\":\"fry\", \"3\":\"fry\"},\n    {\"name\":\"Xhosa\", \"local\":\"isiXhosa\", \"1\":\"xh\", \"2\":\"xho\", \"2T\":\"xho\", \"2B\":\"xho\", \"3\":\"xho\"},\n    {\"name\":\"Yiddish\", \"local\":\"ייִדיש\", \"1\":\"yi\", \"2\":\"yid\", \"2T\":\"yid\", \"2B\":\"yid\", \"3\":\"yid\"},\n    {\"name\":\"Yoruba\", \"local\":\"Yorùbá\", \"1\":\"yo\", \"2\":\"yor\", \"2T\":\"yor\", \"2B\":\"yor\", \"3\":\"yor\"},\n    {\"name\":\"Zhuang\", \"local\":\"Cuengh\", \"1\":\"za\", \"2\":\"zha\", \"2T\":\"zha\", \"2B\":\"zha\", \"3\":\"zha\"},\n    {\"name\":\"Zulu\", \"local\":\"isiZulu\", \"1\":\"zu\", \"2\":\"zul\", \"2T\":\"zul\", \"2B\":\"zul\", \"3\":\"zul\"}\n];\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app = require('mag-app'),\n    isStandByPaused = false,\n    hdmiEventReaction = {\n        timer: null,\n        paused: false\n    };\n\n/*eslint new-cap:0*/\n\nwindow.gSTB = window.parent.gSTB;\n\n// init player\nwindow.top.gSTB.SetTopWin(0);\n\nwindow.top.gSTB.SetSubtitlesFont('/usr/lib/fonts/Ubuntu.ttf');\n\nmodule.exports = function ( systemPlayer ) {\n    /**\n     * HDMI event reaction\n     */\n    window.parent.stbEvent.addListener('media', function (event) {\n        // go to sleep\n        if ( event.code === 33 && core.environment.hdmi_event_delay ) {\n            console.log('HDMI:: go to sleep');\n            // window.standByModes.push('HDMI:: go to sleep');\n            clearTimeout(hdmiEventReaction.timer);\n            hdmiEventReaction.timer = setTimeout(function () {\n                if ( app.pipIntent ) {\n                    app.pipIntent.emit('stop');\n                }\n                if ( systemPlayer.primary.state === 2 ) {\n                    systemPlayer.primary.pause();\n                    hdmiEventReaction.paused = true;\n                } else {\n                    hdmiEventReaction.paused = false;\n                }\n\n            }, core.environment.hdmi_event_delay * 1000);\n\n        } else if ( event.code === 32 ) {\n            console.log('HDMI:: wake up');\n            // window.standByModes.push('HDMI:: wake up');\n            // wake up\n            clearTimeout(hdmiEventReaction.timer);\n            if ( hdmiEventReaction.paused ) {\n                hdmiEventReaction.paused = false;\n                systemPlayer.primary.resume();\n            }\n        }\n    });\n\n\n    // /**\n    //  * Standby reaction\n    //  */\n    // core.addListener('standby', function ( event ) {\n    //     event = event || {};\n    //\n    //     // stand by on\n    //     // when timeshift will be work and activated we should ask some question to stop it\n    //     if ( event.status ) {\n    //         if ( systemPlayer.primary.state === 2 ) {\n    //             systemPlayer.primary.pause();\n    //             isStandByPaused = true;\n    //         }\n    //     } else {\n    //         // wake up\n    //         if ( app.pipIntent ) {\n    //             app.pipIntent.emit('stop');\n    //         }\n    //         if ( isStandByPaused ) {\n    //             systemPlayer.primary.play({uri: app.lastPlayUri});\n    //             isStandByPaused = false;\n    //         }\n    //     }\n    //\n    // });\n\n\n    /**\n     * Standby reaction\n     */\n    core.plugins.standby.addListener('standbyOn', function () {\n\n        console.log('STANDBY ON:');\n        //\n        if ( systemPlayer.primary.state === 2 ) {\n            systemPlayer.primary.pause();\n            isStandByPaused = true;\n        }\n    });\n\n    core.plugins.standby.addListener('standbyOff', function () {\n        console.log('STANDBY OFFF:');\n        //\n        if ( app.pipIntent ) {\n            app.pipIntent.emit('stop');\n        }\n        if ( isStandByPaused ) {\n            console.log('continue playing after standby');\n            systemPlayer.primary.play({uri: app.lastPlayUri});\n            isStandByPaused = false;\n        }\n    });\n\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app = require('mag-app'),\n    keys = require('stb-keys'),\n    AdClass = require('./advertising.class'),\n    currentReq,\n    advertising = {\n        /**\n         * Get ads link to play\n         *\n         * @param {number} place - place id to get video\n         * @param {Function} callback - callback  after getting video link\n         */\n        getAd: function ( place, callback ) {\n\n            place = place || this.CODE_APP_START;\n            currentReq = core.backend.request('/advertising?place=' + place, {\n                onload: function ( error, response ) {\n                    if ( !error && response && response.data && callback ) {\n                        callback(error, response.data.map(function ( ad ) {\n                            return new AdClass(ad);\n                        }));\n                    } else if ( error && callback ) {\n                        callback(error, []);\n                    } else if ( callback ) {\n                        callback(true, []);\n                    }\n                },\n                onerror: function () {\n                    if ( callback ) {\n                        callback(true, []);\n                    }\n                }\n            });\n        }\n    };\n\n//\n// |  4 | stb      |           201 | Start applications                     |\n// |  5 | stb      |           202 | Before starting the film in Video Club |\n// |  6 | stb      |           203 | During movie playback in Video Club    |\n// | 23 | stb      |           204 | Before starting the TV channel         |\n// | 24 | stb      |           205 | During a TV channel playback           |\n\n/**\n * Code to get info about Start applications advertising\n * @type {number} code\n */\nadvertising.CODE_APP_START = 201;\n\n/**\n * Code to get info about Before starting the film in Video Club advertising\n * @type {number} code\n */\nadvertising.CODE_VIDEO_CLUB_START_PLAYBACK = 202;\n\n/**\n * Code to get info about During movie playback in Video Club advertising\n * @type {number} code\n */\nadvertising.CODE_VIDEO_CLUB_DURING_PLAYBACK = 203;\n\n/**\n * Code to get info about Before starting the TV channel advertising\n * @type {number} code\n */\nadvertising.CODE_TV_START_PLAYBACK = 204;\n\n/**\n * Code to get info about During a TV channel playback advertising\n * @type {number} code\n */\nadvertising.CODE_TV_DURING_PLAYBACK = 205;\n\n// stop request to prevent callback\napp.addListener('keydown', function ( event ) {\n    if ( event.code === keys.exit && currentReq ) {\n        currentReq.abort();\n    }\n});\n\n\nmodule.exports = advertising;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nfunction sendGet ( url ) {\n    core.backend.request(url, {\n        method: 'GET'\n    });\n}\n\n\nfunction Advertising ( config ) {\n    config = config || {};\n\n    /**\n     * Tracking points\n     *\n     * @type {object}\n     */\n    this.tracking = config.tracking || {};\n\n    /**\n     * Number of seconds required to watch advertising\n     *\n     * @type {number} requiredPart to watch advertising\n     */\n    this.requiredPart = config['skip_after'];\n\n    /**\n     * Info about advertising campaign\n     */\n    this.campaign = config.campaign;\n\n    /**\n     * Url to vatch advertising\n     *\n     * @type {string}\n     */\n    this.url = config.video;\n\n}\n\n// Advertising.\n\nAdvertising.prototype = {};\nAdvertising.prototype.constructor = Advertising;\n\n\n/**\n * Track start playback\n */\nAdvertising.prototype.start = function () {\n    if ( this.tracking.start ) {\n        this.tracking.start.forEach(sendGet);\n    }\n};\n\n\n/**\n * Track 25% playback\n */\nAdvertising.prototype.quarter = function () {\n    if ( this.tracking.firstQuartile ) {\n        this.tracking.firstQuartile.forEach(sendGet);\n    }\n\n    this.quarter = null;\n};\n\n\n/**\n * Track 50% playback\n */\nAdvertising.prototype.middle = function () {\n    if ( this.tracking.midpoint ) {\n        this.tracking.midpoint.forEach(sendGet);\n    }\n\n    this.middle = null;\n};\n\n\n/**\n * Track 75% playback\n */\nAdvertising.prototype.thirdQuarter = function () {\n    if ( this.tracking.thirdQuartile ) {\n        this.tracking.thirdQuartile.forEach(sendGet);\n    }\n\n    this.thirdQuarter = null;\n};\n\n/**\n * Track 100% playback\n */\nAdvertising.prototype.complete = function () {\n    if ( this.tracking.complete ) {\n        this.tracking.complete.forEach(sendGet);\n    }\n};\n\n\nmodule.exports = Advertising;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar $canvas = document.getElementById('progress'),\n    context = $canvas.getContext('2d'),\n    positionX = $canvas.width / 2,\n    positionY = $canvas.height / 2,\n    onePercent = 360 / 100,\n    colorPickerBlock = document.getElementById('hiddenBlock'),\n    valueColor = '#291d41',\n    detectedColor;\n\n\ncontext.lineCap = 'round';\ndetectedColor = window.getComputedStyle(colorPickerBlock).backgroundColor;\n\nif ( detectedColor ) {\n    valueColor = detectedColor;\n}\n\n\n/**\n * Draw circle progress bar\n *\n * @param {number} percent - percent to fill circle\n */\nfunction draw ( percent ) {\n    context.clearRect(0, 0, $canvas.width, $canvas.height);\n    context.beginPath();\n    context.arc(positionX, positionY, 70, (Math.PI / 180) * 270, (Math.PI / 180) * (270 + 360));\n    context.strokeStyle = '#b1b1b1';\n    context.lineWidth = '10';\n    context.stroke();\n    context.beginPath();\n    context.strokeStyle = valueColor;\n    context.lineWidth = '10';\n    context.arc(positionX, positionY, 70, (Math.PI / 180) * 270, (Math.PI / 180) * (270 + (percent * onePercent)));\n    context.stroke();\n}\n\n/**\n * Clear canvas\n */\ndraw.clear = function () {\n    context.clearRect(0, 0, $canvas.width, $canvas.height);\n};\n\n\nmodule.exports = draw;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar $title = document.getElementById('advertisingTitle'),\n    format = require('cjs-format');\n\n\n/**\n * Write current advertising file from total text\n *\n * @param {number} current - current position\n * @param {number} total - total count\n */\nmodule.exports = function ( current, total ) {\n    $title.innerText = format(gettext('Advertising {0} of {1}'), current, total);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Do string substitution according to the given format.\n * http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\n *\n * @param {string} format string substitution format\n *\n * @return {string} result data\n */\nmodule.exports = function ( format ) {\n    var args = Array.prototype.slice.call(arguments, 1),\n        expr = /{(\\d+)}/g;\n\n    if ( DEVELOP ) {\n        if ( !format ) {\n            throw new Error(__filename + ': format string is empty');\n        }\n        if ( args.length === 0 ) {\n            throw new Error(__filename + ': no arguments');\n        }\n        if ( !expr.test(format) ) {\n            throw new Error(__filename + ': format string does not have substitutions: ' + format);\n        }\n    }\n\n    return format.replace(expr, function ( match, number ) {\n        return args[number] === undefined ? match : args[number];\n    });\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nmodule.exports = {\n    AUDIO_TYPES: {\n        1: 'mp2a',\n        2: 'mp3',\n        3: 'AC3',\n        4: 'AAC',\n        5: 'PCM',\n        6: 'OGG',\n        7: 'DTS'\n    },\n    LANGUAGES: {\n        rus: 'Russian',\n        eng: 'English',\n        und: ' '\n    },\n    aspects: {\n        0: 'Original',\n        1: 'Letter box',\n        2: 'Pan&Scan',\n        3: 'combined',\n        4: 'enlarged',\n        5: 'optimal'\n    }\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar Widget     = require('spa-component-widget'),\n    ModMes     = require('mag-component-modal'),\n    LayoutList = require('mag-component-layout-list'),\n    keys       = require('stb-keys'),\n    app        = require('mag-app'),\n    message,\n    lastInitData = [],\n    widget = new Widget({\n        $node: document.getElementById('modalIntentWidget'),\n        //visible: true,\n        events: {\n            show: function () {\n                message.focus();\n            },\n            hide: function () {\n                if ( app.lastFocus ) {\n                    app.lastFocus.focus();\n                }\n            }\n        }\n    });\n\nwidget.add(\n    message = new ModMes({\n        visible: true,\n        title: gettext('Actions'),\n        children: [\n            widget.list = new LayoutList({\n                data: [],\n                size: 0,\n                events: {\n                    'click:item': function () {\n                        widget.hide();\n                    },\n                    keydown: function ( event ) {\n                        if ( event.code === keys.back ||  event.code === keys.menu ) {\n                            event.stop = true;\n                            widget.hide();\n                        } else {\n                            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        }\n                    }\n                }\n            })\n        ]\n    })\n);\n\n\nwidget.init = function ( data ) {\n    var menuData = [];\n\n    lastInitData = data;\n\n    data.forEach(function (elem) {\n        menuData.push({\n            items: [\n                {\n                    className: 'theme-icon theme-icon-rc-' + ( elem.icon || ''),\n                    value: ''\n                },\n                {\n                    className: 'title',\n                    value: elem.title\n                }\n            ],\n            click: elem.handler\n        });\n    });\n    widget.list.init({\n        data: menuData,\n        size: menuData.length,\n        focusIndex: 0\n    });\n\n};\n\n// superhardcode\napp.addListener('keydown', function ( event ) {\n    if ( event.code === keys.f1 ) {\n        if ( widget.record && lastInitData[0].handler ) {\n            lastInitData[0].handler();\n            widget.hide();\n        }\n    }\n});\n\nmodule.exports = widget;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base widget implementation.\n *\n * A part-screen top-level layer that can operate as an independent separate entity.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.visible=false] component initial visibility state flag\n * @param {boolean} [config.focusable=false] component can accept focus or not\n */\nfunction Widget ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // hidden\n    config.visible = config.visible || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'widget ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nWidget.prototype = Object.create(Component.prototype);\nWidget.prototype.constructor = Widget;\n\n// set component name\nWidget.prototype.name = 'spa-component-widget';\n\n\n// public\nmodule.exports = Widget;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app          = require('mag-app'),\n    systemPlayer = require('./system.player');\n\n\napp.timeshift.addListener('buffer:pause:full', function () {\n    systemPlayer.primary.position = 12;\n    systemPlayer.primary.resume();\n});\n\napp.timeshift.addListener('buffer:full', function () {\n    var position;\n\n    if ( app.timeshift.cyclic ) {\n        position = systemPlayer.primary.position;\n        systemPlayer.primary.position = position;\n        core.notify({\n            title: gettext('Timeshift buffer is full'),\n            icon: 'alert',\n            timeout: 3000\n        });\n    }\n});\n\napp.timeshift.addListener('buffer:almost:full', function () {\n    core.notify({\n        title: gettext('1 minute before timeshift buffer turns full'),\n        icon: 'alert',\n        timeout: 3000\n    });\n});\n\napp.timeshift.addListener('storage:unavailable', function () {\n    core.notify({\n        title: gettext('USB storage unavailable'),\n        icon: 'alert',\n        timeout: 3000\n    });\n});\n\n\napp.timeshift.addListener('storage:full', function () {\n    core.notify({\n        title: gettext('USB storage is full'),\n        icon: 'alert',\n        timeout: 3000\n    });\n});\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar id            = 'pClear',\n    Page          = require('stb-component-page'),\n    page          = new Page({$node: document.getElementById(id)}),\n    systemPlayer  = require('../modules/system.player'),\n    Panel         = require('stb-component-panel'),\n    app           = require('mag-app'),\n    keys          = require('stb-keys'),\n    checkAppByPid = require('../modules/tools').checkAppByPid,\n    exitTS        = require('../modules/exit.timeshift'),\n    showExitModal = require('../modules/ui/exit.modal')(page),\n    panel = new Panel({\n        focusable: true\n    });\n\n\npage.panel = panel;\npage.add(panel);\n\npage.addListeners({\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.ok:\n                app.route(app.pages.main);\n                break;\n            case keys.back:\n                if ( app.currentIntent.data.exitWithConfirm ) {\n                    showExitModal(function ( exitState ) {\n                        if ( exitState ) {\n                            app.currentIntent.close(true);\n                            app.emit('close');\n                            exitTS();\n                            systemPlayer.primary.stop();\n                        }\n                    });\n                } else if ( app.currentIntent.data.persistent && checkAppByPid(app.currentIntent.creator) ) {\n                    // same as we click list button\n                    app.currentIntent.show(app.currentIntent.creator, {reasonToggleView: true});\n                } else {\n                    app.currentIntent.close();\n                    exitTS();\n                    systemPlayer.primary.stop();\n                    app.emit('close');\n                }\n                break;\n            case keys.left:\n                app.rewind(false);\n                break;\n            case keys.right:\n                app.rewind(true);\n                break;\n            case keys.up:\n                app.nextPrevContent(true);\n                break;\n            case keys.down:\n                app.nextPrevContent(false);\n                break;\n        }\n    },\n    click: function () {\n        app.route(app.pages.main);\n    },\n    show: function () {\n        panel.focus();\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-panel');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-panel';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base panel implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Panel = require('stb/ui/panel'),\n *     panel = new Panel({\n *         $node: document.getElementById('someId'),\n *         children: [\n *             new Panel({\n *                 $node: document.getElementById('anotherId')\n *             })\n *         ]\n *     });\n *\n * panel.add(\n *     new Button(),\n *     new Button(),\n *     new Button()\n * );\n *\n * page.add(panel);\n */\nfunction Panel ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panel ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'spa-component-panel';\n\n\n// public\nmodule.exports = Panel;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app   = require('mag-app'),\n\n    Modal = require('mag-component-modal'),\n    List  = require('mag-component-layout-list'),\n    onclickCallback,\n    lastActiveComponent,\n    modal;\n\n\nmodal = new Modal({\n    title: gettext('Exit'),\n    events: {\n        show: function () {\n            this.children[0].focus();\n        },\n        hide: function () {\n            lastActiveComponent.focus();\n        },\n        keydown: function ( event ) {\n            event.stop = true;\n        }\n    },\n    children: [\n        new List({\n            className: 'padded',\n            focusIndex: 0,\n            size: 2,\n            data: [\n                {\n                    items: [{value: gettext('Yes')}],\n                    click: function () {\n                        // process success\n                        onclickCallback(true);\n                        modal.hide();\n                    }\n                },\n                {\n                    items: [{value: gettext('No')}],\n                    click: function () {\n                        // process cancel\n                        onclickCallback(false);\n                        modal.hide();\n                    }\n                }\n            ]\n        })\n    ]\n});\n\ncore.addListener('hide', function ( /*event*/ ) {\n\n    modal.hide();\n\n});\n\nmodule.exports = function ( page ) {\n\n    page.add(modal);\n\n    return function ( callback ) {\n        if ( app.activePage && app.activePage.activeComponent ) {\n            lastActiveComponent = app.activePage.activeComponent;\n        }\n\n        onclickCallback = callback;\n        modal.show();\n    };\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/*eslint-disable*/\n// disable linting this page till it will be reworked\n\nvar id         = 'pSettings',\n    Page       = require('stb-component-page'),\n    page       = new Page({$node: document.getElementById(id)}),\n    app        = require('mag-app'),\n    keys       = require('stb-keys'),\n    PanelSet   = require('mag-component-panel-set'),\n    Panel      = require('mag-component-panel'),\n    LayoutList = require('mag-component-layout-list'),\n    ScrollArea = require('mag-component-scroll-area'),\n    popup      = require('../modules/settings/modal')(page),\n    equalizer  = require('../modules/ui/equalizer'),\n    optionsData,\n    mainSet,\n    menuList, settingsList, description, restoreEqualizer;\n\n\noptionsData = [\n    {\n        items: makeItem('theme-icon theme-icon-volume', _('Sound')),\n        options: require('../modules/settings/sound.options'),\n        title: _('Sound')\n    },\n    {\n        items: makeItem('theme-icon theme-icon-display', _('Display')),\n        options: require('../modules/settings/display.options'),\n        title: _('Display')\n    }\n];\nif ( core.device && core.device.model === 'emulator' ) {\n    optionsData.push({\n        items: makeItem('theme-icon theme-icon-monitor', _('Video')),\n        options: require('../modules/settings/video.options'),\n        title: _('Video')\n    })\n}\n\n\nmainSet = new PanelSet({\n    panels: [\n        new Panel({\n            title: _('Settings'),\n            children: [\n                menuList = new LayoutList({\n                    data: optionsData\n                })\n            ]\n        }),\n        new Panel({\n            title: _('Sound'),\n            main: true,\n            children: [\n                settingsList = new LayoutList()\n            ]\n        }),\n        new Panel({\n            title: _('Info'),\n            children: [\n                description = new ScrollArea({\n                    propagate: true\n                })\n            ]\n        })\n    ]\n});\n\npage.add(mainSet);\nsettingsList.emit('focus:item', {$curr: settingsList.$focusItem});\n\nmenuList.addListener('focus:item', function ( event ) {\n    mainSet.panels[1].$title.$node.childNodes[0].innerText = event.$curr.layout.data[1].value;\n\n\n    if ( typeof  event.$curr.data.options === 'function' ) {\n        //event.$curr.data.options = event.$curr.data.options();\n        settingsList.setData({\n            data: event.$curr.data.options(),\n            focusIndex: 0\n        });\n    } else {\n        settingsList.setData({\n            data: event.$curr.data.options,\n            focusIndex: 0\n        });\n    }\n\n    settingsList.emit('focus:item', {$curr: settingsList.$focusItem});\n});\n\n\nsettingsList.addListener('focus:item', function ( event ) {\n    description.$body.innerText = event.$curr.data.description || '';\n    description.init();\n});\n\n\nsettingsList.addListener('click:item', function ( event ) {\n    var data = event.$item.data;\n\n    if ( data.type === 'checkBox' ) {\n        // reverse check box value and update className\n        data.setValue(!data.getValue(), event.$item);\n    } else {\n        mainSet.blur();\n        app.activePage.activeComponent.blur();\n        // console.log(app.activePage.activeComponent);\n        popup({\n            title: data.items[1].value,\n            data: data.options,\n            getOptions: data.getOptions,\n            getFocusIndex: data.getFocusIndex,\n            handler: data.handler,\n            onShow: function () {\n                // setTimeout(\n                //     function () {\n                //     }, 37\n                // );\n            },\n            onHide: function () {\n                setTimeout(\n                    function () {\n                        mainSet.focus();\n                    }, 37\n                );\n\n            }\n        })\n    }\n});\n\n\nfunction makeItem ( icon, text ) {\n    if ( typeof  text === 'function' ) {\n        text = text();\n    }\n\n    return  [\n        {\n            className: icon\n        },\n        {\n            value: text\n        }\n    ];\n}\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n\n            // modal popup do some async calls and we should prevent go back when it's not visible yet\n            if ( !page.activeComponent ) {\n                return;\n            }\n            if ( restoreEqualizer ) {\n                restoreEqualizer = false;\n                equalizer.show();\n            }\n            app.route(app.pages.main);\n            break;\n        // small hack. need to correct in future\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            event.stop = true;\n            break;\n    }\n});\n\n\npage.addListener('show', function () {\n    mainSet.panels[0].focus();\n    menuList.focusIndex(0);\n    if ( equalizer.active ) {\n        restoreEqualizer = true;\n        equalizer.hide();\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/* eslint no-use-before-define:0*/\n\nvar Modal  = require('mag-component-modal'),\n    List   = require('mag-component-list'),\n    Scroll = require('spa-component-scrollbar'),\n    modalScroll = new Scroll(),\n    list   = new List({\n        data: [],\n        size: 0,\n        className: 'padded',\n        cycle: true,\n        scroll: modalScroll,\n        events: {\n            'click:item': function ( event ) {\n                console.log(event.$item.data);\n                list.clickHandler(event.$item.data.valueToSet);\n                popup.hide();\n            }\n        },\n        propagate: true\n    }),\n    popup = new Modal({\n        className: 'modalPopUp',\n        children: [list],\n        title: 'asd'\n    });\n\npopup.$body.appendChild(modalScroll.$node);\n\nfunction construct ( config ) {\n    var indexToFocus = 0,\n        optionsData;\n\n    config = config || {};\n\n    if ( config.data ) {\n        optionsData = config.data;\n    } else if ( config.getOptions ) {\n        optionsData = config.getOptions();\n    }\n\n    if ( config.getFocusIndex ) {\n        indexToFocus = config.getFocusIndex();\n    }\n\n    popup.$text.innerText = config.title;\n    list.clickHandler = config.handler;\n\n\n    setTimeout(\n        function () {\n            list.init({\n                data: optionsData.map(function ( element ) {\n                    return {\n                        value: element.title,\n                        valueToSet: element.value\n                    };\n                }),\n                scroll: modalScroll,\n                size: optionsData.length > 5 ? 5 : optionsData.length,\n                focusIndex: indexToFocus\n            });\n\n            popup.events = popup.events || {};\n\n            if ( config.onHide ) {\n                popup.events.hide = [config.onHide];\n            }\n\n            setTimeout(\n                function () {\n                    popup.show();\n                    popup.focus();\n                }, 100\n            );\n        }, 40\n    );\n\n}\n\n\nmodule.exports = function ( page ) {\n    page.add(popup);\n    page.addListener('hide', function () {\n        popup.hide();\n    });\n\n    return construct;\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app      = require('mag-app'),\n    systemPlayer = require('../system.player'),\n    isoLangs = require('cjs-iso-639'),\n    optionsData = [];\n\nfunction makeItem ( icon, text ) {\n    return  [\n        {\n            className: icon\n        },\n        {\n            value: text\n        }\n    ];\n}\n\nfunction setMuteHandler ( value ) {\n    if ( core.plugins.settingsAudio ) {\n        core.plugins.settingsAudio.mute = value;\n    }\n}\n\nfunction setVolumeHandler ( value ) {\n    if ( core.plugins.settingsAudio ) {\n        core.plugins.settingsAudio.volume = value;\n    }\n}\n\nfunction setAudiotrackHandler ( value ) {\n    systemPlayer.primary.audioPID = value;\n}\n\n// add sound option only on MAG devices\nif ( PLATFORM === 'MAG' ) {\n    if ( app.config.disableSoundOptions.indexOf(core.device.model) < 0 ) {\n        optionsData.push(\n            {\n                items: makeItem('theme-icon theme-icon-volume', gettext('Mute')),\n                options: [\n                    {\n                        title: gettext('Mute On'),\n                        value: true\n                    },\n                    {\n                        title: gettext('Mute off'),\n                        value: false\n                    }\n                ],\n                handler: setMuteHandler,\n                description: gettext('Mute all sound')\n            }\n        );\n\n\n        optionsData.push(\n            {\n                items: makeItem('theme-icon theme-icon-volume', gettext('Volume level')),\n                options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function ( value ) {\n                    return {\n                        value: value * 10,\n                        title: (value * 10).toString()\n                    };\n                }),\n                getFocusIndex: function () {\n                    return parseInt(app.audioManager.list[0].volume / 10, 10);\n                },\n                handler: setVolumeHandler,\n                description: gettext('Change volume level')\n            }\n        );\n    }\n}\n\n\noptionsData.push(\n    {\n        items: makeItem('theme-icon theme-icon-subtitles', gettext('Sound track')),\n        description: gettext('Change audio track language'),\n        getFocusIndex: function () {\n            var index,\n                currentPid = systemPlayer.primary.audioPID;\n\n            if ( systemPlayer.primary.audioTracks.length < 1) {\n                return 0;\n            }\n\n            for ( index = 0; index < systemPlayer.primary.audioTracks.length; index++ ) {\n                if ( systemPlayer.primary.audioTracks[index].pid === currentPid ) {\n                    return index;\n                }\n            }\n\n            return 0;\n        },\n        getOptions: function () {\n            var result = [];\n\n            systemPlayer.primary.audioTracks.forEach(function ( track ) {\n                var title;\n\n                if ( track.lang && track.lang.length && track.lang[0] !== 'und' ) {\n                    title = track.lang[0];\n                    title = isoLangs['1'][title] || isoLangs['2T'][title] || isoLangs['2B'][title] || [''];\n                    title = title[0];\n                } else {\n                    title = gettext('Track') + ' ' + track.pid;\n                }\n\n                result.push({\n                    value: track.pid,\n                    title: title\n                });\n            });\n\n            return result;\n        },\n        handler: setAudiotrackHandler\n    }\n);\n\nmodule.exports = optionsData;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app               = require('mag-app'),\n    systemPlayer      = require('../system.player'),\n    findIndex         = require('array-find-index'),\n    isoLangs          = require('cjs-iso-639'),\n    subtitlesEncoding = [\n        'utf-8',\n        'cp1250',\n        'cp1251',\n        'cp1252',\n        'cp1253',\n        'cp1254',\n        'cp1255',\n        'cp1256',\n        'cp1257',\n        'cp1258',\n        'iso8859-1',\n        'iso8859-2',\n        'iso8859-3',\n        'iso8859-4',\n        'iso8859-5',\n        'iso8859-6',\n        'iso8859-7',\n        'iso8859-8',\n        'iso8859-9',\n        'iso8859-10',\n        'iso8859-11',\n        'iso8859-12',\n        'iso8859-13',\n        'iso8859-14',\n        'iso8859-15',\n        'iso8859-16'\n    ],\n    lastExternalSubtitle;\n\nfunction makeItem ( icon, text ) {\n    return  [\n        {\n            className: icon\n        },\n        {\n            value: text\n        }\n    ];\n}\n\n\nfunction setAspectHandler ( value ) {\n    systemPlayer.primary.aspect = value;\n}\n\nfunction setSubtitlesHandler ( track ) {\n    if ( typeof track === 'number' || track === null ) {\n        systemPlayer.primary.subtitlesPID = track;\n        app.playback.subtitles.current = {\n            pid: track,\n            lang: []\n        };\n        lastExternalSubtitle = null;\n    } else if (track && track.getUri ) {\n        lastExternalSubtitle = track;\n        track.getUri(function ( error, uri ) {\n            if ( !error && uri ) {\n                systemPlayer.primary.loadExternalSubtitles(uri);\n            } else {\n                core.notify({\n                    title: gettext('Can not load external subtitle link'),\n                    icon: 'alert',\n                    type: 'error',\n                    timeout: 2000\n                });\n            }\n        });\n    } else if ( track && track.uri ) {\n        lastExternalSubtitle = track;\n        systemPlayer.primary.loadExternalSubtitles(track.uri);\n    }\n}\n\nfunction setSubtitlesEncoding ( value ) {\n    systemPlayer.subtitlesEncoding = value;\n}\n\n\nmodule.exports = [\n    {\n        items:  makeItem('theme-icon theme-icon-aspect', gettext('Aspect')),\n        options: [\n            {\n                title: gettext('Original'),\n                value: 0\n            },\n\n            {\n                title: gettext('Letter box'),\n                value: 1\n            },\n\n            {\n                title: gettext('Pan&Scan'),\n                value: 2\n            },\n            {\n                title: gettext('combined'),\n                value: 3\n            },\n\n            {\n                title: gettext('enlarged'),\n                value: 4\n            },\n\n            {\n                title: gettext('optimal'),\n                value: 5\n            }\n        ],\n        handler: setAspectHandler,\n        getFocusIndex: function () {\n            return systemPlayer.primary.aspect;\n        },\n        description: gettext('Change video conversation mode')\n    },\n    {\n        items: makeItem('theme-icon theme-icon-subtitles', gettext('Subtitles')),\n        description: gettext('Enable/disable or change subtitles for current content playback'),\n        handler: setSubtitlesHandler,\n        getOptions: function () {\n            var result = [\n                {\n                    value: null,\n                    title: gettext('Off')\n                }\n            ];\n\n            app.playback.subtitles.list.forEach(function ( track ) {\n                var title;\n\n                if ( track.lang && track.lang.length && track.lang[0] !== 'und' ) {\n                    title = track.lang[0];\n                    title = isoLangs['1'][title] || isoLangs['2T'][title] || isoLangs['2B'][title] || [gettext('Track') + ' ' + track.lang[0]];\n                    title = title[0];\n                } else {\n                    title = gettext('Track') + ' ' + track.pid;\n                }\n\n                result.push({\n                    title: title,\n                    value: track.pid\n                });\n            });\n\n            if ( app.lastPrimaryIntent && app.lastPrimaryIntent.data.subtitles ) {\n                app.lastPrimaryIntent.data.subtitles.forEach(function ( external ) {\n                    var title;\n\n                    title = external.lang || '';\n                    title = isoLangs['1'][title] || isoLangs['2T'][title] || isoLangs['2B'][title] || [''];\n                    title = title[0];\n\n                    result.push({\n                        title: external.title || title || gettext('External track'),\n                        value: external,\n                        external: true\n                    });\n\n\n                });\n            }\n\n            return result;\n        },\n        getFocusIndex: function () {\n            var result = 0,\n                externalSubtitles,\n                externalIndex,\n                index;\n\n            index = findIndex(systemPlayer.primary.subtitlesTracks, function ( track ) {\n                return track.pid === systemPlayer.primary.subtitlesPID;\n            });\n\n            if ( lastExternalSubtitle && app.lastPrimaryIntent && app.lastPrimaryIntent.data.subtitles ) {\n                // copy subtitles array because it is link to variable in side app and even findIndex polyfill may broke\n                externalSubtitles = app.lastPrimaryIntent.data.subtitles.slice(0);\n                externalIndex = findIndex(externalSubtitles, function ( subtitles ) {\n                    return subtitles === lastExternalSubtitle;\n                });\n\n                if ( externalIndex > -1 ) {\n                    index += externalIndex;\n                }\n            }\n\n            if ( index >= 0 ) {\n                result = index + 1;\n            }\n\n            if ( !systemPlayer.primary.enableSubtitles ) {\n                result = 0;\n            }\n\n            return result;\n        }\n    },\n    {\n        items: makeItem('theme-icon theme-icon-subtitles', gettext('Subtitles encoding')),\n        description: gettext('Encoding which will be used to display external subtitles.'),\n        handler: setSubtitlesEncoding,\n        options: subtitlesEncoding.map(function ( encoding ) {\n            return {\n                title: encoding,\n                value: encoding\n            };\n        }),\n        getFocusIndex: function () {\n            var index = findIndex(subtitlesEncoding, function ( encoding ) {\n                return encoding === systemPlayer.subtitlesEncoding;\n            });\n\n            return index > -1 ? index : 0;\n        }\n    }\n];\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar id          = 'pAdvertising',\n    Page        = require('stb-component-page'),\n    page        = new Page({$node: document.getElementById(id), focusable: false}),\n    Button      = require('stb-component-button'),\n    keys        = require('stb-keys'),\n    player      = require('../modules/advertising/player'),\n    advertising = require('../modules/advertising/core'),\n    skipButton  = new Button({\n        $node: document.getElementById('skipButton'),\n        value: gettext('Skip ad'),\n        events: {\n            hide: function () {\n                this.blur();\n                this.events.click = [];\n            }\n        }\n    }),\n    $buttonIcon = document.createElement('div');\n\n\n$buttonIcon.className = 'theme-icon theme-icon-next';\nskipButton.$node.appendChild($buttonIcon);\npage.add(skipButton);\n\n\npage.addListener('show', function ( event ) {\n    console.log(event, 'advertising page show event');\n    skipButton.hide();\n});\n\n\npage.addListener('keydown', function ( event ) {\n    if ( event.code === keys.exit ) {\n        player.stop();\n        skipButton.hide();\n    } else if ( event.code === keys.set || event.code === keys.app ) {\n        player.stop();\n        skipButton.hide();\n        core.call('blur');\n        core.call('hide');\n    }\n});\n\n\nadvertising.addListener('button:show', function ( data ) {\n    skipButton.once('click', function () {\n        advertising.emit('skip', {target: data.target, done: data.done});\n        skipButton.hide();\n    });\n    skipButton.show();\n    skipButton.focus();\n});\n\nadvertising.addListener('button:hide', function () {\n    skipButton.hide();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n"],"sourceRoot":""}