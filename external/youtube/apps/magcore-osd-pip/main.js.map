{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./src/js/config/positions.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/config/index.js","webpack:///./src/js/config/viewports/480.js","webpack:///./src/js/config/viewports/720.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config/viewports/index.js","webpack:///./src/js/config/viewports/1080.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-component-progress-bar/index.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./node_modules/stb-component-list/index.js","webpack:///./node_modules/spa-component-list/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","leftTop","rightTop","rightBottom","leftBottom","none","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","keys","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","backspace","tab","enter","escape","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","viewports","positions","graphic","480","576","720","1080","width","height","x","y","link","rel","href","metrics","head","pages","init","ready","window","core","getCoreInstance","platform","exit","load","body","setAttribute","type","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","videoMode720","DOMContentLoaded","unload","error","keydown","eventLocal","code","keyCode","stop","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","screen","availHeight","availTop","availBottom","availWidth","availLeft","availRight","linkCSS","theme","path","progressBar","$pauseButton","buttonList","ProgressBar","Button","List","Page","$playerSpaceLeftTop","getElementById","$playerSpaceRightTop","$playerSpaceRightBottom","$playerSpaceLeftBottom","$playerSpaceNone","$pageMain","$playerSpace","$player","PLAYER","playerSpaces","playerPosition","progressInterval","lastIntent","appFocused","repositionActive","isPlayed","toggleReposition","audio","innerHTML","title","setViewport","position","videoResolution","gSTB","RDir","match","viewport","progressBarInit","duration","max","focusItem","disabled","disablePauseButton","size","TYPE_HORIZONTAL","onclick","clearInterval","close","$item","render","button","click:item","isPlayPauseFocused","move","$focusItem","ok","playPause","focusIndex","newPosition","back","intent","action","mime","playerState","refresh","setInterval","set","web","channelNext","channelPrev","volumeUp","volumeDown","f1","f2","f3","f4","frame","phone","tv","menu","rewind","forward","standby","keyboard","usbMounted","usbUnmounted","play","pause","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","min","step","$value","prevValue","Math","abs","style","curr","prev","icon","$icon","$text","innerText","clickDuration","click","viewIndex","TYPE_VERTICAL","cycle","scroll","provider","renderItemDefault","renderItem","wheelDeltaY","wheelDeltaX","currSize","onClick","setData","realSize","maxCount","viewSize","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","firstChild","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","'use strict';\n\nmodule.exports = {\n    leftTop: 0,\n    rightTop: 1,\n    rightBottom: 2,\n    leftBottom: 3,\n    none: 4\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","'use strict';\n\n\nmodule.exports = {\n    viewports: require('./viewports'),\n    positions: require('./positions')\n};\n","'use strict';\n\nvar positions = require('../positions'),\n\n    graphic = {\n        480:  {},\n        576:  {},\n        720:  {},\n        1080: {}\n    };\n\n\ngraphic[480][positions.leftTop] = {\n    width: 200,\n    height: 160,\n    x: 60,\n    y: 40\n};\n\ngraphic[480][positions.rightTop] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: 460,\n    y: 40\n};\n\ngraphic[480][positions.rightBottom] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: 460,\n    y: 296\n};\n\ngraphic[480][positions.leftBottom] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: 60,\n    y: 296\n};\n\n// same values\ngraphic[576]  = graphic[480];\ngraphic[720]  = graphic[480];\ngraphic[1080] = graphic[480];\n\n\nmodule.exports = graphic;\n","'use strict';\n\nvar positions = require('../positions'),\n\n    graphic = {\n        480:  {},\n        576:  {},\n        720:  {},\n        1080: {}\n    };\n\ngraphic[480][positions.leftTop] = {\n    width: 300,\n    height: 170,\n    x: 80,\n    y: 70\n};\n\ngraphic[480][positions.rightTop] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: 900,\n    y: 70\n};\n\ngraphic[480][positions.rightBottom] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: 900,\n    y: 480\n};\n\ngraphic[480][positions.leftBottom] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: 80,\n    y: 480\n};\n\ngraphic[576][positions.leftTop] = {\n    width: 350,\n    height: 194,\n    x: 110,\n    y: 54\n};\ngraphic[576][positions.rightTop] = {\n    width: graphic[576][positions.leftTop].width,\n    height: graphic[576][positions.leftTop].height,\n    x: 820,\n    y: 54\n};\ngraphic[576][positions.rightBottom] = {\n    width: graphic[576][positions.leftTop].width,\n    height: graphic[576][positions.leftTop].height,\n    x: 820,\n    y: 373\n};\ngraphic[576][positions.leftBottom] = {\n    width: graphic[576][positions.leftTop].width,\n    height: graphic[576][positions.leftTop].height,\n    x: 110,\n    y: 373\n};\n\ngraphic[720][positions.leftTop] = {\n    width: 300,\n    height: 170,\n    x: 80,\n    y: 70\n};\ngraphic[720][positions.rightTop] = {\n    width: graphic[720][positions.leftTop].width,\n    height: graphic[720][positions.leftTop].height,\n    x: 900,\n    y: 70\n};\ngraphic[720][positions.rightBottom] = {\n    width: graphic[720][positions.leftTop].width,\n    height: graphic[720][positions.leftTop].height,\n    x: 900,\n    y: 480\n};\ngraphic[720][positions.leftBottom] = {\n    width: graphic[720][positions.leftTop].width,\n    height: graphic[720][positions.leftTop].height,\n    x: 80,\n    y: 480\n};\n\ngraphic[1080] = graphic[720];\n\n\nmodule.exports = graphic;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\napp.once('load', function () {\n    app.pages = {\n        init: require('./pages/main')\n    };\n    app.route(app.pages.init);\n    app.ready();\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","'use strict';\n\nmodule.exports = {\n    480: require('./480'),\n    576: require('./480'),\n    720: require('./720'),\n    1080: require('./1080')\n};\n","'use strict';\n\nvar positions = require('../positions'),\n\n    videoMode720 = require('./720'),\n\n    graphic = {\n        480:  {},\n        576:  {},\n        720:  {},\n        1080: {}\n    };\n\n// todo: optimize config computing via functions\n\ngraphic[480][positions.leftTop] = {\n    width: videoMode720[480][positions.leftTop].width * 1.5,\n    height: videoMode720[480][positions.leftTop].height * 1.5,\n    x: videoMode720[480][positions.leftTop].x * 1.5,\n    y: videoMode720[480][positions.leftTop].y * 1.5\n};\ngraphic[480][positions.rightTop] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: videoMode720[480][positions.rightTop].x * 1.5,\n    y: videoMode720[480][positions.rightTop].y * 1.5\n};\ngraphic[480][positions.rightBottom] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: videoMode720[480][positions.rightBottom].x * 1.5,\n    y: videoMode720[480][positions.rightBottom].y * 1.5\n};\ngraphic[480][positions.leftBottom] = {\n    width: graphic[480][positions.leftTop].width,\n    height: graphic[480][positions.leftTop].height,\n    x: videoMode720[480][positions.leftBottom].x * 1.5,\n    y: videoMode720[480][positions.leftBottom].y * 1.5\n};\n\n\ngraphic[576][positions.leftTop] = {\n    width: videoMode720[576][positions.leftTop].width * 1.5,\n    height: videoMode720[576][positions.leftTop].height * 1.5,\n    x: videoMode720[576][positions.leftTop].x * 1.5,\n    y: videoMode720[576][positions.leftTop].y * 1.5\n};\ngraphic[576][positions.rightTop] = {\n    width: graphic[576][positions.leftTop].width,\n    height: graphic[576][positions.leftTop].height,\n    x: videoMode720[576][positions.rightTop].x * 1.5,\n    y: videoMode720[576][positions.rightTop].y * 1.5\n};\ngraphic[576][positions.rightBottom] = {\n    width: graphic[576][positions.leftTop].width,\n    height: graphic[576][positions.leftTop].height,\n    x: videoMode720[576][positions.rightBottom].x * 1.5,\n    y: videoMode720[576][positions.rightBottom].y * 1.5\n};\ngraphic[576][positions.leftBottom] = {\n    width: graphic[576][positions.leftTop].width,\n    height: graphic[576][positions.leftTop].height,\n    x: videoMode720[576][positions.leftBottom].x * 1.5,\n    y: videoMode720[576][positions.leftBottom].y * 1.5\n};\n\n\ngraphic[720][positions.leftTop] = {\n    width: videoMode720[720][positions.leftTop].width * 1.5,\n    height: videoMode720[720][positions.leftTop].height * 1.5,\n    x: videoMode720[720][positions.leftTop].x * 1.5,\n    y: videoMode720[720][positions.leftTop].y * 1.5\n};\ngraphic[720][positions.rightTop] = {\n    width: graphic[720][positions.leftTop].width,\n    height: graphic[720][positions.leftTop].height,\n    x: videoMode720[720][positions.rightTop].x * 1.5,\n    y: videoMode720[720][positions.rightTop].y * 1.5\n};\ngraphic[720][positions.rightBottom] = {\n    width: graphic[720][positions.leftTop].width,\n    height: graphic[720][positions.leftTop].height,\n    x: videoMode720[720][positions.rightBottom].x * 1.5,\n    y: videoMode720[720][positions.rightBottom].y * 1.5\n};\ngraphic[720][positions.leftBottom] = {\n    width: graphic[720][positions.leftTop].width,\n    height: graphic[720][positions.leftTop].height,\n    x: videoMode720[720][positions.leftBottom].x * 1.5,\n    y: videoMode720[720][positions.leftBottom].y * 1.5\n};\n\n\n// same values\ngraphic[1080] = graphic[720];\n\n\nmodule.exports = graphic;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options for js/less.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 32,\n        availLeft: 48\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 26,\n        availLeft: 54\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width: 1280,\n        // safe zone margins\n        availTop: 30,\n        availBottom: 30,\n        availRight: 40,\n        availLeft: 40\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width: 1920,\n        // safe zone margins\n        availTop: 45,\n        availBottom: 45,\n        availRight: 60,\n        availLeft: 60\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar keys        = require('stb-keys'),\n    ProgressBar = require('spa-component-progress-bar'),\n    Button      = require('stb-component-button'),\n    List        = require('stb-component-list'),\n    Page        = require('stb-component-page'),\n\n    config      = require('../config'),\n\n    $playerSpaceLeftTop     = document.getElementById('playerSpaceLeftTop'),\n    $playerSpaceRightTop    = document.getElementById('playerSpaceRightTop'),\n    $playerSpaceRightBottom = document.getElementById('playerSpaceRightBottom'),\n    $playerSpaceLeftBottom  = document.getElementById('playerSpaceLeftBottom'),\n    $playerSpaceNone        = document.getElementById('playerSpaceNone'),\n    $pageMain               = document.getElementById('pageMain'),\n    $playerSpace            = document.getElementById('playerSpace'),\n    $player                 = document.getElementById('player'),\n\n    PLAYER = {\n        stop: 0,\n        play: 2,\n        pause: 3\n    },\n\n    playerSpaces = {},\n\n    playerPosition   = config.positions.rightBottom,\n    progressInterval = -1,\n\n    lastIntent       = null,\n    appFocused       = false,\n    repositionActive = false,\n    isPlayed         = false,\n    blockFocus       = false,\n    page, progressBar, $pauseButton, buttonList;\n\n\nplayerSpaces[config.positions.leftBottom]  = $playerSpaceLeftBottom;\nplayerSpaces[config.positions.leftTop]     = $playerSpaceLeftTop;\nplayerSpaces[config.positions.rightBottom] = $playerSpaceRightBottom;\nplayerSpaces[config.positions.rightTop]    = $playerSpaceRightTop;\nplayerSpaces[config.positions.none]        = $playerSpaceNone;\n\n\nfunction toggleReposition () {\n    if ( repositionActive ) {\n        // hide spaces and show player\n        playerSpaces[playerPosition].classList.remove('active', 'paused', 'audio');\n\n        $pageMain.className = 'stb-component-page active';\n        $playerSpace.classList.add('active');\n        buttonList.focus();\n    } else {\n        // show spaces and hide player\n        playerSpaces[playerPosition].classList.add('active');\n\n        if ( lastIntent && lastIntent.audio ) {\n            if ( isPlayed ) {\n                playerSpaces[playerPosition].classList.remove('paused');\n            } else {\n                playerSpaces[playerPosition].classList.add('paused');\n            }\n        }\n\n        $pageMain.className = 'stb-component-page active reposition';\n        $playerSpace.classList.remove('active');\n        page.focus();\n\n        if ( playerPosition === config.positions.none ) {\n            $playerSpace.classList.add('active');\n            $playerSpace.innerHTML = lastIntent.data.title;\n        }\n    }\n\n    repositionActive = !repositionActive;\n}\n\n\nfunction setViewport ( position ) {\n    var /* eslint-disable-next-line new-cap */\n        videoResolution = parent.gSTB.RDir('vmode').match(/^(\\d)*/g)[0],\n        viewport  = config.viewports[videoResolution][screen.height][position];\n\n    //console.log('videoResolution: ' + videoResolution);\n    //console.log('viewport: ' + JSON.stringify(viewport));\n\n    switch ( position ) {\n        case config.positions.leftBottom:\n            $playerSpace.innerHTML = '';\n            $player.className = 'lb';\n            break;\n\n        case config.positions.rightTop:\n            $playerSpace.innerHTML = '';\n            $player.className = 'rt';\n            break;\n\n        case config.positions.leftTop:\n            $playerSpace.innerHTML = '';\n            $player.className = 'lt';\n            break;\n\n        case config.positions.rightBottom:\n            $playerSpace.innerHTML = '';\n            $player.className = 'rb';\n            break;\n\n        case config.positions.none:\n            $player.className = 'none';\n            viewport = {width: 0, height: 0, x: 0, y: 0};\n            $playerSpace.classList.add('active');\n            $playerSpace.innerHTML = lastIntent.data.title;\n            break;\n    }\n\n    lastIntent.emit('viewport', viewport);\n    playerPosition = position;\n\n    return viewport;\n}\n\n\nfunction progressBarInit ( duration ) {\n    progressBar.init({\n        max: duration,\n        value: 0\n    });\n\n    progressBar.show();\n    buttonList.focusItem($pauseButton);\n    $pauseButton.classList.remove('disabled');\n    buttonList.data[1].disabled = false;\n}\n\n\nfunction disablePauseButton () {\n    buttonList.focusItem(buttonList.$body.children[0]);\n    buttonList.data[1].disabled = true;\n    $pauseButton.classList.add('disabled');\n}\n\n\npage = new Page({\n    $node: $pageMain\n});\n\nprogressBar = new ProgressBar({\n    $node: document.getElementById('progressBar'),\n    parent: page\n});\n\nbuttonList = new List({\n    $node: document.getElementById('buttonList'),\n    parent: page,\n    size: 4,\n    type: List.prototype.TYPE_HORIZONTAL,\n    data: [\n        {\n            className: 'button-maximize',\n            onclick: function () {\n                appFocused = false;\n                clearInterval(progressInterval);\n                $playerSpace.classList.remove('audio');\n\n                lastIntent.emit('maximize');\n                lastIntent.close(true);\n\n                core.call('hide');\n                core.call('blur');\n                lastIntent = null;\n            }\n        },\n        // {\n        //     className: 'swap',\n        //     onclick: function () {\n        //         lastIntent.emit('swap');\n        //         if ( lastIntent.data.duration ) {\n        //             progressBar.show();\n        //             progressBar.init({\n        //                 max: lastIntent.data.duration,\n        //                 value: 0\n        //             });\n        //         } else {\n        //             progressBar.hide();\n        //         }\n        //\n        //         setTimeout(function () {\n        //             if ( lastIntent.data.mime && lastIntent.data.mime === 'content/audio' ) {\n        //                 $playerSpace.classList.add('audio');\n        //                 lastIntent.audio = true;\n        //             }\n        //         }, 0);\n        //     }\n        // },\n        {\n            className: 'button-pause',\n            onclick: function ( event ) {\n                if ( isPlayed ) {\n                    lastIntent.emit('pause');\n                    event.$item.classList.add('paused');\n                } else {\n                    lastIntent.emit('resume');\n                    event.$item.classList.remove('paused');\n                }\n\n                isPlayed = !isPlayed;\n\n                if ( lastIntent && lastIntent.audio ) {\n                    if ( isPlayed ) {\n                        $playerSpace.classList.remove('paused');\n                    } else {\n                        $playerSpace.classList.add('paused');\n                    }\n                }\n            }\n        },\n        {\n            className: 'button-layout',\n            onclick: function () {\n                setTimeout(function () {\n                    if ( !repositionActive ) {\n                        toggleReposition();\n                    }\n                }, 0);\n            }\n        },\n        {\n            className: 'button-close',\n            onclick: function () {\n                lastIntent.emit('stop');\n                core.call('hide');\n                core.call('blur');\n                appFocused = false;\n                isPlayed = false;\n                clearInterval(progressInterval);\n                core.active = false;\n                lastIntent = null;\n            }\n        }\n    ],\n    render: function ( $item, data ) {\n        $item.button = new Button({\n            $node: $item,\n            className: data.className\n        });\n    },\n    events: {\n        'click:item': function ( event ) {\n            event.$item.data.onclick(event);\n        },\n        keydown: function ( event ) {\n            var isPlayPauseFocused;\n\n            switch ( event.code ) {\n                case keys.up:\n                case keys.down:\n                case keys.right:\n                case keys.left:\n                case keys.pageUp:\n                case keys.pageDown:\n                case keys.home:\n                case keys.end:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    if ( this.$focusItem.data.disabled ) {\n                        this.move(event.code);\n                    }\n                    break;\n\n                case keys.ok:\n                    // there are some listeners\n                    if ( this.events['click:item'] ) {\n                        // notify listeners\n                        this.emit('click:item', {$item: this.$focusItem, event: event});\n                    }\n                    break;\n\n                case keys.playPause:\n                    // console.log('isPlayed: ' + isPlayed);\n                    // console.log('lastIntent: ' + lastIntent);\n                    // console.log('buttonList.data[1].disabled: ' + buttonList.data[1].disabled);\n\n                    if ( lastIntent && !buttonList.data[1].disabled ) {\n                        isPlayPauseFocused = buttonList.$focusItem === $pauseButton;\n\n                        if ( isPlayed ) {\n                            lastIntent.emit('pause');\n                            $pauseButton.className = 'stb-component-button button-pause paused ' + (isPlayPauseFocused ? 'focus' : '');\n                        } else {\n                            lastIntent.emit('resume');\n                            $pauseButton.className = 'stb-component-button button-pause ' + (isPlayPauseFocused ? 'focus' : '');\n                        }\n\n                        isPlayed = !isPlayed;\n\n                        if ( lastIntent.audio ) {\n                            if ( isPlayed ) {\n                                $playerSpace.classList.remove('paused');\n                            } else {\n                                $playerSpace.classList.add('paused');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    }\n});\n\n$pauseButton = buttonList.$body.children[1];\n\npage.addListener('show', function () {\n    buttonList.focus();\n    buttonList.focusIndex(2);\n});\n\npage.addListener('keydown', function ( event ) {\n    var newPosition = null;\n\n    if ( repositionActive ) {\n        switch ( event.code ) {\n            case keys.back:\n            case keys.ok:\n                toggleReposition();\n                break;\n\n            case keys.left:\n                switch ( playerPosition ) {\n                    case config.positions.rightTop:\n                        newPosition = config.positions.leftTop;\n                        break;\n\n                    case config.positions.rightBottom:\n                        newPosition = config.positions.leftBottom;\n                        break;\n                }\n                break;\n\n            case keys.right:\n                switch ( playerPosition ) {\n                    case config.positions.leftTop:\n                        newPosition = config.positions.rightTop;\n                        break;\n\n                    case config.positions.leftBottom:\n                        newPosition = config.positions.rightBottom;\n                        break;\n                }\n                break;\n\n            case keys.up:\n                switch ( playerPosition ) {\n                    case config.positions.rightBottom:\n                        newPosition = config.positions.rightTop;\n                        break;\n\n                    case config.positions.leftBottom:\n                        newPosition = config.positions.leftTop;\n                        break;\n\n                    case config.positions.none:\n                        newPosition = config.positions.rightBottom;\n                        break;\n                }\n                break;\n\n            case keys.down:\n                switch ( playerPosition ) {\n                    case config.positions.rightBottom:\n                        $player.className = 'none';\n                        newPosition = config.positions.none;\n                        break;\n\n                    case config.positions.leftTop:\n                        newPosition = config.positions.leftBottom;\n                        break;\n\n                    case config.positions.rightTop:\n                        newPosition = config.positions.rightBottom;\n                        break;\n                }\n                break;\n        }\n\n        if ( newPosition !== null ) {\n            playerSpaces[playerPosition].classList.remove('active', 'audio', 'paused');\n            setViewport(newPosition);\n            playerSpaces[newPosition].classList.add('active');\n\n            if ( lastIntent && lastIntent.audio ) {\n                if ( isPlayed ) {\n                    playerSpaces[newPosition].classList.remove('paused');\n                } else {\n                    playerSpaces[newPosition].classList.add('paused');\n                }\n            }\n        }\n    }\n});\n\ncore.addListener('hide', function () {\n    if ( repositionActive ) {\n        toggleReposition();\n    }\n\n    $pageMain.classList.remove('active');\n    appFocused = false;\n});\n\ncore.addListener('intent', function ( intent, callback ) {\n    if ( intent.action === 'pip' ) {\n        lastIntent = intent;\n\n        lastIntent.addListener('exit', function () {\n            $pageMain.classList.remove('active');\n            appFocused = false;\n\n            core.call('hide');\n            core.call('blur');\n            clearInterval(progressInterval);\n            lastIntent = null;\n        });\n\n        lastIntent.data.viewport = setViewport(playerPosition);\n        $playerSpace.classList.remove('audio', 'paused');\n        intent.audio = false;\n        $pauseButton.className = 'stb-component-button button-pause';\n\n        setTimeout(function () {\n            if ( intent.mime && intent.mime === 'content/audio' ) {\n                $playerSpace.classList.add('audio');\n                intent.audio = true;\n\n                // player paused\n                if ( intent.data.playerState === PLAYER.pause ) {\n                    $playerSpace.classList.add('paused');\n                    $pauseButton.classList.add('paused');\n                    isPlayed = false;\n                }\n            }\n        }, 0);\n\n        if ( intent.data ) {\n            if ( intent.data.duration ) {\n                progressBarInit(intent.data.duration);\n                $pauseButton.className = 'stb-component-button button-pause focus';\n            } else {\n                disablePauseButton();\n                progressBar.hide();\n\n                setTimeout(function () {\n                    if ( intent.data.duration ) {\n                        progressBarInit(intent.data.duration);\n                    }\n                }, 2000);\n            }\n        } else {\n            progressBar.hide();\n        }\n\n        $pageMain.className = 'stb-component-page';\n        appFocused = false;\n        isPlayed = true;\n        core.call('show');\n        callback(false, {});\n    }\n});\n\ncore.addListener('keydown:' + keys.refresh, function () {\n    if ( lastIntent && !blockFocus ) {\n        if ( appFocused ) {\n            core.call('blur');\n\n            if ( repositionActive ) {\n                toggleReposition();\n            }\n\n            $pageMain.classList.remove('active');\n            appFocused = false;\n        } else {\n            $pageMain.classList.add('active');\n            clearInterval(progressInterval);\n\n            if ( lastIntent.data && lastIntent.data.position ) {\n                progressInterval = setInterval(function () {\n                    progressBar.set(lastIntent.data.position);\n\n                    if ( lastIntent.data.position === lastIntent.data.duration ) {\n                        clearInterval(progressInterval);\n                        $playerSpace.classList.add('paused');\n                        $pauseButton.classList.add('paused');\n                        disablePauseButton();\n                        lastIntent.emit('pause');\n                    }\n                }, 900);\n            } else {\n                progressBar.hide();\n            }\n\n            core.call('show');\n            core.call('focus');\n            appFocused = true;\n        }\n    }\n});\n\ncore.addListener('keydown:' + keys.web, function () {\n    // TODO: remove this hardcore, add into core osd overlay logic\n    core.call('hide');\n    appFocused = false;\n});\n\n// public\nmodule.exports = page;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base progress bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial value\n * @param {number} [config.max=100] max progress value\n * @param {number} [config.min=0] min progress value\n */\nfunction ProgressBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Max progress value.\n     *\n     * @type {number}\n     */\n    this.max = 100;\n\n    /**\n     * Min progress value.\n     *\n     * @type {number}\n     */\n    this.min = 0;\n\n    /**\n     * Initial progress position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Value of the one percent step\n     *\n     * @type {number}\n     */\n    this.step = 1;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'progressBar ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert bar line\n    this.$value = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$value.className = 'value';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nProgressBar.prototype = Object.create(Component.prototype);\nProgressBar.prototype.constructor = ProgressBar;\n\n// set component name\nProgressBar.prototype.name = 'spa-component-progress-bar';\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when progress is end and passed value is more than max value.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/progress.bar~ProgressBar#done\n * @fires module:stb/ui/progress.bar~ProgressBar#change\n */\nProgressBar.prototype.set = function ( value ) {\n    var prevValue = this.value;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n    }\n\n    // value changed but in the given range\n    if ( this.value !== value && value <= this.max && value >= this.min ) {\n        // set new value\n        this.value = value;\n\n        // get value in percents\n        value = Math.abs(this.value - this.min) / this.step;\n\n        if ( value === 100 ) {\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set progress to its maximum value.\n                 *\n                 * @event module:stb/ui/progress.bar~ProgressBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set progress bar width\n        this.$value.style.width = value + '%';\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/progress.bar~ProgressBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous progress value\n             * @property {number} curr new/current progress value\n             */\n            this.emit('change', {curr: this.value, prev: prevValue});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Init or re-init current max or/and min or/and value.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nProgressBar.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set max progress value\n    if ( config.max !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.max) !== config.max ) {\n                throw new Error(__filename + ': config.max value must be a number');\n            }\n        }\n\n        // apply\n        this.max = config.max;\n    }\n\n    // set min progress value\n    if ( config.min !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.min) !== config.min ) {\n                throw new Error(__filename + ': config.min value must be a number');\n            }\n        }\n\n        // apply\n        this.min = config.min;\n    }\n\n    if ( DEVELOP ) {\n        if ( this.min >= this.max ) {\n            throw new Error(__filename + ': this.min value must be less than this.max');\n        }\n    }\n\n    // set actual progress value\n    if ( config.value !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.value) !== config.value ) {\n                throw new Error(__filename + ': config.value must be a number');\n            }\n            if ( config.value > this.max ) {\n                throw new Error(__filename + ': config.value more than config.maximum');\n            }\n            if ( config.value < this.min ) {\n                throw new Error(__filename + ': config.value less than config.minimum');\n            }\n        }\n\n        // apply\n        this.value = config.value;\n    }\n\n    this.step = Math.abs(this.max - this.min) / 100;\n\n    // init bar size, (this.min - this.value) - calculate distance from start\n    this.$value.style.width = (Math.abs(this.min - this.value) / this.step) + '%';\n};\n\n\n// public\nmodule.exports = ProgressBar;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-list');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-list';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]      data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n\n    // set default className if classList property empty or undefined\n    //config.className = 'list ' + (config.className || '');\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'spa-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var i, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( i = 0; i < data.length; i++ ) {\n        // cell value\n        item = data[i];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[i] = {\n                value: data[i]\n            };\n        }\n\n        if ( DEVELOP ) {\n            // if ( !('value' in item) ) {\n            //     throw new Error(__filename + ': field \"value\" is missing');\n            // }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, i;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( i = 0; i < this.size; i++ ) {\n            item = document.createElement('div');\n            item.index = i;\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) {\n                throw new Error(__filename + ': wrong config.data type');\n            }\n        }\n\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, i, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( i = 0; i < this.size; i++ ) {\n            // shortcuts\n            $item    = this.$body.children[i];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Jump to the opposite side.\n *\n * @event module:stb/ui/list~List#cycle\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event module:stb/ui/list~List#overflow\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else {\n                    if ( this.provider ) {\n                        this.provider.get(direction, function ( error, data, pos ) {\n                            if ( error ) {\n                                if ( self.events['data:error'] ) {\n                                    /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                    self.emit('data:error', error);\n                                }\n                            } else {\n                                if ( data ) {\n                                    self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                                }\n                            }\n                        });\n                    } else {\n                        // already at the beginning\n                        if ( this.cycle ) {\n                            // jump to the end of the list\n                            this.move(keys.end);\n                        }\n                        if ( this.events['overflow'] ) {\n                            // notify listeners\n                            this.emit('overflow', {direction: direction, cycle: this.cycle});\n                        }\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else {\n                    if ( this.provider ) {\n                        this.provider.get(direction, function ( error, data, pos ) {\n                            if ( error ) {\n                                if ( self.events['data:error'] ) {\n                                    /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                    self.emit('data:error', error);\n                                }\n                            } else {\n                                if ( data ) {\n                                    self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                                }\n                            }\n                        });\n                    } else {\n                        // already at the beginning\n                        if ( this.cycle ) {\n                            // jump to the beginning of the list\n                            this.move(keys.home);\n                        }\n                        if ( this.events['overflow'] ) {\n                            // notify listeners\n                            this.emit('overflow', {direction: direction, cycle: this.cycle});\n                        }\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({data: data, focusIndex: pos ? pos : 0});\n                        }\n                    }\n                });\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({\n                                data: data,\n                                focusIndex: pos || pos === 0 ? pos : data.length < self.size ?  data.length - 1 : self.size - 1\n                            });\n                        }\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({data: data, focusIndex: pos ? pos : 0});\n                        }\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({\n                                data: data,\n                                focusIndex: pos || pos === 0 ? pos : data.length < self.size ?  data.length - 1 : self.size - 1\n                            });\n                        }\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n"],"sourceRoot":""}