{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-component/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/spa-component-progress-bar/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","addListener","callback","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","index","event","Array","slice","constructor","link","createElement","rel","href","metrics","height","head","appendChild","counter","Component","visible","focusable","$body","parent","children","propagate","className","hide","defaultEvents","keys","forEach","eventName","addEventListener","focus","stopPropagation","child","parentNode","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","setTimeout","isMuted","volumeProgress","max","min","$volumeIcon","$volumePointer","$volumeValue","$notifyIcon","$notifyTitle","visibleVolumeTimeoutId","visibleAspectTimeoutId","abortCallback","appPath","xhr","closeNotification","notifyWidget","buttons","core","plugins","settingsAudio","mute","volume","set","protocol","host","pathname","replace","pages","main","muteWidget","widget","style","display","zIndex","volumeWidget","innerText","XMLHttpRequest","open","onload","innerHTML","responseText","send","$value","curr","clearTimeout","toggleMute","$icon","$title","body","background","overflow","init","timeout","type","onabort","icon","title","buttonConfig","$button","currentButtonIndex","onclick","click","close","update","extendCorePrototype","code","right","left","ok","back","load","environment","language","fs","onMount","state","notify","gettext","ready","window","getCoreInstance","platform","exit","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","error","keydown","eventLocal","keyCode","stop","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","token","contains","toString","toggle","Element","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","backspace","channelNext","tab","channelPrev","enter","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","power","record","info","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","space","pageUp","pageDown","end","home","up","down","insert","del","ProgressBar","step","prevValue","Math","abs","prev","getElementById","top","onoffline","ononline","navigator","onLine","Page","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","ext","JSON","onerror","ontimeout","meta","msgId","context","plural","evalResult","eval"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCCzEA,IAAAC,EAAcpC,EAAQ,GACtBqC,EAAcrC,EAAQ,GAAWqC,MACjCC,EAAA,IAAAF,EA0EAE,EAAAC,MAAAF,EAAAG,SAAAC,SAAAC,OAAAC,UAAA,IAKAL,EAAAM,OAAa5C,EAAQ,GAIrBsC,EAAAO,WAAA,KAYAP,EAAAQ,MAAA,SAAAC,EAAAC,GACA,IAlDAC,EAkDAC,EAAAZ,EAAAO,WAcA,SAAAE,KAAAI,UAEAJ,EAAApC,KAAAoC,EAAAK,GAAyEL,EAAApC,KAAAoC,EAAAK,IAlEzEH,EAwEAX,EAAAO,aAtEAI,EAAAE,SAEAF,EAAAI,MAAAC,UAAAC,OAAA,UACAN,EAAAE,QAAA,EACAb,EAAAO,WAAA,KAEAI,EAAAtC,KAAAsC,EAAAG,GACAH,EAAAtC,KAAAsC,EAAAG,GAKAH,EAAAO,OAAA,SAEAP,EAAAQ,KAAA,SAlDA,SAAAR,EAAAD,IAEAC,KAAAE,SAEAF,EAAAI,MAAAC,UAAAI,IAAA,UACAT,EAAAE,QAAA,EACAb,EAAAO,WAAAI,EAEAA,EAAAtC,KAAAsC,EAAAG,GACAH,EAAAtC,KAAAsC,EAAAG,GAKAH,EAAAO,OAAA,SAEAP,EAAAQ,KAAA,QAA+BT,UA2F/BW,CAAAZ,EAAAC,GAGAY,KAAAJ,OAAA,UAEAI,KAAAH,KAAA,SAAgCI,KAAAX,EAAAY,GAAAf,KAMhC,IAYA5C,EAAAD,QAAAoC,gCCtIA,SAAAF,IAwBAwB,KAAAJ,OAAA,GAIApB,EAAAJ,UAAA,CAaA+B,YAAA,SAAApD,EAAAqD,GAaAJ,KAAAJ,OAAA7C,GAAAiD,KAAAJ,OAAA7C,IAAA,GAEAiD,KAAAJ,OAAA7C,GAAAsD,KAAAD,IAcAE,KAAA,SAAAvD,EAAAqD,GAEA,IAAAG,EAAAP,KAeAA,KAAAJ,OAAA7C,GAAAiD,KAAAJ,OAAA7C,IAAA,GAEAiD,KAAAJ,OAAA7C,GAAAsD,KAAA,SAAAG,IACAD,EAAAE,eAAA1D,EAAAyD,GACAJ,EAAAM,MAAAH,EAAAI,cAgBAC,aAAA,SAAAC,GACA,IAAA9D,EAcA,IAAAA,KAAA8D,EACAA,EAAAxC,eAAAtB,IACAiD,KAAAG,YAAApD,EAAA8D,EAAA9D,KAeA0D,eAAA,SAAA1D,EAAAqD,GAiBAJ,KAAAJ,OAAA7C,KAEAiD,KAAAJ,OAAA7C,GAAAiD,KAAAJ,OAAA7C,GAAA+D,OAAA,SAAAC,GAA0F,OAAAA,IAAAX,IAE1F,IAAAJ,KAAAJ,OAAA7C,GAAAiE,SAEAhB,KAAAJ,OAAA7C,QAAAkE,KAwDApB,KAAA,SAAA9C,GACA,IACAmE,EADAC,EAAAnB,KAAAJ,OAAA7C,GAaA,GAAAoE,EAOA,IAAAD,EAAA,EAA4BA,EAAAC,EAAAH,OAAsBE,IAQlDC,EAAAD,GAAAR,MAAAV,KAAAoB,MAAAhD,UAAAiD,MAAA1E,KAAAgE,UAAA,MAQAnC,EAAAJ,UAAAkD,YAAA9C,EAIAjC,EAAAD,QAAAkC,gCC/QA,IAAAE,EAAUtC,EAAQ,GAGlBG,EAAAD,QAAAoC,gCCDA,IAAAA,EAAUtC,EAAQ,GAwBlBG,EAAAD,QAAA,SAAAS,GACA,IAAAwE,EAAA3C,SAAA4C,cAAA,QAEAD,EAAAE,IAAA,aACAF,EAAAG,KAAA,OAAA3E,EAAA,IAAA2B,EAAAiD,QAAAC,OAAA,OACAhD,SAAAiD,KAAAC,YAAAP,kCC7BA,IAAA7C,EAActC,EAAQ,GACtBoC,EAAcpC,EAAQ,GACtB2F,EAAA,EAuCA,SAAAC,EAAAhD,GAEA,IACAjC,EADAwD,EAAAP,KAyHA,GArHAhB,KAAA,GAmCAgB,KAAAiC,SAAA,EAOAjC,KAAAkC,WAAA,EAOAlC,KAAAP,MAAA,KAQAO,KAAAmC,MAAA,KAOAnC,KAAAoC,OAAA,KAOApC,KAAAqC,SAAA,GAQArC,KAAAsC,YAAAtD,EAAAsD,UAGA9D,EAAA7B,KAAAqD,MAGAA,KAAAP,MAAAT,EAAAS,OAAAb,SAAA4C,cAAA,OAGAxB,KAAAmC,MAAAnD,EAAAmD,OAAAnC,KAAAP,MAKAO,KAAAP,MAAA8C,UAAAvC,KAAAjD,KAAA,KAAAiC,EAAAuD,WAAA,IAGAvC,KAAAR,GAAAR,EAAAQ,IAAAQ,KAAAP,MAAAD,IAAA,MAAAuC,IAGA/C,EAAAoD,QAEApD,EAAAoD,OAAAtC,IAAAE,OAIA,IAAAhB,EAAAiD,SAEAjC,KAAAwC,QAIA,IAAAxD,EAAAkD,YAEAlC,KAAAkC,WAAA,GAIAlC,KAAAyC,cAaA,IAAA1F,KAXAiC,EAAAY,OAAAZ,EAAAY,QAAA,GAWAI,KAAAyC,cAEAzD,EAAAY,OAAA7C,GAAAiC,EAAAY,OAAA7C,IAAAiD,KAAAyC,cAAA1F,GAIAiC,EAAAY,QAEA1C,OAAAwF,KAAA1D,EAAAY,QAAA+C,QAAA,SAAAC,GACArC,EAAAJ,YAAAyC,EAAA5D,EAAAY,OAAAgD,MAKA5D,EAAAqD,UAEArC,KAAAF,IAAAY,MAAAV,KAAAhB,EAAAqD,UAIArC,KAAAP,MAAAoD,iBAAA,iBAAA1B,GAIAZ,EAAAuC,QAGAvC,EAAAX,OAAA,UASAW,EAAAV,KAAA,QAAAsB,GAcAA,EAAA4B,oBAaA/C,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,GAMAwC,EAAA5D,UAAAlB,OAAAY,OAAAU,EAAAJ,WACA4D,EAAA5D,UAAAkD,YAAAU,EAQAA,EAAA5D,UAAAqE,cAAA,KAgBAT,EAAA5D,UAAA0B,IAAA,SAAAkD,GACA,IAAA9B,EAGA,IAAAA,EAAA,EAAoBA,EAAAP,UAAAK,OAA0BE,IAC9C8B,EAAArC,UAAAO,GASAlB,KAAAqC,SAAAhC,KAAA2C,GACAA,EAAAZ,OAAApC,KAGAgD,EAAAvD,OAAA,OAAAuD,EAAAvD,MAAAwD,YACAjD,KAAAmC,MAAAL,YAAAkB,EAAAvD,OAGAuD,EAAAjG,KAAAiG,EAAAxD,GAAAQ,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,GAAAwD,EAAAjG,KAAAiG,EAAAxD,GAIAQ,KAAAJ,OAAA,QASAI,KAAAH,KAAA,OAA8BqD,KAAAF,KA8C9BhB,EAAA5D,UAAAuB,OAAA,WAEAK,KAAAoC,SAQA1D,EAAAO,WAAAkE,kBAAAnD,OACAA,KAAAoD,OACApD,KAAAoC,OAAAU,SAEA9C,KAAAoC,OAAAC,SAAAgB,OAAArD,KAAAoC,OAAAC,SAAAiB,QAAAtD,MAAA,IAIAA,KAAAqC,SAAAM,QAAA,SAAAK,GAOAA,EAAArD,WAGAK,KAAAP,MAAAwD,WAAAM,YAAAvD,KAAAP,OAGAO,KAAAJ,OAAA,WAMAI,KAAAH,KAAA,UAIAG,KAAAJ,OAAA,GAGAI,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,IAeAwC,EAAA5D,UAAA0E,MAAA,SAAA1D,GACA,IAAAH,EAAAP,EAAAO,WACAuE,EAAAvE,EAAAkE,gBAIA,SAAAnD,KAAAkC,WAAAlC,OAAAwD,KAEAA,GAA2BA,EAAAJ,OAK3BnE,EAAAkE,gBAAAK,EAAAxD,KACAwD,EAAA/D,MAAAC,UAAAI,IAAA,SAGAE,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,GAIAgE,EAAA5D,OAAA,UAMA4D,EAAA3D,KAAA,QAAAT,IAGA,IAgBA4C,EAAA5D,UAAAgF,KAAA,WACA,IAAAnE,EAAAP,EAAAO,WACAuE,EAAAvE,EAAAkE,gBAMA,OAHAnD,KAAAP,MAAAC,UAAAC,OAAA,SAGAK,OAAAwD,GACAvE,EAAAkE,gBAAA,KAGAnD,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,GAIAQ,KAAAJ,OAAA,SAMAI,KAAAH,KAAA,SAGA,IAGAG,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,IAIA,IAmCAwC,EAAA5D,UAAAqF,KAAA,SAAArE,EAAAgB,GAIA,OAAAJ,KAAAiC,UAaAjC,KAAAP,MAAAC,UAAAC,OAAA,UAEAK,KAAAiC,SAAA,EAEAjC,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,GAIAQ,KAAAJ,OAAA,SAMAI,KAAAH,KAAA,OAAAT,GAIA,mBAAAgB,GAEAsD,WAAAtD,IAGA,IAiBA4B,EAAA5D,UAAAoE,KAAA,SAAApC,GAEA,QAAAJ,KAAAiC,UAEAjC,KAAAP,MAAAC,UAAAI,IAAA,UAEAE,KAAAiC,SAAA,EAEAjC,KAAAjD,KAAAiD,KAAAR,GACAQ,KAAAjD,KAAAiD,KAAAR,GAIAQ,KAAAJ,OAAA,SAMAI,KAAAH,KAAA,QAIA,mBAAAO,GAEAsD,WAAAtD,IAGA,IASA7D,EAAAD,QAAA0F,gCC/mBA,IAyBA2B,EAzBAjF,EAAatC,EAAQ,GACrBsG,EAAWtG,EAAQ,IAInBwH,EAAA,IAFkBxH,EAAQ,IAE1B,EACAqB,MAAA,EACAoG,IAAA,IACAC,IAAA,IAGAC,EAAA3B,OAAAxD,SAAA4C,cAAA,OACAwC,EAAA5B,OAAAxD,SAAA4C,cAAA,OACAyC,EAAA7B,OAAAxD,SAAA4C,cAAA,OAEA0C,EAAA9B,OAAAxD,SAAA4C,cAAA,OACA2C,EAAA/B,OAAAxD,SAAA4C,cAAA,OAIA4C,GAAA,EACAC,GAAA,EAEAC,EAAA,KAOA5F,EAAA4B,KAAA,kBACA,IAAAiE,EAAAC,EAsEA,SAAAC,IACA/F,EAAAgG,aAAAzC,UACAvD,EAAAgG,aAAAlC,OACA9D,EAAAgG,aAAAzC,SAAA,EACAvD,EAAAgG,aAAAC,SAAA,EACAC,KAAAjI,KAAA,QACAiI,KAAAjI,KAAA,SA1EAiI,KAAAC,QAAAC,gBAEAF,KAAAC,QAAAC,cAAA,CACAC,MAAA,EACAC,OAAA,IACA7E,YAAA,eAMAwD,EAAAiB,KAAAC,QAAAC,cAAAC,KAGAnB,EAAAqB,IAAAL,KAAAC,QAAAC,cAAAE,QAEAT,EAAA1F,SAAAqG,SAAA,KAAArG,SAAAsG,KAAAtG,SAAAuG,SAAAC,QAAA,iBACA3G,EAAAuD,SAAA,EAEAvD,EAAA4G,MAAA,CACAC,KAAcnJ,EAAQ,KAGtBsC,EAAAQ,MAAAR,EAAA4G,MAAAC,MAYA7G,EAAA8G,WAAAZ,KAAAa,OAAA,CACAxD,SAAA,EACArC,OAAA,CACA6D,KAAA,gBAKA/E,EAAA8G,WAAA/F,MAAAiG,MAAAC,QAAA,OACAjH,EAAA8G,WAAA/F,MAAAiG,MAAAE,OAAA,OACAlH,EAAA8G,WAAA/F,MAAA8C,WAAA,0CAEA7D,EAAAmH,aAAAjB,KAAAa,OAAA,CACAxD,SAAA,EACArC,OAAA,CACA6D,KAAA,gBAKA/E,EAAAmH,aAAApG,MAAAiG,MAAAC,QAAA,OACAjH,EAAAmH,aAAApG,MAAA8C,WAAA,0CACA7D,EAAAmH,aAAApG,MAAAiG,MAAAE,OAAA,OAEAlH,EAAAgG,aAAAE,KAAAa,OAAA,CACAxD,SAAA,EACArC,OAAA,CACA6D,KAAA,gBAgBA/E,EAAAgG,aAAAjF,MAAAiG,MAAAC,QAAA,OAEAjH,EAAA8G,WAAA/F,MAAAqG,UAAA,KAEAtB,EAAA,IAAAuB,gBAEAC,KAAA,MAAAzB,EAAA,WAAA7F,EAAAiD,QAAAC,OAAA,QACA4C,EAAAyB,OAAA,WACA,IAAAP,GAYAA,EAAAtD,OAAAxD,SAAA4C,cAAA,UAKA0E,UAAAlG,KAAAmG,aACAd,QAAA,mBAAA3G,EAAA8G,WAAAjD,WACA8C,QAAA,qBAAA3G,EAAAmH,aAAAtD,WACA8C,QAAA,qBAAA3G,EAAAgG,aAAAnC,WAEAH,OAAAxD,SAAAiD,KAAAC,YAAA4D,GAEAhH,EAAA8G,WAAA/F,MAAAiG,MAAAC,QAAA,GACAjH,EAAAmH,aAAApG,MAAAiG,MAAAC,QAAA,GACAjH,EAAAgG,aAAAjF,MAAAiG,MAAAC,QAAA,IAEAnB,EAAA4B,KAAA,MAEA1H,EAAAmH,aAAA1D,MAAAL,YAAAiC,GACAA,EAAAxB,UAAA,yBAEA7D,EAAAmH,aAAAxD,SAAAhC,KAAAuD,GACAA,EAAAxB,OAAA1D,EAAAmH,aAGAjC,EAAAnE,OAAA,OAAAmE,EAAAnE,MAAAwD,YACAvE,EAAAmH,aAAA1D,MAAAL,YAAA8B,EAAAnE,OAGAmE,EAAAnE,MAAA8C,UAAA,wBAEAqB,EAAAyC,OAAA9D,WAAA,eAEAyB,EAAAzB,UAAA,sBACAqB,EAAAnE,MAAAqC,YAAAkC,GAEAtF,EAAAmH,aAAApG,MAAAqC,YAAAmC,GACAA,EAAA1B,UAAA,YACA0B,EAAA6B,UAAAlC,EAAAnG,MAEAmH,KAAAC,QAAAC,cAAA3E,YAAA,yBAAAgB,GACAzC,EAAAmH,aAAApC,OAEAtC,EAAAmF,MAAA,KAAAnF,EAAAmF,MAAA,IACArC,EAAA6B,UAAA3E,EAAAmF,KACA1C,EAAAqB,IAAA9D,EAAAmF,OAGAC,aAAAnC,GACAA,EAAAV,WAAA,WACAhF,EAAAmH,aAAArD,QAnKA,OAuKAoC,KAAAC,QAAAC,cAAA3E,YAAA,uBAAAgB,GAEAzC,EAAAmH,aAAAW,WAAArF,EAAA1D,SAGAyG,EAAA3B,UAAA,QACA4B,EAAA5B,UAAA,QACA7D,EAAAgG,aAAA+B,MAAA/H,EAAAgG,aAAAvC,MAAAL,YAAAoC,GACAxF,EAAAgG,aAAAgC,OAAAhI,EAAAgG,aAAAvC,MAAAL,YAAAqC,GAEAzF,EAAAmH,aAAAW,WAAA,SAAAzB,GACAA,IAAApB,IAIAA,EAAAoB,EAEArG,EAAA8G,WAAA/F,MAAAiG,MAAAC,QAAA,GACAhC,EACAjF,EAAA8G,WAAA/B,OAEA/E,EAAA8G,WAAAhD,SAIA5D,SAAA+H,KAAAjB,MAAAkB,WAAA,wBACAhI,SAAA+H,KAAAjB,MAAAmB,SAAA,SAEAnI,EAAAgG,aAAAoC,KAAA,SAAA9H,GACA,IAAA2F,EAAA3F,EAAA2F,SAAA3F,EAAA2F,QAAA3D,OAAA,gBAqDA,OAnDAhC,EAAA+H,QAAA/H,EAAA+H,SAAA,IACA/H,EAAAgI,KAAAhI,EAAAgI,MAAA,GACA,mBAAAhI,EAAAiI,UACA3C,EAAAtF,EAAAiI,SAGAvI,EAAAgG,aAAAvC,MAAA+D,UAAA,GACAxH,EAAAgG,aAAAvC,MAAAL,YAAApD,EAAAgG,aAAA+B,OACA/H,EAAAgG,aAAAvC,MAAAL,YAAApD,EAAAgG,aAAAgC,QAEAhI,EAAAgG,aAAA+B,MAAAlE,UAAA,QAAAvD,EAAAkI,KACAxI,EAAAgG,aAAAgC,OAAAR,UAAAlH,EAAAmI,MACAzI,EAAAgG,aAAAjF,MAAA8C,UAAA7D,EAAAgG,aAAAnC,UAAA,IAAAvD,EAAAgI,KAAArC,EACAjG,EAAAgG,aAAAzC,SAAA,EAEAjD,EAAA2F,SAAA3F,EAAA2F,QAAA3D,OAAA,GACAtC,EAAAgG,aAAAC,QAAA,GACA3F,EAAA2F,QAAAhC,QAAA,SAAAyE,EAAAlG,GACA,IAAAmG,EAAAjF,OAAAxD,SAAA4C,cAAA,OAEA6F,EAAA9E,UAAA,SACA,IAAArB,IACAxC,EAAAgG,aAAA4C,mBAAA,EACAD,EAAA9E,UAAA,gBAEA8E,EAAAvB,UAAAsB,EAAA3J,MACA4J,EAAAE,QAAA,WACAH,EAAAI,OACAJ,EAAAI,QAEA/C,KAEA/F,EAAAgG,aAAAC,QAAAtE,KAAAgH,GACA3I,EAAAgG,aAAAvC,MAAAL,YAAAuF,KAEA3I,EAAAgG,aAAAjB,OACAmB,KAAAjI,KAAA,QACA+B,EAAAuD,SAAA,EACA2C,KAAAjI,KAAA,WAEA+B,EAAAuD,UACA2C,KAAAjI,KAAA,QACAiI,KAAAjI,KAAA,SAEA+B,EAAAgG,aAAAC,SAAA,EACA4B,aAAAlC,GACAA,EAAAX,WAAA,WACAhF,EAAAgG,aAAAlC,QACaxD,EAAA+H,UAGb,CACAU,MAAAhD,EACAiD,OAAA,SAAAtI,GACAV,EAAAgG,aAAAzC,SACA7C,EAAA+H,QACAzI,EAAAgG,aAAAgC,OAAAR,UAAA9G,EAAA+H,UAOA/E,OAAAuF,oBAAA,SAAAjJ,EAAAgG,aAAAoC,MAEApI,EAAAyB,YAAA,mBAAAgB,GACAzC,EAAAgG,aAAAzC,SAAAvD,EAAAgG,aAAAC,UACAxD,EAAAyG,OAAAlF,EAAAmF,OACAnJ,EAAAgG,aAAAC,QAAAjG,EAAAgG,aAAA4C,oBAAA/E,UAAA,WACA7D,EAAAgG,aAAA4C,mBACA5I,EAAAgG,aAAA4C,qBAAA5I,EAAAgG,aAAAC,QAAA3D,SACAtC,EAAAgG,aAAA4C,mBAAA,GAEA5I,EAAAgG,aAAAC,QAAAjG,EAAAgG,aAAA4C,oBAAA/E,UAAA,gBACapB,EAAAyG,OAAAlF,EAAAoF,MACbpJ,EAAAgG,aAAAC,QAAAjG,EAAAgG,aAAA4C,oBAAA/E,UAAA,WACA7D,EAAAgG,aAAA4C,mBACA5I,EAAAgG,aAAA4C,mBAAA,IACA5I,EAAAgG,aAAA4C,mBAAA5I,EAAAgG,aAAAC,QAAA3D,OAAA,GAEAtC,EAAAgG,aAAAC,QAAAjG,EAAAgG,aAAA4C,oBAAA/E,UAAA,gBACapB,EAAAyG,OAAAlF,EAAAqF,GACbrJ,EAAAgG,aAAAC,QAAAjG,EAAAgG,aAAA4C,oBAAAC,UACapG,EAAAyG,OAAAlF,EAAAsF,OACb,OAAA1D,IACAA,IACAA,EAAA,MAEAG,QAMQrI,EAAQ,IAAa6L,KAAA,CAAQlL,KAAA6H,KAAAsD,YAAAC,UAAgC,WACrEvD,KAAAC,QAAAuD,GAAAC,QAAA,SAAAC,GAEAA,EACA1D,KAAA2D,OAAA,CACApB,MAAAqB,QAAA,2BACAtB,KAAA,SAGAtC,KAAA2D,OAAA,CACApB,MAAAqB,QAAA,0BACAtB,KAAA,UAKAxI,EAAA+J,0CCxUA,IAAA/J,EAAatC,EAAQ,GACrBwD,EAAaxD,EAAQ,GAIrBsM,OAAA9D,KAAA8D,OAAAtG,OAAAuG,gBAAAD,OAAAhK,GAGAtC,EAAQ,IAGRA,EAAQ,IAGRA,EAAQ,EAARA,CAAyB,OAGzBA,EAAQ,IAGRA,EAAQ,EAARA,CAAyB,OAOzBsC,EAAAkK,SAAA,MAKAlK,EAAA+J,MAAA,WAIAC,OAAA9D,KAAAjI,KAAA,cAWA+B,EAAAmK,KAAA,WACAnK,EAAAkB,OAAA,SACAlB,EAAAmB,KAAA,QAGA+E,KAAAjI,KAAA,SAIAiD,EAAAqI,KAAA,SAAA9G,GAEAvC,SAAA+H,KAAAmC,aAAA,WAAApK,EAAAkK,UAEAhE,KAAA6D,MACA/J,EAAAkB,OAAA,SAEAlB,EAAAmB,KAAA,WAGA+E,KAAAtE,KAAA,kBAEA5B,EAAAkB,OAAAuB,EAAA6F,OAEAtI,EAAAmB,KAAAsB,EAAA6F,KAAA7F,MAaAvB,EAAAmJ,YAAA,SAAA5H,GACAA,EAAA6H,kBAMA9L,OAAAwF,KAAA9C,GAAA+C,QAAA,SAAA5F,GACA2L,OAAA7F,iBAAA9F,EAAA6C,EAAA7C,MAaAR,EAAAD,QAAAoC,gCC1GAnC,EAAAD,QAAA,CAQAmC,MAAA,SAAAE,GACA,IAAAS,EAAA,GAWA,OARAT,EAAAsK,MAAA,KAAAtG,QAAA,SAAAuG,GAGA,KAFAA,IAAAD,MAAA,MAEAjI,SACA5B,EAAA8J,EAAA,IAAAC,mBAAAD,EAAA,OAIA9J,GAWAgK,UAAA,SAAAC,GACA,IAAAjK,EAAA,GAMA,OAJAlC,OAAAwF,KAAA2G,GAAA1G,QAAA,SAAA5F,GACAqC,EAAAiB,KAAAtD,EAAA,IAAAuM,mBAAAD,EAAAtM,OAGAqC,EAAAmK,KAAA,qCC3CAhN,EAAAD,QAAA,iCCOA,IAAAoC,EAAUtC,EAAQ,GAIlBG,EAAAD,QAAA,CACAkN,iBAAA,SAAArI,GAQAzC,EAAAkB,OAAA,QAEAlB,EAAAmB,KAAA,MAAAsB,IAiBA8G,KAAA,SAAA9G,GAcAzC,EAAAkB,OAAAuB,EAAA6F,OAEAtI,EAAAmB,KAAAsB,EAAA6F,KAAA7F,IAoCAsI,OAAA,SAAAtI,GASAzC,EAAAkB,OAAAuB,EAAA6F,OAEAtI,EAAAmB,KAAAsB,EAAA6F,KAAA7F,IAsBAuI,MAAA,SAAAvI,KAoBAwI,QAAA,SAAAxI,GACA,IAKAgC,EALA9D,EAAAX,EAAAO,WACA2K,EAAA,CACAhC,KAAAzG,EAAA0I,QACAC,MAAA,GAiBA3I,EAAA4I,UAA+BH,EAAAhC,MAAA,KAC/BzG,EAAA6I,SAA+BJ,EAAAhC,MAAA,KAC/BzG,EAAA8I,WAA+BL,EAAAhC,MAAA,MAQ/BzE,EAAA9D,EAAA8D,kBAGAA,IAAA9D,IAEA8D,EAAAvD,OAAAuB,EAAA6F,OAEA7D,EAAAtD,KAAAsB,EAAA6F,KAAA4C,EAAAzI,IAMAyI,EAAAE,MACA3G,EAAAb,WACAa,EAAAf,QACAe,EAAAf,OAAAxC,OAAAuB,EAAA6F,OAEA7D,EAAAf,OAAAvC,KAAAsB,EAAA6F,KAAA4C,EAAAzI,IAKAyI,EAAAE,OAEAzK,EAAAO,OAAAuB,EAAA6F,OAEA3H,EAAAQ,KAAAsB,EAAA6F,KAAA4C,EAAAzI,GAIAA,EAAA2I,MAEApL,EAAAkB,OAAAuB,EAAA6F,OAEAtI,EAAAmB,KAAAsB,EAAA6F,KAAA4C,EAAAzI,KAoBA+I,SAAA,SAAA/I,GACA,IAAA9B,EAAAX,EAAAO,WAcAI,EAAA8D,iBAAA9D,EAAA8D,kBAAA9D,GAEAA,EAAA8D,gBAAAvD,OAAAuB,EAAA6F,OAEA3H,EAAA8D,gBAAAtD,KAAAsB,EAAA6F,KAAA7F,IAmEAgJ,WAAA,SAAAhJ,GACA,IAAA9B,EAAAX,EAAAO,WAcAI,EAAA8D,iBAAA9D,EAAA8D,kBAAA9D,GAEAA,EAAA8D,gBAAAvD,OAAAuB,EAAA6F,OAEA3H,EAAA8D,gBAAAtD,KAAAsB,EAAA6F,KAAA7F,GAKAA,EAAA2I,MAEAzK,EAAAO,OAAAuB,EAAA6F,OAEA3H,EAAAQ,KAAAsB,EAAA6F,KAAA7F,mCChVA,IAAAvC,SAAAwL,gBAAA1K,UAAA,CACA,IAAAtB,EAAAgD,MAAAhD,UACAkF,EAAAlF,EAAAkF,QACAjC,EAAAjD,EAAAiD,MACAhB,EAAAjC,EAAAiC,KACAgD,EAAAjF,EAAAiF,OACAkG,EAAAnL,EAAAmL,KAEAb,OAAA2B,aAAA,SAAAC,GAEA,GADAtK,KAAAuK,SAAAD,EACAA,EAAA/H,YAAAvC,KAAAwK,YAAA,CAEA,GADAxK,KAAAwK,YAAAF,EAAA/H,WACAvC,KAAAwK,YAAoC,OACpC,IACAhO,EADAiO,EAAAzK,KAAAwK,YAAAnF,QAAA,iBAAA4D,MAAA,OAEA,IAAAzM,EAAA,EAAuBA,EAAAiO,EAAAzJ,OAAoBxE,IAC3C6D,EAAA1D,KAAAqD,KAAAyK,EAAAjO,MAKAkM,OAAA2B,aAAAjM,UAAA,CACA0B,IAAA,SAAA4K,GACA1K,KAAA2K,SAAAD,KACArK,EAAA1D,KAAAqD,KAAA0K,GACA1K,KAAAuK,SAAAhI,UAAAlB,EAAA1E,KAAAqD,KAAA,GAAAuJ,KAAA,OAGAoB,SAAA,SAAAD,GACA,WAAApH,EAAA3G,KAAAqD,KAAA0K,IAGAxH,KAAA,SAAAhC,GACA,OAAAlB,KAAAkB,IAAA,MAGAvB,OAAA,SAAA+K,GACA,IAAAlO,EAAA8G,EAAA3G,KAAAqD,KAAA0K,IACA,IAAAlO,IAGA6G,EAAA1G,KAAAqD,KAAAxD,EAAA,GACAwD,KAAAuK,SAAAhI,UAAAlB,EAAA1E,KAAAqD,KAAA,GAAAuJ,KAAA,OAGAqB,SAAA,WACA,OAAArB,EAAA5M,KAAAqD,KAAA,MAGA6K,OAAA,SAAAH,GAMA,OALA1K,KAAA2K,SAAAD,GAGA1K,KAAAL,OAAA+K,GAFA1K,KAAAF,IAAA4K,GAIA1K,KAAA2K,SAAAD,KAIAxN,OAAAC,eAAA2N,QAAA1M,UAAA,aACAf,IAAA,WACA,WAAAqL,OAAA2B,aAAArK,wCC9DA,IAAAtB,EAActC,EAAQ,GACtBuF,EAAcvF,EAAQ,IAItBsC,EAAAiD,UAAAjD,EAAAC,MAAAoM,eAAApJ,EAAAqJ,OAAApJ,SAAAD,EAAA,KAGAjD,EAAAiD,QAAAsJ,YAAAvM,EAAAiD,QAAAC,QAAAlD,EAAAiD,QAAAuJ,SAAAxM,EAAAiD,QAAAwJ,aACAzM,EAAAiD,QAAAyJ,WAAA1M,EAAAiD,QAAA0J,OAAA3M,EAAAiD,QAAA2J,UAAA5M,EAAAiD,QAAA4J,0CCVAhP,EAAAD,QAAA,CACAkP,IAAA,CAEA5J,OAAA,IACAyJ,MAAA,IAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,IAKAG,IAAA,CAEA7J,OAAA,IACAyJ,MAAA,IAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,IAKAI,IAAA,CAEA9J,OAAA,IACAyJ,MAAA,KAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,IAKAK,KAAA,CAEA/J,OAAA,KACAyJ,MAAA,KAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,mCC/CA,IAEAM,EAFAlN,EAAUtC,EAAQ,IAQlBwP,EAAAhN,SAAA4C,cAAA,SACAC,IAAA,aACAmK,EAAAlK,KAAAgH,OAAA9D,KAAAiH,MAAAC,KAAApN,EAAAiD,QAAAC,OAAA,OACAhD,SAAAiD,KAAAC,YAAA8J,GAIArP,EAAAD,QAAAsP,gCCTA,IAAAlJ,EAAWtG,EAAQ,IAInBsG,EAAAsF,KAAAtF,EAAAqJ,UACArJ,EAAAsJ,YAAAtJ,EAAAuJ,IACAvJ,EAAAwJ,YAAAxJ,EAAAuJ,IAAA,IACAvJ,EAAAqF,GAAArF,EAAAyJ,MACAzJ,EAAAmG,KAAAnG,EAAA0J,OACA1J,EAAA2J,SAAA,IACA3J,EAAA4J,WAAA,IACA5J,EAAA6J,GAAA,OACA7J,EAAA8J,GAAA,OACA9J,EAAA+J,GAAA,OACA/J,EAAAgK,GAAA,OACAhK,EAAAiK,QAAA,OACAjK,EAAAkK,MAAA,OACAlK,EAAAmK,MAAA,OACAnK,EAAAuC,IAAA,OACAvC,EAAAoK,GAAA,OACApK,EAAAqK,KAAA,OACArK,EAAAhE,IAAA,OACAgE,EAAAsK,OAAA,MACAtK,EAAAuK,QAAA,MACAvK,EAAAwK,MAAA,MACAxK,EAAAyK,QAAA,MACAzK,EAAA0K,SAAA,MACA1K,EAAA2K,WAAA,MACA3K,EAAA4K,aAAA,MACA5K,EAAA6K,UAAA,MACA7K,EAAA8K,MAAA,EACA9K,EAAA+K,OAAA,EACA/K,EAAAoH,KAAA,MACApH,EAAAgL,MAAA,MACAhL,EAAAiL,OAAA,MACAjL,EAAAkL,KAAA,MACAlL,EAAAqC,KAAA,OACArC,EAAAmL,OAAA,GACAnL,EAAAoL,OAAA,GACApL,EAAAqL,OAAA,GACArL,EAAAsL,OAAA,GACAtL,EAAAuL,OAAA,GACAvL,EAAAwL,OAAA,GACAxL,EAAAyL,OAAA,GACAzL,EAAA0L,OAAA,GACA1L,EAAA2L,OAAA,GACA3L,EAAA4L,OAAA,GAIA/R,EAAAD,QAAAoG,gCCvDAnG,EAAAD,QAAA,CACAyP,UAAA,EACAE,IAAA,EACAE,MAAA,GACAC,OAAA,GACAmC,MAAA,GACAC,OAAA,GACAC,SAAA,GACAC,IAAA,GACAC,KAAA,GACA7G,KAAA,GACA8G,GAAA,GACA/G,MAAA,GACAgH,KAAA,GACAC,OAAA,GAEAC,IAAA,kCCjBA,IAAA/M,EAAgB5F,EAAQ,GAcxB,SAAA4S,EAAAhQ,GAEAA,KAAA,GAiBAgB,KAAA6D,IAAA,IAOA7D,KAAA8D,IAAA,EAOA9D,KAAAvC,MAAA,EAOAuC,KAAAiP,KAAA,EAGAjQ,EAAAkD,UAAAlD,EAAAkD,YAAA,EAMAF,EAAArF,KAAAqD,KAAAhB,GAGAgB,KAAAqG,OAAArG,KAAAmC,MAAAL,YAAAlD,SAAA4C,cAAA,QAGAxB,KAAAqG,OAAA9D,UAAA,QAGAvC,KAAA8G,KAAA9H,GAKAgQ,EAAA5Q,UAAAlB,OAAAY,OAAAkE,EAAA5D,WACA4Q,EAAA5Q,UAAAkD,YAAA0N,EAGAA,EAAA5Q,UAAArB,KAAA,6BAaAiS,EAAA5Q,UAAA6G,IAAA,SAAAxH,GACA,IAAAyR,EAAAlP,KAAAvC,MAYA,OAAAuC,KAAAvC,cAAAuC,KAAA6D,KAAApG,GAAAuC,KAAA8D,MAEA9D,KAAAvC,QAKA,OAFAA,EAAA0R,KAAAC,IAAApP,KAAAvC,MAAAuC,KAAA8D,KAAA9D,KAAAiP,OAIAjP,KAAAJ,OAAA,SAMAI,KAAAH,KAAA,QAKAG,KAAAqG,OAAAX,MAAA2F,MAAA5N,EAAA,IAGAuC,KAAAJ,OAAA,WAUAI,KAAAH,KAAA,UAAiCyG,KAAAtG,KAAAvC,MAAA4R,KAAAH,KAGjC,IAaAF,EAAA5Q,UAAA0I,KAAA,SAAA9H,QAWAiC,IAAAjC,EAAA6E,MAQA7D,KAAA6D,IAAA7E,EAAA6E,UAIA5C,IAAAjC,EAAA8E,MAQA9D,KAAA8D,IAAA9E,EAAA8E,UAUA7C,IAAAjC,EAAAvB,QAcAuC,KAAAvC,MAAAuB,EAAAvB,OAGAuC,KAAAiP,KAAAE,KAAAC,IAAApP,KAAA6D,IAAA7D,KAAA8D,KAAA,IAGA9D,KAAAqG,OAAAX,MAAA2F,MAAA8D,KAAAC,IAAApP,KAAA8D,IAAA9D,KAAAvC,OAAAuC,KAAAiP,KAAA,KAKA1S,EAAAD,QAAA0S,gCC9NA,IAAAtQ,EAAWtC,EAAQ,GAInBiD,EAAA,IAFWjD,EAAQ,IAEnB,EACAqD,MAAAb,SAAA0Q,eAAA,cAIA1K,KAAAzE,YAAA,kBACAzB,EAAAuD,SACA2C,KAAAjI,KAAA,QAEA+B,EAAAuD,SAAA,EACAvD,EAAAgG,aAAAlC,SAIAkG,OAAA6G,IAAA3Q,SAAA+H,KAAA6I,UAAA5Q,SAAA+H,KAAA8I,SAAA,WACAC,UAAAC,OACAjR,EAAAgG,aAAAoC,KAAA,CACAK,MAAAqB,QAAA,kCACAtB,KAAA,QACAF,KAAA,YAGAtI,EAAAgG,aAAAoC,KAAA,CACAK,MAAAqB,QAAA,qCACAtB,KAAA,QACAF,KAAA,UACArC,QAAA,CACA,CACAlH,MAAA+K,QAAA,WASAjM,EAAAD,QAAA+C,gCC1CA9C,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,mDCFA,IAAAiF,EAAgB5F,EAAQ,GAwBxB,SAAAwT,EAAA5Q,GAEAA,KAAA,GAoBAgB,KAAAT,QAAA,EAQAS,KAAAmD,gBAAA,KAMAnB,EAAArF,KAAAqD,KAAAhB,GAGAgB,KAAAT,OAAAS,KAAAP,MAAAC,UAAAiL,SAAA,UAGA,OAAA3K,KAAAP,MAAAwD,YACArE,SAAA+H,KAAA7E,YAAA9B,KAAAP,OAIAO,KAAAX,KAAAW,KAKA4P,EAAAxR,UAAAlB,OAAAY,OAAAkE,EAAA5D,WACAwR,EAAAxR,UAAAkD,YAAAsO,EAGAA,EAAAxR,UAAArB,KAAA,qBAIAR,EAAAD,QAAAsT,gCCpFA,IAAApR,EAAcpC,EAAQ,GACtByT,EAAczT,EAAQ,IACtB0T,EAAA,IAAAtR,EAWA,SAAAuR,EAAA3Q,GACA,IAAAoJ,EAAA,IAAAqH,EAAAzQ,GAOA,OAJAsJ,OAAAF,QAAAE,OAAAsH,EAAAxH,UACAE,OAAAuH,SAAAzH,EAAAyH,SACAvH,OAAAwH,SAAA1H,EAAA0H,SAEA1H,EAOAsH,EAAAK,gBAAA,KAcAL,EAAA7H,KAAA,SAAAjJ,EAAAoB,GACA,IAAAoE,EAgBA,OAJAxF,EAAAoR,IAAApR,EAAAoR,KAAA,OACApR,EAAA8M,KAAA9M,EAAA8M,MAAA,OAGA9M,EAAAjC,OAAA+S,EAAAK,iBAEAJ,IACA3P,EAAA,OAEA,KAIAoE,EAAA,IAAAuB,gBAEAE,OAAA,WAGA,IAGA8J,EAFAM,KAAA5R,MAAA+F,EAAA2B,eAGA/F,EAAA,MAGA0P,EAAAlQ,OAAA,SAEAkQ,EAAAjQ,KAAA,QAES,MAAA6J,GACTlF,EAAA8L,QAAA5G,KAIAlF,EAAA+L,UAAA/L,EAAA8L,QAAA,SAAA5G,GACAqG,IACA3P,EAAAsJ,GAGAoG,EAAAlQ,OAAA,UAEAkQ,EAAAjQ,KAAA,QAAA6J,IAIAlF,EAAAwB,KAAA,MAAAhH,EAAA8M,KAAA,IAAA9M,EAAAjC,KAAA,IAAAiC,EAAAoR,KAAA,GACA5L,EAAA4B,KAAA,OAEA,IAKA7J,EAAAD,QAAAwT,6DCpGA,SAAAD,QAAA7Q,QACA,IAAAI,KAAAoR,KAGAxR,eAAA,GACAI,KAAAJ,OAAAI,MAAA,GACAA,KAAA,IAAAA,KAAA,QAGAoR,KAAAxR,OAAAwR,KASAxQ,KAAAwI,QAAA,SAAAiI,GACA,OAAArR,KAAA,IAAAqR,OAYAzQ,KAAAiQ,SAAA,SAAAS,EAAAD,GACA,OAAArR,KAAAsR,IAAAtR,KAAAsR,GAAAD,OAaAzQ,KAAAkQ,SAAA,SAAAO,MAAAE,OAAAlT,OAIA,IAAAQ,EAAA2S,WAQA,OAAAxR,MAAAoR,MAAApR,KAAA,IAAAqR,QACAG,WAAAC,KAAA,OAAApT,MAAA,KAAiD+S,KAAAG,QAEjD,kBAAAC,aACAA,wBAIAxR,KAAA,IAAAqR,OAAAG,aAIA,IAAAnT,MAAAgT,MAAAE,QAMAd,QAAAzR,UAAAkD,YAAAuO,QAIAtT,OAAAD,QAAAuT","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n/* eslint new-cap: 0 */\n/* eslint vars-on-top: 0 */\nvar app    = require('mag-app'),\n    keys = require('stb-keys'),\n\n    ProgressBar = require('spa-component-progress-bar'),\n\n    volumeProgress = new ProgressBar({\n        value: 0,\n        max: 100,\n        min: 0\n    }),\n\n    $volumeIcon    = parent.document.createElement('div'),\n    $volumePointer = parent.document.createElement('div'),\n    $volumeValue   = parent.document.createElement('div'),\n\n    $notifyIcon    = parent.document.createElement('div'),\n    $notifyTitle   = parent.document.createElement('div'),\n\n    hideTimeout = 5000,\n\n    visibleVolumeTimeoutId = -1,\n    visibleAspectTimeoutId = -1,\n\n    abortCallback = null,\n\n    isMuted;\n\n\n// main application events\n/* eslint-disable-next-line max-lines-per-function */\napp.once('load', function load () {\n    var appPath, xhr;\n\n    if ( !core.plugins.settingsAudio ) {\n        // platforms without audio settings\n        core.plugins.settingsAudio = {\n            mute: false,\n            volume: 100,\n            addListener: function () {\n                // yep i need this\n            }\n        };\n    }\n\n    isMuted = core.plugins.settingsAudio.mute;\n    console.log(core.plugins.settingsAudio.mute);\n    console.log(core.plugins.settingsAudio.volume);\n    volumeProgress.set(core.plugins.settingsAudio.volume);\n\n    appPath = location.protocol + '//' + location.host + (location.pathname.replace('index.html', ''));\n    app.visible = false;\n    // set pages\n    app.pages = {\n        main: require('./pages/main')\n    };\n    // profile loaded\n    app.route(app.pages.main);\n\n    if ( DEVELOP ) {\n        (function () {\n            var elements = parent.document.querySelectorAll('[style=\"z-index: 1000;\"]');\n\n            [].map.call(elements, function ( node ) {\n                node.parentNode.removeChild(node);\n            });\n        })();\n    }\n\n    app.muteWidget = core.widget({\n        visible: false,\n        events: {\n            show: function () {\n                // app.volumeWidget.hide();\n            }\n        }\n    });\n    app.muteWidget.$node.style.display = 'none';\n    app.muteWidget.$node.style.zIndex = '1003';\n    app.muteWidget.$node.className += ' theme-main theme-launcher-color active';\n\n    app.volumeWidget = core.widget({\n        visible: false,\n        events: {\n            show: function () {\n                // app.muteWidget.hide();\n            }\n        }\n    });\n    app.volumeWidget.$node.style.display = 'none';\n    app.volumeWidget.$node.className += ' theme-main theme-launcher-color active';\n    app.volumeWidget.$node.style.zIndex = '1002';\n\n    app.notifyWidget = core.widget({\n        visible: false,\n        events: {\n            show: function () {\n                // stub\n            }\n        }\n    });\n\n    function closeNotification () {\n        if ( app.notifyWidget.visible ) {\n            app.notifyWidget.hide();\n            app.notifyWidget.visible = false;\n            app.notifyWidget.buttons = false;\n            core.call('hide');\n            core.call('blur');\n        }\n    }\n\n    app.notifyWidget.$node.style.display = 'none';\n\n    app.muteWidget.$node.innerText = 'B';\n\n    xhr = new XMLHttpRequest();\n    console.log(appPath + 'css/app.' + app.metrics.height + '.css');\n    xhr.open('GET', appPath + 'css/app.' + app.metrics.height + '.css');\n    xhr.onload = function () {\n        var style;\n\n        if ( DEVELOP ) {\n            try {\n                style = parent.document.querySelector('[name=osd-style]');\n                if ( style ) {\n                    style.parentNode.removeChild(style);\n                }\n            } catch ( error ) {\n                console.error(error);\n            }\n        }\n        style = parent.document.createElement('style');\n        if ( DEVELOP ) {\n            style.setAttribute('name', 'osd-style');\n        }\n\n        style.innerHTML = this.responseText\n            .replace(/#muteWidget/g, '.' + app.muteWidget.className)\n            .replace(/#volumeWidget/g, '.' + app.volumeWidget.className)\n            .replace(/#notifyWidget/g, '.' + app.notifyWidget.className);\n\n        parent.document.head.appendChild(style);\n\n        app.muteWidget.$node.style.display = '';\n        app.volumeWidget.$node.style.display = '';\n        app.notifyWidget.$node.style.display = '';\n    };\n    xhr.send(null);\n\n    app.volumeWidget.$body.appendChild($volumeIcon);\n    $volumeIcon.className = 'theme-icon icon volume';\n    // apply\n    app.volumeWidget.children.push(volumeProgress);\n    volumeProgress.parent = app.volumeWidget;\n\n    // correct DOM parent/child connection if necessary\n    if ( volumeProgress.$node && volumeProgress.$node.parentNode === null ) {\n        app.volumeWidget.$body.appendChild(volumeProgress.$node);\n    }\n\n    volumeProgress.$node.className = 'component progressBar';\n\n    volumeProgress.$value.className += ' theme-focus';\n\n    $volumePointer.className = 'pointer theme-focus';\n    volumeProgress.$node.appendChild($volumePointer);\n\n    app.volumeWidget.$node.appendChild($volumeValue);\n    $volumeValue.className = 'textValue';\n    $volumeValue.innerText = volumeProgress.value;\n\n    core.plugins.settingsAudio.addListener('volume:change', function ( event ) {\n        app.volumeWidget.show();\n\n        if ( event.curr <= 100 && event.curr >= 0 ) {\n            $volumeValue.innerText = event.curr;\n            volumeProgress.set(event.curr);\n        }\n\n        clearTimeout(visibleVolumeTimeoutId);\n        visibleVolumeTimeoutId = setTimeout(function (  ) {\n            app.volumeWidget.hide();\n        }, hideTimeout);\n    });\n\n    core.plugins.settingsAudio.addListener('mute:change', function ( event ) {\n        console.log(JSON.stringify(event.value));\n        app.volumeWidget.toggleMute(event.value);\n    });\n\n    $notifyIcon.className = 'icon ';\n    $notifyTitle.className = 'title';\n    app.notifyWidget.$icon = app.notifyWidget.$body.appendChild($notifyIcon);\n    app.notifyWidget.$title = app.notifyWidget.$body.appendChild($notifyTitle);\n\n    app.volumeWidget.toggleMute = function ( mute ) {\n        if ( mute === isMuted ) {\n            return;\n        }\n\n        isMuted = mute;\n\n        app.muteWidget.$node.style.display = '';\n        if ( isMuted ) {\n            app.muteWidget.show();\n        } else {\n            app.muteWidget.hide();\n        }\n    };\n\n    document.body.style.background = 'rgba(24, 24, 24, 0.7)';\n    document.body.style.overflow = 'hidden';\n\n    app.notifyWidget.init = function ( config ) {\n        var buttons = (config.buttons && config.buttons.length > 0) ? ' control' : '';\n\n        config.timeout = config.timeout || 5000;\n        config.type = config.type || '';\n        if ( typeof config.onabort === 'function' ) {\n            abortCallback = config.onabort;\n        }\n\n        app.notifyWidget.$body.innerHTML = '';\n        app.notifyWidget.$body.appendChild(app.notifyWidget.$icon);\n        app.notifyWidget.$body.appendChild(app.notifyWidget.$title);\n\n        app.notifyWidget.$icon.className = 'icon ' + config.icon;\n        app.notifyWidget.$title.innerHTML = config.title;\n        app.notifyWidget.$node.className = app.notifyWidget.className + ' ' + config.type + buttons;\n        app.notifyWidget.visible = true;\n\n        if ( config.buttons && config.buttons.length > 0 ) {\n            app.notifyWidget.buttons = [];\n            config.buttons.forEach(function ( buttonConfig, index ) {\n                var $button = parent.document.createElement('div');\n\n                $button.className = 'button';\n                if ( index === 0 ) {\n                    app.notifyWidget.currentButtonIndex = 0;\n                    $button.className = 'button focus';\n                }\n                $button.innerText = buttonConfig.value;\n                $button.onclick = function () {\n                    if ( buttonConfig.click ) {\n                        buttonConfig.click();\n                    }\n                    closeNotification();\n                };\n                app.notifyWidget.buttons.push($button);\n                app.notifyWidget.$body.appendChild($button);\n            });\n            app.notifyWidget.show();\n            core.call('show');\n            app.visible = true;\n            core.call('focus');\n        } else {\n            if ( app.visible ) {\n                core.call('hide');\n                core.call('blur');\n            }\n            app.notifyWidget.buttons = false;\n            clearTimeout(visibleAspectTimeoutId);\n            visibleAspectTimeoutId = setTimeout(function (  ) {\n                app.notifyWidget.hide();\n            }, config.timeout);\n        }\n\n        return {\n            close: closeNotification,\n            update: function ( data ) {\n                if ( app.notifyWidget.visible ) {\n                    if ( data.title ) {\n                        app.notifyWidget.$title.innerHTML = data.title;\n                    }\n                }\n            }\n        };\n    };\n\n    parent.extendCorePrototype('notify', app.notifyWidget.init);\n\n    app.addListener('keydown',  function ( event ) {\n        if ( app.notifyWidget.visible && app.notifyWidget.buttons ) {\n            if ( event.code === keys.right ) {\n                app.notifyWidget.buttons[app.notifyWidget.currentButtonIndex].className = 'button';\n                ++app.notifyWidget.currentButtonIndex;\n                if ( app.notifyWidget.currentButtonIndex === app.notifyWidget.buttons.length ) {\n                    app.notifyWidget.currentButtonIndex = 0;\n                }\n                app.notifyWidget.buttons[app.notifyWidget.currentButtonIndex].className = 'button focus';\n            } else if ( event.code === keys.left ) {\n                app.notifyWidget.buttons[app.notifyWidget.currentButtonIndex].className = 'button';\n                --app.notifyWidget.currentButtonIndex;\n                if ( app.notifyWidget.currentButtonIndex < 0 ) {\n                    app.notifyWidget.currentButtonIndex = app.notifyWidget.buttons.length - 1;\n                }\n                app.notifyWidget.buttons[app.notifyWidget.currentButtonIndex].className = 'button focus';\n            } else if ( event.code === keys.ok ) {\n                app.notifyWidget.buttons[app.notifyWidget.currentButtonIndex].onclick();\n            } else if ( event.code === keys.back ) {\n                if ( abortCallback !== null ) {\n                    abortCallback();\n                    abortCallback = null;\n                }\n                closeNotification();\n            }\n        }\n    });\n\n    if ( PLATFORM === 'MAG' ) {\n        require('spa-gettext').load({name: core.environment.language}, function () {\n            core.plugins.fs.onMount = function ( state ) {\n                console.log(state);\n                if ( state ) {\n                    core.notify({\n                        title: gettext('New device is connected'),\n                        icon: 'info'\n                    });\n                } else {\n                    core.notify({\n                        title: gettext('Device is disconnected'),\n                        icon: 'info'\n                    });\n                }\n            };\n\n            app.ready();\n        });\n    }\n\n    if ( DEVELOP ) {\n        /* eslint-disable */\n        core.addListener('keydown:119', function () {\n            app.notifyWidget.init({\n                title: 'Connected the new device KINGSTON Connected the new device KINGSTON Connected the new device KINGSTON Connected the new device KINGSTON Connected the new device KINGSTON',\n                icon: 'alert',\n                type: 'error',\n                buttons: [\n                    {\n                        value: 'Cancel',\n                        click: function () {\n                        }\n                    },\n                    {\n                        value: 'Open',\n                        click: function () {\n                        }\n                    }\n                ]\n            });\n        });\n        core.addListener('keydown:83', function () {\n            core.notify({\n                title: gettext('New device is connected'),\n                icon: 'info'\n            });\n        });\n        /* eslint-enable */\n    }\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","'use strict';\n\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base progress bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial value\n * @param {number} [config.max=100] max progress value\n * @param {number} [config.min=0] min progress value\n */\nfunction ProgressBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Max progress value.\n     *\n     * @type {number}\n     */\n    this.max = 100;\n\n    /**\n     * Min progress value.\n     *\n     * @type {number}\n     */\n    this.min = 0;\n\n    /**\n     * Initial progress position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Value of the one percent step\n     *\n     * @type {number}\n     */\n    this.step = 1;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'progressBar ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert bar line\n    this.$value = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$value.className = 'value';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nProgressBar.prototype = Object.create(Component.prototype);\nProgressBar.prototype.constructor = ProgressBar;\n\n// set component name\nProgressBar.prototype.name = 'spa-component-progress-bar';\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when progress is end and passed value is more than max value.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/progress.bar~ProgressBar#done\n * @fires module:stb/ui/progress.bar~ProgressBar#change\n */\nProgressBar.prototype.set = function ( value ) {\n    var prevValue = this.value;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n    }\n\n    // value changed but in the given range\n    if ( this.value !== value && value <= this.max && value >= this.min ) {\n        // set new value\n        this.value = value;\n\n        // get value in percents\n        value = Math.abs(this.value - this.min) / this.step;\n\n        if ( value === 100 ) {\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set progress to its maximum value.\n                 *\n                 * @event module:stb/ui/progress.bar~ProgressBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set progress bar width\n        this.$value.style.width = value + '%';\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/progress.bar~ProgressBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous progress value\n             * @property {number} curr new/current progress value\n             */\n            this.emit('change', {curr: this.value, prev: prevValue});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Init or re-init current max or/and min or/and value.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nProgressBar.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set max progress value\n    if ( config.max !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.max) !== config.max ) {\n                throw new Error(__filename + ': config.max value must be a number');\n            }\n        }\n\n        // apply\n        this.max = config.max;\n    }\n\n    // set min progress value\n    if ( config.min !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.min) !== config.min ) {\n                throw new Error(__filename + ': config.min value must be a number');\n            }\n        }\n\n        // apply\n        this.min = config.min;\n    }\n\n    if ( DEVELOP ) {\n        if ( this.min >= this.max ) {\n            throw new Error(__filename + ': this.min value must be less than this.max');\n        }\n    }\n\n    // set actual progress value\n    if ( config.value !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.value) !== config.value ) {\n                throw new Error(__filename + ': config.value must be a number');\n            }\n            if ( config.value > this.max ) {\n                throw new Error(__filename + ': config.value more than config.maximum');\n            }\n            if ( config.value < this.min ) {\n                throw new Error(__filename + ': config.value less than config.minimum');\n            }\n        }\n\n        // apply\n        this.value = config.value;\n    }\n\n    this.step = Math.abs(this.max - this.min) / 100;\n\n    // init bar size, (this.min - this.value) - calculate distance from start\n    this.$value.style.width = (Math.abs(this.min - this.value) / this.step) + '%';\n};\n\n\n// public\nmodule.exports = ProgressBar;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n\n    Page = require('stb-component-page'),\n\n    page = new Page({\n        $node: document.getElementById('pageMain')\n    });\n\n\ncore.addListener('hide', function () {\n    if ( app.visible ) {\n        core.call('hide');\n    }\n    app.visible = false;\n    app.notifyWidget.hide();\n});\n\n\nwindow.top.document.body.onoffline = document.body.ononline = function () {\n    if ( navigator.onLine ) {\n        app.notifyWidget.init({\n            title: gettext('The network cable is connected'),\n            icon: 'alert',\n            type: 'warning'\n        });\n    } else {\n        app.notifyWidget.init({\n            title: gettext('The network cable is disconnected'),\n            icon: 'alert',\n            type: 'warning',\n            buttons: [\n                {\n                    value: gettext('Ok')\n                }\n            ]\n        });\n    }\n};\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n"],"sourceRoot":""}