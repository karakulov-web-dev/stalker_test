{% extends 'layout.twig' %}
{% import '/macro/iptw_macro.twig' as main_macro %}
{% set title = ('Statistics'|trans ~ ': ' ~ 'Moderators statistics'|trans) | trans %}

{% block content %}
    <div id="iptv_list">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="pull-left">
                    {{ main_macro.get_filter_button_bar('task_type', 'id', 'title', app['taskType']) }}
                </div>
                    {{ main_macro.get_filter('archived', 'Month'|trans, 'id', 'title', app['allArhivedate'], 2) }}
                    {{ main_macro.get_filter('state', 'Status'|trans, 'id', 'title', app['taskState'], 2) }}
                    {{ main_macro.get_filter('video_quality', 'Quality'|trans, 'id', 'title', app['videoQuality'], 2, 6) }}
                    {{ main_macro.get_filter('to_user', 'Assignee'|trans, 'id', 'login', app['taskAdmin'], 2) }}
                    {#{{ main_macro.get_datepicker_double_input() }}#}
            </div>
        </div>

        <div class="row">
            <div class="box">
                {% if attribute(app, 'allVideoDuration') is defined%}
                    <div class="col-xs-10 col-sm-8 col-sm-offset-2 text-center" style="z-index: 100;">
                        <h4 id="videoduration">{{ 'Summary length, min'|trans }}: {% if app['allVideoDuration']["hd_time"] and app['allVideoDuration']["hd_time"] != -1 %} HD - {{ app['allVideoDuration']["hd_time"] }}; {% endif %} {% if app['allVideoDuration']["sd_time"] and app['allVideoDuration']["sd_time"] != -1 %} SD - {{ app['allVideoDuration']["sd_time"] }}; {% endif %}{% if not app['allVideoDuration']["sd_time"] and not app['allVideoDuration']["hd_time"] %}0{% endif %}</h4>
                    </div>
                {% endif %}
                {% if attribute(app, 'dropdownAttribute') is defined %}
                    {{ main_macro.get_dropdown_attribute(app['dropdownAttribute']) }}
                {% endif %}
                <div class="box-content">
                    <div class="box-content no-padding">
                        <div class="dataTables_processing"></div>
                        <table class="table  table-hover table-datatable" id="datatable-1">
                            {% if attribute(app, 'dropdownAttribute') is defined %}
                                {{ main_macro.get_datatable_head(app['dropdownAttribute']) }}
                            {% endif %}
                            <tbody>
                                {% if attribute(app, 'allData') is defined  and app.allData|length > 0%}
                                    <!-- Start: list_row -->
                                    {% for item in app.allData %}
                                        <tr data-taskid="{{ item.id }}">
                                            <td>{{ item.id }}</td>
                                            <td>{{ item.type }}</td>
                                            <td>{{ item.start_time|date('M d, Y H:i') }}</td>
                                            <td>{{ item.end_time|date('M d, Y H:i') }}</td>
                                            <td><a href="{{ app.request.baseUrl }}/tasks/task-detail-{% if app['task_type'] == 'karaoke' %}karaoke{% else %}video{% endif %}?id={{ item.id }}">{{ item.name }}</a></td>
                                            <td>{{ item.video_quality }}</td>
                                            <td>{{ item.duration }}</td>
                                            <td>{{ item.to_user_name }}</td>
                                            <td>
                                                <span class="txt-{{app['taskStateColor'][item.state]}}">{{ app["taskState"][item.state]['title'] }}</span>
                                                {% if not(item.archived == '0') %}
                                                    <br><span class="bg-{{app['taskStateColor'][4]}}">{{ app["allTaskState"][4]['title'] }}</span>
                                                {% endif %}
                                            </td>
                                        </tr>
                                    {% endfor %}
                                    <!-- End: list_row -->
                                {% endif %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                    
    <script type="text/javascript" defer>

        function TestTable1() {
            $('#datatable-1').on('xhr.dt', function (e, settings, json) {
                var taskState={
                {% if attribute(app,'allTaskState') is defined %}
                    {% for key, item in app.allTaskState %}
                        {% if not loop.last %}'{{ key }}':'{{item.title}}',{% else %}'{{ key }}':'{{item.title}}'{% endif %}
                    {% endfor %}
                {% endif%}
                };
                var taskStateColor=[
                {% if attribute(app,'taskStateColor') is defined %}
                    {% for item in app.taskStateColor %}
                        {% if not loop.last %}'{{item}}',{% else %}'{{item}}'{% endif %}
                    {% endfor %}
                {% endif%}
                ];
                if (typeof (json.data) == 'object') {
                    var date;
                    for (var i in json.data) {
                        var id = json.data[i].id;
                        var state = json.data[i].state;
                        var name = json.data[i].name;
                        json.data[i].name = '<a href="{{ app.request.baseUrl }}/tasks/task-detail-{% if app['task_type'] == 'karaoke' %}karaoke{% else %}video{% endif %}?id='+ id + '">' + name + '</a>';
                        
                        json.data[i].state = '<span class="txt-' + taskStateColor[state] + '">'+taskState[state]+'</span>';
                        if (json.data[i].archived != '0'){
                            json.data[i].state += '<br><span class="bg-' + taskStateColor[4] + '">'+taskState[4]+'</span>';
                        }
                        date = json.data[i]['start_time'];
                        if (date > 0) {
                            date = new Date(date * 1000);
                            json.data[i]['start_time'] = date.toLocaleFormat("%b %d, %Y %H:%M");
                        }
                        date = json.data[i]['end_time'];
                        if (date > 0) {
                            date = new Date(date * 1000);
                            json.data[i]['end_time'] = date.toLocaleFormat("%b %d, %Y %H:%M");
                        }
                        
                    }
                }
                if(typeof(json.videotime != 'undefined') && json.videotime!=-1) {
                    var hd_str = (typeof(json.videotime.hd_time) != "undefined" && json.videotime.hd_time != -1 && json.videotime.hd_time) ? " HD - " + json.videotime.hd_time + "; ": "";
                    var sd_str = (typeof(json.videotime.sd_time) != "undefined" && json.videotime.sd_time  != -1 && json.videotime.sd_time) ? " SD - " + json.videotime.sd_time + "; ": "";
                    var time_str = (hd_str || sd_str )? hd_str + sd_str: " 0 ";
                    $('#videoduration').text($('#videoduration').text().replace(/\:.*$/ig, ": " + time_str));
                }
                
            }).dataTable({
                "processing": true,   
                "serverSide": true,
                "ajax": {
                    "url": "{{ app.request.baseUrl }}/{{ app.controller_alias }}/stat-moderators-list-json",
                    "data": function (d) {
                        var params = $.parseParams(window.location.href.split('?')[1] || ''); //window.location.href.split('?')[1] || ''
                        for (var i in params) {
                            d[i] = params[i];
                        }
                        $('input[id^="datepicker_"]').each(function () {
                            d['filters[' + $(this).attr("id").replace("datepicker_", "interval_") + ']'] = $(this).val();
                        });
                    }
                },
                "deferLoading": [ {{ app.recordsFiltered }}, {{ app.totalRecords }} ],
                "language": {
                    "url": "{{ app.datatable_lang_file }}"
                },
                "columns": [
                    {"data": 'id'},
                    {"data": 'type'},
                    {"data": 'start_time'},
                    {"data": 'end_time'},
                    {"data": 'name'},
                    {"data": 'video_quality'},
                    {"data": 'duration'},
                    {"data": 'to_user_name'},
                    {"data": 'state'}
                ],
                "bFilter": true,
                "bPaginate": true,
				"fnDrawCallback": function() {  
					var paginateRow = $(this).parent().prev().children('div.dataTables_paginate');
					var pageCount = Math.ceil((this.fnSettings().fnRecordsDisplay()) / this.fnSettings()._iDisplayLength);
					if (pageCount > 1)  {$("#datatable-1_paginate").css("display", "block");} else { $("#datatable-1_paginate").css("display", "none");  }
				},
                "bInfo": true,
                "columnDefs": [
                    {"searchable": false, "targets": [-1, -2, 1]},
                    {"sortable": false, "targets": [1]}
                ]
            }).prev('.dataTables_processing').hide('');
            $("#attribute_set input[type='checkbox']").each(function(index){
                $("#datatable-1").dataTable().fnSetColumnVis( index - 1, $(this).prop('checked') );
            });
        }

        function yelp() {
            $(document).ready(function () {
                $(document).on('click', "a.main_ajax[disabled!='disabled']", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var sendData = $(this).data();
                    sendData['task_type'] = '{{ app['task_type'] }}';
                    ajaxPostSend($(this).attr('href'), sendData, false, false);
                    $(this).closest('div.open').removeClass('open');
                    return false;
                });

                $("#form_reset").on('click', function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    $(this).closest('form').get(0).reset();
    {#                    $("#cmd_data").find("tr:visible").remove();#}
                    return false;
                });
                {{ main_macro.get_datepicker_js_script() }}
                LoadDataTablesScripts(TestTable1);
            });
        }

        document.addEventListener("DOMContentLoaded", yelp, false);

    </script>
{% endblock %}